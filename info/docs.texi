@c Auto-generated, do not hand-edit.
@menu
* amixer::Set Audio Volume from Emacs.
* dectalk-voices::Dectalk Voice  Codes.
* dom-addons::dom.el addons.
* dtk-speak::Interface to speech server.
* emacspeak::The Complete Audio Desktop.
* emacspeak-2048::Speech-enable 2048 Game.
* emacspeak-abc-mode::Speech-enable ABC.
* emacspeak-add-log::Speech-enable add-log.
* emacspeak-advice::Advice Emacs Core.
* emacspeak-amark::BookMarks For Audio.
* emacspeak-analog::
* emacspeak-annotate::Annotations.
* emacspeak-apt-sources::speech-enable apt.
* emacspeak-arc::Speech enable archive-mode.
* emacspeak-auctex::Speech enable AucTeX --.
* emacspeak-bbdb::Speech enable BBDB.
* emacspeak-bibtex::Speech enable bibtex.
* emacspeak-bookmark::Speech enable bookmark.
* emacspeak-bookshare::BOOKSHARE client.
* emacspeak-browse-kill-ring::kill-ring.
* emacspeak-bs::speech-enable bs.
* emacspeak-buff-menu::Speech enable buff.
* emacspeak-c::Speech enable C, C++.
* emacspeak-calc::Speech enable Calc.
* emacspeak-calculator::Extend calculator.
* emacspeak-calendar::Speech enable Calendar.
* emacspeak-calibredb::CALIBREDB.
* emacspeak-chess::Speech-enable CHESS.
* emacspeak-cider::Speech-enable CIDER.
* emacspeak-ciel::Speech-enable CIEL.
* emacspeak-clojure::Speech-enable CLOJURE.
* emacspeak-cmuscheme::CMUScheme.
* emacspeak-combobulate::Speech-enable.
* emacspeak-comint::Speech-enable COMINT.
* emacspeak-company::Speech-enable COMPANY.
* emacspeak-compile::Speech enable compile.
* emacspeak-cperl::Speech enable CPerl.
* emacspeak-custom::Speech enable custom.
* emacspeak-dbus::DBus On Emacspeak.
* emacspeak-deadgrep::Speech-enable DEADGREP.
* emacspeak-debugger::Speech-enable DEBUG.
* emacspeak-desktop::Speech-enable desktop.
* emacspeak-devdocs::Speech-enable DEVDOCS.
* emacspeak-dictionary::dictionaries.
* emacspeak-diff-mode::Speech-enable DIFF.
* emacspeak-dired::Speech enable Dired Mode.
* emacspeak-dismal::Speech enable Dismal.
* emacspeak-dumb-jump::DUMB-JUMP.
* emacspeak-eat::Speech-enable EAT.
* emacspeak-ecb::speech-enable ECB.
* emacspeak-ediff::Speech enable  ediff.
* emacspeak-eglot::Speech-enable EGLOT.
* emacspeak-ein::Speech-enable EIN.
* emacspeak-elfeed::Speech-enable ELFEED.
* emacspeak-elisp-refs::ELISP-REFS.
* emacspeak-ellama::Speech-enable ELLAMA.
* emacspeak-elpher::Speech-enable ELPHER.
* emacspeak-elpy::Speech-enable ELPY.
* emacspeak-elscreen::ELSCREEN.
* emacspeak-emms::Speech-enable EMMS.
* emacspeak-empv::Speech-enable EMPV.
* emacspeak-enriched::Audio FormatRichtext.
* emacspeak-entertain::Speech enable games.
* emacspeak-enwc::Speech-enable ENWC.
* emacspeak-epa::Speech-enable GPG Helper.
* emacspeak-eperiodic::Periodic Table.
* emacspeak-epub::epubs for  desktop.
* emacspeak-erc::speech-enable erc.
* emacspeak-eshell::Speech-enable EShell.
* emacspeak-ess::Speech-enable ESS.
* emacspeak-etable::Speech enable table.el.
* emacspeak-eterm::Speech enable eterm.
* emacspeak-eudc::Speech enable  LDAP.
* emacspeak-evil::Speech-enable EVIL.
* emacspeak-eww::Speech-enable EWW Browser.
* emacspeak-extras::Speech-enable EXTRAS.
* emacspeak-exwm::Speech-enable EXWM.
* emacspeak-feeds::Atom, RSS.
* emacspeak-ffap::Speech-enable FFAP.
* emacspeak-ffip::Speech-enable FFIP.
* emacspeak-filtertext::filter text.
* emacspeak-flycheck::Speech-enable FLYCHECK.
* emacspeak-flymake::Speech-enable FLYMAKE.
* emacspeak-flyspell::Speech enable flyspell.
* emacspeak-folding::
* emacspeak-forge::Speech-enable FORGE.
* emacspeak-forms::Speech enable  forms mode.
* emacspeak-geiser::Speech-enable GEISER.
* emacspeak-gh-explorer::GH-EXPLORER.
* emacspeak-gnuplot::speech-enable gnuplot.
* emacspeak-gnus::Speech enable Gnus.
* emacspeak-go-mode::Speech-enable GO-MODE.
* emacspeak-gomoku::Speech enable Gomoku.
* emacspeak-google::Google Search Tools.
* emacspeak-gridtext::Filter columnar text.
* emacspeak-gtags::Speech-enable GTAGS.
* emacspeak-gud::Speech enable debugger.
* emacspeak-haskell::Speech-enable HASKELL.
* emacspeak-helm::Speech-enable HELM.
* emacspeak-hide::Hide/Expose Text blocks.
* emacspeak-hide-lines::HIDE-LINES.
* emacspeak-hideshow::speech-enable hideshow.
* emacspeak-hydra::Speech-Enable hydra.
* emacspeak-ibuffer::speech-enable ibuffer.
* emacspeak-ido::speech-enable ido.
* emacspeak-iedit::Speech-enable IEDIT.
* emacspeak-indium::Speech-enable INDIUM.
* emacspeak-info::Speech enable Info --.
* emacspeak-ispell::Speech enable Ispell.
* emacspeak-ivy::Speech-enable IVY.
* emacspeak-jabber::Speech-Enable jabber.
* emacspeak-jdee::Speech enable JDEE.
* emacspeak-journalctl::JOURNALCTL.
* emacspeak-js2::Speech-enable JS2.
* emacspeak-keymap::Setup   keybindings.
* emacspeak-kmacro::Speech-enable KMacros.
* emacspeak-librivox::LIBRIVOX API client.
* emacspeak-lispy::Speech-enable LISPY.
* emacspeak-lua::Speech-enable LUA.
* emacspeak-m-player::Media Player.
* emacspeak-magit::Speech-enable MAGIT.
* emacspeak-make-mode::Speech enable make.
* emacspeak-man::Speech enable Man.
* emacspeak-markdown::Speech-enable MARKDOWN.
* emacspeak-maths::Audio-Formatted Maths.
* emacspeak-message::Speech enable Message.
* emacspeak-metapost::speech-enable metapost.
* emacspeak-midge::Speech-enable Midge.
* emacspeak-mines::Speech-enable MINES.
* emacspeak-mspools::Speech enable MSpools.
* emacspeak-muggles::Convenience Hydras.
* emacspeak-muse::Speech-enable Muse.
* emacspeak-net-utils::net-utils.
* emacspeak-newsticker::newsticker.
* emacspeak-notmuch::Speech-enable NOTMUCH.
* emacspeak-nov::Speech-enable NOV.
* emacspeak-nxml::Speech enable nxml mode.
* emacspeak-ocr::ocr Front-end desktop.
* emacspeak-org::Speech-enable org.
* emacspeak-orgalist::Speech-enable ORGALIST.
* emacspeak-origami::Speech-enable ORIGAMI.
* emacspeak-outline::Speech enable Outline.
* emacspeak-package::Speech-enable PACKAGE.
* emacspeak-paradox::Speech-enable PARADOX.
* emacspeak-perl::Speech enable Perl Mode.
* emacspeak-pianobar::Speech-enable Pandora.
* emacspeak-pipewire::Speech-enable PIPEWIRE.
* emacspeak-popup::Speech-enable POPUP.
* emacspeak-preamble::standard  include.
* emacspeak-proced::Speech-enable PROCED.
* emacspeak-project::Speech-enable PROJECT.
* emacspeak-projectile::PROJECTILE.
* emacspeak-pronounce::pronunciations.
* emacspeak-py::Speech enable Python.
* emacspeak-pydoc::Speech-enable PYDOC.
* emacspeak-python::Speech enable Python.
* emacspeak-racer::Speech-enable RACER.
* emacspeak-racket::Speech-enable RACKET.
* emacspeak-re-builder::re-builder.
* emacspeak-reftex::speech enable reftex.
* emacspeak-related::Speech-enable RELATED.
* emacspeak-rg::Speech-enable RG.
* emacspeak-rmail::Speech enable RMail.
* emacspeak-rpm-spec::Speech enable rpm spec.
* emacspeak-rst::Speech-enable RST.
* emacspeak-ruby::Speech enable Ruby Mode.
* emacspeak-rust-mode::Speech-enable RUST.
* emacspeak-sage::Speech-enable SAGE.
* emacspeak-sdcv::Speech-enable SDCV.
* emacspeak-selectrum::SELECTRUM.
* emacspeak-ses::Speech-enable ses.
* emacspeak-setup::Setup Emacspeak --.
* emacspeak-sgml-mode::Speech enable SGML.
* emacspeak-sh-script::Speech enable script.
* emacspeak-shx::Speech-enable SHX.
* emacspeak-slime::Speech-enable SLIME.
* emacspeak-smartparens::SMARTPARENS.
* emacspeak-solitaire::Solitaire.
* emacspeak-sounds::auditory icons.
* emacspeak-speak::Core Speech Lib.
* emacspeak-speedbar::speedbar -.
* emacspeak-sql::Speech enable sql-mode.
* emacspeak-sudoku::Play SuDoku.
* emacspeak-supercite::Speech enable SC.
* emacspeak-syslog::Speech-enable SYSLOG.
* emacspeak-tab-bar::Speech-enable tab-bar.
* emacspeak-table::Table data model.
* emacspeak-table-ui::Table Navigation UI.
* emacspeak-tabulate::Handle table data.
* emacspeak-tabulated-list::Speech-enable.
* emacspeak-tar::Speech enable Tar Mode.
* emacspeak-tcl::Speech enable TCL.
* emacspeak-tempo::Speech enable tempo.
* emacspeak-tetris::Tetris.
* emacspeak-texinfo::Speech enable texinfo.
* emacspeak-threes::Speech-enable THREES.
* emacspeak-tide::Speech-enable TIDE.
* emacspeak-todo-mode::speech-enable todo.
* emacspeak-transient::TRANSIENT.
* emacspeak-treesit::Speech-enable TREESIT.
* emacspeak-typo::Speech-enable TYPO.
* emacspeak-url-template::URI templates.
* emacspeak-vdiff::Speech-enable VDIFF.
* emacspeak-vertico::Speech-enable Vertico.
* emacspeak-view::Speech enable View mode -.
* emacspeak-vm::Speech enable VMMail.
* emacspeak-vterm::Speech-enable VTERM.
* emacspeak-vuiet::Speech-enable VUIET.
* emacspeak-wdired::Speech-enable wdired.
* emacspeak-we::Transform WebUsing XSLT.
* emacspeak-websearch::search utilities.
* emacspeak-webspace::Webspaces.
* emacspeak-widget::Speech enable widgets.
* emacspeak-windmove::windmove.
* emacspeak-winring::Speech enable WinRing.
* emacspeak-wizards::Magic.
* emacspeak-woman::Speech-enable WOMAN.
* emacspeak-xkcd::Speech-enable XKCD.
* emacspeak-xref::Speech-enable XREF.
* emacspeak-xslt::XSLT.
* emacspeak-yaml::Speech-enable YAML.
* emacspeak-yasnippet::YASNIPPET.
* espeak-voices::Define  Espeak tags.
* extra-muggles::Additional Hydras.
* g-utils::Google Client Utilities.
* gm-nnir::Searching GMail Using NNIR.
* gmaps::Google Maps.
* ladspa::Ladspa Tools For Emacs.
* light::Control Brightness.
* mac-voices::Define  Mac tags.
* omaps::Open street  Maps.
* outloud-voices::Define  OutLoud tags.
* plain-voices::No Voice lock voices.
* soundscape::Soundscapes.
* sox::An Audio Work-Bench.
* sox-gen::Binaural Beats And More Using SoX.
* tetris::Tetris for Emacs.
* voice-defs::Define voices for voice-lock.
* voice-setup::Setup voices for voice-lock.
* xbacklight::Brightness.
* URL Templates ::
@end menu

@node Emacspeak Commands And Options 

@chapter Emacspeak Commands And Options 

@include intro-docs.texi

This chapter documents a total of 1155 commands and 146 options.

@node amixer
@section amixer

Provide an emacs front-end to amixer,
the sound mixer in ALSA that is used to configure the audio device.

The main entry point is command @code{emacspeak-audio-setup} bound
to @kbd{C-e)}. When called for the first time, this command
builds up a database of available controls on the default audio
device. These control names are then available for completion in
the minibuffer. Pick a desired control, e.g., "master playback
volume", and this displays a prompt with the current value. Enter
the new value and press <RETURN>. To reset all controls to their
default values, Press @kbd{C-j}.

@subsection Amixer Commands

@subsubsection amixer
@deffn {Command} amixer  (&optional refresh)
@table @kbd
@item C-e (
@kindex C-e (
@end table

@findex amixer

@format
ALSA settings.
Interactive prefix arg refreshes cache.

(fn &optional REFRESH)
@end format
@end deffn

@subsubsection amixer-query
@deffn {Command} amixer-query  (&optional refresh)
@findex amixer-query

@format
Show setting for specified control.

(fn &optional REFRESH)
@end format
@end deffn

@subsubsection amixer-store
@deffn {Command} amixer-store   
@findex amixer-store

@format
Persist  amixer.
@end format
@end deffn

@subsubsection amixer-volume-adjust
@deffn {Command} amixer-volume-adjust   
@table @kbd
@item C-e 4
@kindex C-e 4
@item C-e 3
@kindex C-e 3
@end table

@findex amixer-volume-adjust

@format
Adjust volume continuously.
Press C-e 3 to lower volume; C-e 4 to increase it. Subsequent presses
of 3 and 4 lower or raise volume.
@end format
@end deffn

@subsubsection amixer-volume-down
@deffn {Command} amixer-volume-down  (&optional prompt)
@table @kbd
@item <XF86AudioLowerVolume>
@kindex <XF86AudioLowerVolume>
@item C-<f1>
@kindex C-<f1>
@end table

@findex amixer-volume-down

@format
Lower Master volume by amixer-volume-step.
Interactive prefix arg ‘PROMPT’ reads percentage as a number

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection amixer-volume-up
@deffn {Command} amixer-volume-up  (&optional prompt)
@table @kbd
@item <XF86AudioRaiseVolume>
@kindex <XF86AudioRaiseVolume>
@item C-<f2>
@kindex C-<f2>
@end table

@findex amixer-volume-up

@format
Raise Master volume by amixer-volume-step.
Interactive prefix arg ‘PROMPT’ reads percentage as a number

(fn &optional PROMPT)
@end format
@end deffn

@subsection amixer Options

@defvar {User Option} amixer-device
ALSA Control Device.

Default Value: 

@verbatim

"default"

@end verbatim

@end defvar

@defvar {User Option} amixer-volume-step
Step-size for volume change.

Default Value: 

@verbatim

1

@end verbatim

@end defvar

@node dectalk-voices
@section dectalk-voices

This module defines the various voices used in voice-lock mode.
This module is Dectalk specific.

@subsection Dectalk-Voices Commands

@subsubsection dectalk
@deffn {Command} dectalk   
@table @kbd
@item C-e d C-d
@kindex C-e d C-d
@end table

@findex dectalk

@format
Dectalk TTS.
@end format
@end deffn

@subsubsection dectalk-soft
@deffn {Command} dectalk-soft   
@table @kbd
@item C-e d C-s
@kindex C-e d C-s
@end table

@findex dectalk-soft

@format
Software Dectalk TTS.
@end format
@end deffn

@subsection dectalk-voices Options

@defvar {User Option} dectalk-default-speech-rate
Default speech rate . 

Default Value: 

@verbatim

225

@end verbatim

@end defvar

@node dom-addons
@section dom-addons

Useful additional functions for dom.el

@node dtk-speak
@section dtk-speak

Defines the TTS interface.
Here, prefix dtk is synonymous with tts.

@subsection Dtk-Speak Commands

@subsubsection dtk-add-cleanup-pattern
@deffn {Command} dtk-add-cleanup-pattern  (&optional delete)
@table @kbd
@item C-e d a
@kindex C-e d a
@end table

@findex dtk-add-cleanup-pattern

@format
Add this pattern to the list of repeating patterns.
  Optional interactive prefix arg deletes
this pattern if previously added.    

(fn &optional DELETE)
@end format
@end deffn

@subsubsection dtk-cloud
@deffn {Command} dtk-cloud   
@table @kbd
@item C-e d C-c
@kindex C-e d C-c
@end table

@findex dtk-cloud

@format
Select  Cloud TTS server.
@end format
@end deffn

@subsubsection dtk-local-server
@deffn {Command} dtk-local-server  (program &optional prompt-port)
@table @kbd
@item C-e d L
@kindex C-e d L
@end table

@findex dtk-local-server

@format
Select and start an local speech server interactively. Local server
lets Emacspeak on a remote host connect back via SSH port forwarding
for instance. Argument PROGRAM specifies the speech server
program. Port defaults to dtk-local-server-port

(fn PROGRAM &optional PROMPT-PORT)
@end format
@end deffn

@subsubsection dtk-notify-initialize
@deffn {Command} dtk-notify-initialize   
@table @kbd
@item C-e d C-n
@kindex C-e d C-n
@end table

@findex dtk-notify-initialize

@format
Initialize notification TTS stream.
@end format
@end deffn

@subsubsection dtk-notify-stop
@deffn {Command} dtk-notify-stop   
@table @kbd
@item C-e d .
@kindex C-e d .
@end table

@findex dtk-notify-stop

@format
Stop  speech on notification stream.
@end format
@end deffn

@subsubsection dtk-rate-adjust
@deffn {Command} dtk-rate-adjust   
@table @kbd
@item C-e d -
@kindex C-e d -
@item C-e d +
@kindex C-e d +
@item C-e d =
@kindex C-e d =
@end table

@findex dtk-rate-adjust

@format
Adjust speech rate in current buffer, inspired by
  text-scale-adjust.   Invoke this command via C-e d =/+ or
C-impel-d -. Pressing =,+, or - immediately continues to adjust
the speech rate.  Call when on a non-blank line to preview the effectt
@end format
@end deffn

@subsubsection dtk-reset-state
@deffn {Command} dtk-reset-state   
@table @kbd
@item C-e d R
@kindex C-e d R
@end table

@findex dtk-reset-state

@format
Reset TTS engine.
@end format
@end deffn

@subsubsection dtk-select-server
@deffn {Command} dtk-select-server  (program)
@table @kbd
@item C-e d d
@kindex C-e d d
@end table

@findex dtk-select-server

@format
Select  speech server ‘program’. 

(fn PROGRAM)
@end format
@end deffn

@subsubsection dtk-set-character-scale
@deffn {Command} dtk-set-character-scale  (factor &optional prefix)
@table @kbd
@item C-e d f
@kindex C-e d f
@end table

@findex dtk-set-character-scale

@format
Set character scale FACTOR for   speech rate.
Speech rate is scaled by this factor when speaking characters.
Not presently used by either Dectalk or Viavoice TTS.
Interactive PREFIX arg means set the global default value, and
then set the current local value to the result.

(fn FACTOR &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-set-chunk-separator-syntax
@deffn {Command} dtk-set-chunk-separator-syntax  (s)
@table @kbd
@item C-e d C-j
@kindex C-e d C-j
@end table

@findex dtk-set-chunk-separator-syntax

@format
Interactively set how text is split in chunks.
Argument S specifies the syntax class.

(fn S)
@end format
@end deffn

@subsubsection dtk-set-language
@deffn {Command} dtk-set-language  (lang)
@table @kbd
@item C-e d S
@kindex C-e d S
@end table

@findex dtk-set-language

@format
Set language. If your server supports it, also set the synthesis
 voice, using the syntax language:voice , where language can be
 omitted.

(fn LANG)
@end format
@end deffn

@subsubsection dtk-set-next-language
@deffn {Command} dtk-set-next-language   
@table @kbd
@item C-e d N
@kindex C-e d N
@end table

@findex dtk-set-next-language

@format
Switch to  next  language
@end format
@end deffn

@subsubsection dtk-set-predefined-speech-rate
@deffn {Command} dtk-set-predefined-speech-rate  (&optional prefix)
@table @kbd
@item C-e d 9
@kindex C-e d 9
@item C-e d 8
@kindex C-e d 8
@item C-e d 7
@kindex C-e d 7
@item C-e d 6
@kindex C-e d 6
@item C-e d 5
@kindex C-e d 5
@item C-e d 4
@kindex C-e d 4
@item C-e d 3
@kindex C-e d 3
@item C-e d 2
@kindex C-e d 2
@item C-e d 1
@kindex C-e d 1
@item C-e d 0
@kindex C-e d 0
@end table

@findex dtk-set-predefined-speech-rate

@format
Set speech rate to one of nine predefined levels.
Interactive PREFIX arg says to set the rate globally.
Formula used is:
rate = dtk-speech-rate-base + dtk-speech-rate-step * level.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-set-preferred-language
@deffn {Command} dtk-set-preferred-language  (alias lang)
@findex dtk-set-preferred-language

@format
Set language by alias.

(fn ALIAS LANG)
@end format
@end deffn

@subsubsection dtk-set-previous-language
@deffn {Command} dtk-set-previous-language   
@table @kbd
@item C-e d P
@kindex C-e d P
@end table

@findex dtk-set-previous-language

@format
Switch to  previous  language
@end format
@end deffn

@subsubsection dtk-set-punctuations
@deffn {Command} dtk-set-punctuations  (mode &optional prefix)
@table @kbd
@item C-e d p
@kindex C-e d p
@end table

@findex dtk-set-punctuations

@format
Set punctuation mode to MODE.
Possible values are ‘some’, ‘all’, or ‘none’.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.

(fn MODE &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-set-punctuations-to-all
@deffn {Command} dtk-set-punctuations-to-all  (&optional prefix)
@findex dtk-set-punctuations-to-all

@format
Set punctuation  mode to all.
Interactive PREFIX arg sets punctuation mode globally.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-set-punctuations-to-some
@deffn {Command} dtk-set-punctuations-to-some  (&optional prefix)
@findex dtk-set-punctuations-to-some

@format
Set punctuation  mode to some.
Interactive PREFIX arg sets punctuation mode globally.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-set-rate
@deffn {Command} dtk-set-rate  (rate &optional prefix)
@table @kbd
@item C-e d r
@kindex C-e d r
@end table

@findex dtk-set-rate

@format
Set speaking RATE.
Interactive PREFIX arg means set   the global default value, and then set the
current local  value to the result.

(fn RATE &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-stop
@deffn {Command} dtk-stop  (&optional all)
@table @kbd
@item <fn>
@kindex <fn>
@item C-e s
@kindex C-e s
@end table

@findex dtk-stop

@format
Stop speech.  Optional arg ‘all’ or interactive call silences
notification stream as well.

(fn &optional ALL)
@end format
@end deffn

@subsubsection dtk-toggle-caps
@deffn {Command} dtk-toggle-caps  (&optional prefix)
@table @kbd
@item C-e d c
@kindex C-e d c
@end table

@findex dtk-toggle-caps

@format
Toggle dtk-caps.
Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
@end format
@end deffn

@subsubsection dtk-toggle-punctuation-mode
@deffn {Command} dtk-toggle-punctuation-mode  (&optional prefix)
@table @kbd
@item C-e d ,
@kindex C-e d ,
@end table

@findex dtk-toggle-punctuation-mode

@format
Toggle punctuation mode between "some" and "all".
Interactive PREFIX arg makes the new setting global.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection dtk-toggle-quiet
@deffn {Command} dtk-toggle-quiet  (&optional prefix)
@table @kbd
@item C-e d q
@kindex C-e d q
@end table

@findex dtk-toggle-quiet

@format
Toggles state of  dtk-quiet.
Turning on this switch silences speech.  Optional interactive
prefix arg causes this setting to become global.
@end format
@end deffn

@subsubsection dtk-toggle-speak-nonprinting-chars
@deffn {Command} dtk-toggle-speak-nonprinting-chars  (&optional prefix)
@table @kbd
@item C-e d n
@kindex C-e d n
@end table

@findex dtk-toggle-speak-nonprinting-chars

@format
Toggle speak-nonprinting-chars.
Interactive PREFIX arg means toggle the global default
value, and then set the current local value to the result.
@end format
@end deffn

@subsubsection dtk-toggle-split-caps
@deffn {Command} dtk-toggle-split-caps  (&optional prefix)
@table @kbd
@item C-e d s
@kindex C-e d s
@end table

@findex dtk-toggle-split-caps

@format
Toggle split caps mode.
Split caps mode is useful when reading Hungarian notation in
program source code.  Interactive PREFIX arg means toggle the
global default value, and then set the current local value to the
result.
@end format
@end deffn

@subsubsection dtk-toggle-splitting-on-white-space
@deffn {Command} dtk-toggle-splitting-on-white-space   
@table @kbd
@item C-e d SPC
@kindex C-e d SPC
@end table

@findex dtk-toggle-splitting-on-white-space

@format
Toggle splitting of speech on white space. 
@end format
@end deffn

@subsubsection dtk-toggle-strip-octals
@deffn {Command} dtk-toggle-strip-octals  (&optional prefix)
@table @kbd
@item C-e d o
@kindex C-e d o
@end table

@findex dtk-toggle-strip-octals

@format
Toggle stripping of octals.
Interactive prefix arg means
 toggle the global default value, and then set the current local
value to the result.
@end format
@end deffn

@subsubsection dtk-unicode-customize-char
@deffn {Command} dtk-unicode-customize-char  (char replacement)
@findex dtk-unicode-customize-char

@format
Add a custom replacement string for CHAR.

When called interactively, CHAR defaults to the character after point.

(fn CHAR REPLACEMENT)
@end format
@end deffn

@subsubsection dtk-unicode-uncustomize-char
@deffn {Command} dtk-unicode-uncustomize-char  (char)
@findex dtk-unicode-uncustomize-char

@format
Delete custom replacement for CHAR.

When called interactively, CHAR defaults to the character after point.

(fn CHAR)
@end format
@end deffn

@subsubsection tts-restart
@deffn {Command} tts-restart   
@table @kbd
@item C-e C-s
@kindex C-e C-s
@end table

@findex tts-restart

@format
Restart TTS server.
@end format
@end deffn

@subsubsection tts-speak-version
@deffn {Command} tts-speak-version   
@table @kbd
@item C-e d V
@kindex C-e d V
@end table

@findex tts-speak-version

@format
Speak version.
@end format
@end deffn

@subsection dtk-speak Options

@defvar {User Option} dtk-allcaps-prefix
Prefix used to indicate AllCaps

Default Value: 

@verbatim

#(" acc " 0 5 (personality acss-p3-s1-r3))

@end verbatim

@end defvar

@defvar {User Option} dtk-caps-prefix
Prefix used to indicate capitalization

Default Value: 

@verbatim

#("cap" 0 3 (personality acss-p3-s1-r3))

@end verbatim

@end defvar

@defvar {User Option} dtk-cleanup-repeats
List of repeating patterns to clean up.
Use ‘dtk-add-cleanup-pattern’
 bound to C-e d a  to add  patterns.

More than 3 consecutive occurrences
of a  pattern   is
replaced with a repeat count. 

Default Value: 

@verbatim

(". " "."
 "_"
 "-"
 "="
 "/"
 "+"
 "*"
 ":"
 ";"
 "%"
 "\\/"
 "/\\"
 "{"
 "}"
 "~"
 "$"
 ")"
 "#"
 "<>"
 "^"
 "<"
 ">")

@end verbatim

@end defvar

@defvar {User Option} dtk-cloud-server
Set this to your preferred cloud TTS server.

Default Value: 

@verbatim

"cloud-outloud"

@end verbatim

@end defvar

@defvar {User Option} dtk-local-engine
Engine we use  for our local TTS  server.

Default Value: 

@verbatim

"outloud"

@end verbatim

@end defvar

@defvar {User Option} dtk-speech-rate-base
Value of lowest speech rate.

Default Value: 

@verbatim

50

@end verbatim

@end defvar

@defvar {User Option} dtk-speech-rate-step
Speech rate step used by ‘dtk-set-predefined-speech-rate’.

Default Value: 

@verbatim

8

@end verbatim

@end defvar

@defvar {User Option} dtk-unicode-character-replacement-alist
Replacements for  characters.

Default Value: 

@verbatim

((150 . "-")
 (9473 . "-")
 (9475 . "|")
 (176 . " degrees ")
 (8451 . "Degree C")
 (8457 . "Degree F ")
 (8220 . "\"")
 (8221 . "\"")
 (8902 . "*")
 (173 . "-")
 (8216 . "`")
 (8217 . "'")
 (8208 . " dash ")
 (8211 . " dash dash  ")
 (8212 . " em dash  ")
 (8202 . " ")
 (65279 . " ")
 (8204 . "")
 (8203 . " ")
 (8201 . " ")
 (8213 . "----")
 (8214 . "||")
 (8230 . "...")
 (8226 . " bullet ")
 (149 . " ... ")
 (8482 . "TM")
 (64256 . "ff")
 (64257 . "fi")
 (64258 . "fl")
 (64259 . "ffi")
 (64260 . "Ffl"))

@end verbatim

@end defvar

@defvar {User Option} dtk-unicode-name-transformation-rules-alist
Alist of character name transformation rules.

Default Value: 

@verbatim

(("BOX DRAWING" lambda (_ignored) ".")
 ("^Mathematical Sans-Serif\\( small\\| capital\\)? letter \\(.*\\)$" lambda
  (s)
  (match-string 2 s))
 ("^greek\\( small\\| capital\\)? letter \\(.*\\)$" lambda
  (s)
  (match-string 2 s))
 ("^latin\\( small\\| capital\\)? letter \\(.*\\)$" lambda
  (s)
  (match-string 2 s))
 ("^DEVANAGARI \\(sign\\|vowel sign\\|letter\\)? \\(.*\\)$" lambda
  (s)
  (match-string 2 s)))

@end verbatim

@end defvar

@defvar {User Option} dtk-unicode-untouched-charsets
Characters of these charsets are  ignored by
  dtk-unicode-replace-chars.

Default Value: 

@verbatim

(ascii latin-iso8859-1)

@end verbatim

@end defvar

@defvar {User Option} dtk-use-tones
Toggle tones. 

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} tts-notification-device
Virtual sound device to use for notifications stream.
Set to nil to disable a separate Notification stream.

Default Value: 

@verbatim

"tts_mono_right"

@end verbatim

@end defvar

@node emacspeak
@section emacspeak

Emacspeak extends Emacs to be a fully functional audio desktop.
This is the main emacspeak module.
It actually does very little:
It sets up Emacs to load package-specific
Emacspeak modules as each package is loaded.
It implements function emacspeak which loads the rest of the system.

@subsection Emacspeak Commands

@subsubsection emacspeak-orca-toggle
@deffn {Command} emacspeak-orca-toggle   
@table @kbd
@item s-o
@kindex s-o
@end table

@findex emacspeak-orca-toggle

@format
Toggle state of orca.
@end format
@end deffn

@subsection emacspeak Options

@defvar {User Option} emacspeak-soundscapes
Whether we should turn on soundscapes on startup.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-2048
@section emacspeak-2048

Speech-enable 2048 Game

@subsection Emacspeak-2048 Commands

@subsubsection emacspeak-2048-add-column
@deffn {Command} emacspeak-2048-add-column   
@findex emacspeak-2048-add-column

@format
Add a column  to the current board.
@end format
@end deffn

@subsubsection emacspeak-2048-add-row
@deffn {Command} emacspeak-2048-add-row   
@findex emacspeak-2048-add-row

@format
Add a row  to the current board.
@end format
@end deffn

@subsubsection emacspeak-2048-drop-column
@deffn {Command} emacspeak-2048-drop-column   
@findex emacspeak-2048-drop-column

@format
Drop last  row  from  the current board.
@end format
@end deffn

@subsubsection emacspeak-2048-drop-row
@deffn {Command} emacspeak-2048-drop-row   
@findex emacspeak-2048-drop-row

@format
Drop last  row  from  the current board.
@end format
@end deffn

@subsubsection emacspeak-2048-export
@deffn {Command} emacspeak-2048-export  (&optional prompt)
@findex emacspeak-2048-export

@format
Exports game stack to a file.
Optional interactive prefix arg prompts for a file.
Note that the file is overwritten silently.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-2048-import
@deffn {Command} emacspeak-2048-import  (&optional prompt)
@findex emacspeak-2048-import

@format
Import game.
Optional interactive prefix arg prompts for a filename.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-2048-pop-state
@deffn {Command} emacspeak-2048-pop-state   
@findex emacspeak-2048-pop-state

@format
Reset state from stack.
@end format
@end deffn

@subsubsection emacspeak-2048-prune-stack
@deffn {Command} emacspeak-2048-prune-stack  (drop)
@findex emacspeak-2048-prune-stack

@format
Prune game stack to specified length.

(fn DROP)
@end format
@end deffn

@subsubsection emacspeak-2048-push-state
@deffn {Command} emacspeak-2048-push-state   
@findex emacspeak-2048-push-state

@format
Push current game state on stack.
@end format
@end deffn

@subsubsection emacspeak-2048-randomize-game
@deffn {Command} emacspeak-2048-randomize-game  (&optional count)
@findex emacspeak-2048-randomize-game

@format
Puts game in a randomized new state.

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-2048-score
@deffn {Command} emacspeak-2048-score   
@findex emacspeak-2048-score

@format
Show total on board.
@end format
@end deffn

@subsubsection emacspeak-2048-speak-board
@deffn {Command} emacspeak-2048-speak-board   
@findex emacspeak-2048-speak-board

@format
Speak board.
@end format
@end deffn

@subsubsection emacspeak-2048-speak-transposed-board
@deffn {Command} emacspeak-2048-speak-transposed-board   
@findex emacspeak-2048-speak-transposed-board

@format
Speak board column-wise.
@end format
@end deffn

@node emacspeak-abc-mode
@section emacspeak-abc-mode

ABC-MODE ==  Specialized mode for editing  ABC Music notation.
See @url{http://www.lesession.co.uk/abc/abc_notation.htm} for details.
This package speech-enables abc-mode.

@node emacspeak-add-log
@section emacspeak-add-log

Speech-enable Changelog mode

@node emacspeak-advice
@section emacspeak-advice

This module defines the advice forms for making the core of Emacs speak
Advice forms that are specific to Emacs subsystems do not belong here!
I violate this at present by advising completion.
Note that we needed to advice a lot more for Emacs 19 and
Emacs 20 than we do for Emacs 21 and Emacs 22.
As of August 2007, this file is being purged of advice forms
not needed in Emacs 22.

@subsection emacspeak-advice Options

@defvar {User Option} emacspeak-speak-messages-filter
List of strings used to filter spoken messages.

Default Value: 

@verbatim

("Decrypting" "psession" "auto saving")

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-tooltips
Enable to get tooltips spoken.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-amark
@section emacspeak-amark

Structure emacspeak-amark holds a bookmark into an mp3 file
path:  filename containing  marked
name: Bookmark tag
Position: time offset from start

 This library will be used from emacspeak-m-player to set and jump
to bookmarks. Amarks are stored in a .amarks.am file in the working
directory.  It also provides a simple AMark Browser to use from a
directory containing mp3 files where Amarks have been created --
see @command{emacspeak-amarks-browse}.
 @command{emacspeak-amarks-bookshelf} brings up a @emph{AmarksBookshelf}
that can be used to  browse available Amark files.

@subsection Emacspeak-Amark Commands

@subsubsection emacspeak-amark-add
@deffn {Command} emacspeak-amark-add  (path name position)
@findex emacspeak-amark-add

@format
Add an AMark to the buffer local list of AMarks. AMarks are
bookmarks in audio content. If there is an existing amark of the
given name, it is updated with path and position.

(fn PATH NAME POSITION)
@end format
@end deffn

@subsubsection emacspeak-amark-bookshelf
@deffn {Command} emacspeak-amark-bookshelf  (&optional pattern)
@table @kbd
@item C-; C-;
@kindex C-; C-;
@item C-x @@ h C-;
@kindex C-x @@ h C-;
@end table

@findex emacspeak-amark-bookshelf

@format
Open a locate buffer with all .amarks.am files.
Optional interactive prefix arg prompts for a pattern that is
used to filter the amarks files to show.  Use
M-x emacspeak-dired-open-this-file to open the AMark Browser on
current file.

(fn &optional PATTERN)
@end format
@end deffn

@subsubsection emacspeak-amark-browse
@deffn {Command} emacspeak-amark-browse   
@table @kbd
@item C-; a
@kindex C-; a
@item C-x @@ h a
@kindex C-x @@ h a
@end table

@findex emacspeak-amark-browse

@format
Browse   amarks  in current directory using ‘emacspeak-amark-mode’.
@end format
@end deffn

@subsubsection emacspeak-amark-file-load
@deffn {Command} emacspeak-amark-file-load   
@findex emacspeak-amark-file-load

@format
Open .amark.el on current line in AMark Browser
@end format
@end deffn

@subsubsection emacspeak-amark-find
@deffn {Command} emacspeak-amark-find  (name)
@findex emacspeak-amark-find

@format
Return matching AMark if found in buffer-local AMark list.

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-amark-list-play
@deffn {Command} emacspeak-amark-list-play   
@findex emacspeak-amark-list-play

@format
Play amark list as a playlist.
Maps command M-x emacspeak-m-player across elements of the amarks
  list.  Pressing ‘y’ as the current item is playing skips to the
  next item; this ‘y/n’ prompt is produced by
  M-x emacspeak-m-player as is usual when that command is called
  while media is already playing. Here, attempting to play the next
  item while the current item is playing produces the prompt.
@end format
@end deffn

@subsubsection emacspeak-amark-mode
@deffn {Command} emacspeak-amark-mode   
@findex emacspeak-amark-mode

@format
A light-weight mode for the ‘*Emacspeak Amark Browser*’.
 1. Provides buttons for opening and removing AMarks.
 2. Enables org integration via command
 ‘org-store-link’ bound to M-x org-store-link.
 3. Stored links can be inserted into org files in the same directory
via command ‘org-insert-link’ bound to M-x org-insert-link.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-amark-mode-hook’, as the final
or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-amark-save
@deffn {Command} emacspeak-amark-save   
@findex emacspeak-amark-save

@format
Save buffer-local AMarks in  currently playing directory.
@end format
@end deffn

@node emacspeak-analog
@section emacspeak-analog

Speech-enables package analog --convenient log analyzer
 required modules

@subsection Emacspeak-Analog Commands

@subsubsection emacspeak-analog-backward-field-or-char
@deffn {Command} emacspeak-analog-backward-field-or-char   
@findex emacspeak-analog-backward-field-or-char

@format
Move back to next field if field specification is available.
Otherwise move to previous char.
Speak field or char moved to.
@end format
@end deffn

@subsubsection emacspeak-analog-forward-field-or-char
@deffn {Command} emacspeak-analog-forward-field-or-char   
@findex emacspeak-analog-forward-field-or-char

@format
Move forward to next field if field specification is available.
Otherwise move to next char.
Speak field or char moved to.
@end format
@end deffn

@subsubsection emacspeak-analog-next-line
@deffn {Command} emacspeak-analog-next-line   
@findex emacspeak-analog-next-line

@format
Move down and speak current field.
@end format
@end deffn

@subsubsection emacspeak-analog-previous-line
@deffn {Command} emacspeak-analog-previous-line   
@findex emacspeak-analog-previous-line

@format
Move up and speak current field.
@end format
@end deffn

@subsubsection emacspeak-analog-speak-this-field
@deffn {Command} emacspeak-analog-speak-this-field   
@findex emacspeak-analog-speak-this-field

@format
Speak current field.
@end format
@end deffn

@node emacspeak-annotate
@section emacspeak-annotate

ANNOTATE == annotate.el from melpa
Speech-enable creation and navigation of annotations.

@node emacspeak-apt-sources
@section emacspeak-apt-sources

This module speech-enables apt-sources.el
that is included in the debian-el package
and provides a major mode for editing
APT's sources.list file.

  Required modules

@node emacspeak-arc
@section emacspeak-arc

Auditory interface to archive mode
This lets Emacs manipulate package files such as .zip and .jar files.

@subsection Emacspeak-Arc Commands

@subsubsection emacspeak-arc-speak-file-modification-time
@deffn {Command} emacspeak-arc-speak-file-modification-time   
@findex emacspeak-arc-speak-file-modification-time

@format
Speak modification time of the file on current line
@end format
@end deffn

@subsubsection emacspeak-arc-speak-file-name
@deffn {Command} emacspeak-arc-speak-file-name   
@findex emacspeak-arc-speak-file-name

@format
Speak the name of the file on current line
@end format
@end deffn

@subsubsection emacspeak-arc-speak-file-permissions
@deffn {Command} emacspeak-arc-speak-file-permissions   
@findex emacspeak-arc-speak-file-permissions

@format
Speak permissions of file current entry 
@end format
@end deffn

@subsubsection emacspeak-arc-speak-file-size
@deffn {Command} emacspeak-arc-speak-file-size   
@findex emacspeak-arc-speak-file-size

@format
Speak the size of the file on current line
@end format
@end deffn

@node emacspeak-auctex
@section emacspeak-auctex

Speech-enables the AucTeX package.  AucTeX, now available from
ELPA, has been my authoring environment of choice for writing LaTeX
since 1991.

@subsection Emacspeak-Auctex Commands

@subsubsection emacspeak-auctex-comma-at-end-of-word
@deffn {Command} emacspeak-auctex-comma-at-end-of-word   
@findex emacspeak-auctex-comma-at-end-of-word

@format
Move to the end of current word and add a comma.
@end format
@end deffn

@subsubsection emacspeak-auctex-end-of-word
@deffn {Command} emacspeak-auctex-end-of-word  (arg)
@findex emacspeak-auctex-end-of-word

@format
move to end of word

(fn ARG)
@end format
@end deffn

@subsubsection emacspeak-auctex-lacheck-buffer-file
@deffn {Command} emacspeak-auctex-lacheck-buffer-file   
@findex emacspeak-auctex-lacheck-buffer-file

@format
Run Lacheck on current buffer.
@end format
@end deffn

@subsubsection emacspeak-auctex-tex-tie-current-word
@deffn {Command} emacspeak-auctex-tex-tie-current-word  (n)
@findex emacspeak-auctex-tex-tie-current-word

@format
Tie the next n  words.

(fn N)
@end format
@end deffn

@node emacspeak-bbdb
@section emacspeak-bbdb

Speech-enables BBDB.
I have used BBDB to manage email address and contact information since 1991.

@node emacspeak-bibtex
@section emacspeak-bibtex

Speech extensions for bibtex mode.

@node emacspeak-bookmark
@section emacspeak-bookmark

Speech enable bookmarks

@node emacspeak-bookshare
@section emacspeak-bookshare

BOOKSHARE == http://www.bookshare.org
provides book access to print-disabled users.
It provides a simple Web  API http://developer.bookshare.org
This module implements an Emacspeak Bookshare client.
@subsection  requirements
@itemize
@item You need to get your own API key
@item You need Emacs built with libxml2 support
@end itemize

@subsection Usage
The main entry point is command
@code{emacspeak-bookshare} bound to @kbd{C-e C-b}.
This creates a special @emph{Bookshare Interaction} buffer that is
placed in @emph{emacspeak-bookshare-mode}.
Se the help for that mode on detailed usage instructions and key-bindings.

@subsection Sample Interaction

Assuming you have correctly setup your API key:
@itemize
@item Customize group @code{emacspeak-bookshare} by pressing @kbd{C-h G}.
@item  Press @kbd{C-e C-b} to open or switch to the Bookshare buffer.
@item Perform a search @kbd{a} or @kbd{t} for author or title search.
@item You will be prompted for your Bookshare password if this is
the first time.
@item The password will be saved to your configured
@code{auth-source} --- usually @code{~/.authinfo.gpg}.
You can also use @code{password-store[.]}
@item The results of the search appear in the Bookshare buffer.
Audio formatting and auditory icons convey
if  a result is already available locally.
@item If not available locally, press @kbd{D} to download the content.
@item Press @kbd{U} to unpack the downloaded content.
@item Press @kbd{e} to  display the entire book.
@item Press @kbd{c} to display the table of contents.
@item Now, use all of EWW  @xref{emacspeak-eww} extensions  and profit!
@end itemize

@subsection Emacspeak-Bookshare Commands

@subsubsection emacspeak-bookshare
@deffn {Command} emacspeak-bookshare   
@table @kbd
@item C-e C-b
@kindex C-e C-b
@end table

@findex emacspeak-bookshare

@format
Bookshare  Interaction.
@end format
@end deffn

@subsubsection emacspeak-bookshare-action
@deffn {Command} emacspeak-bookshare-action   
@findex emacspeak-bookshare-action

@format
Call action specified by  invoking key.
@end format
@end deffn

@subsubsection emacspeak-bookshare-author-search
@deffn {Command} emacspeak-bookshare-author-search  (query &optional category)
@findex emacspeak-bookshare-author-search

@format
Perform a Bookshare author search.
Interactive prefix arg filters search by category.

(fn QUERY &optional CATEGORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-browse
@deffn {Command} emacspeak-bookshare-browse   
@findex emacspeak-bookshare-browse

@format
Browse Bookshare.
@end format
@end deffn

@subsubsection emacspeak-bookshare-browse-latest
@deffn {Command} emacspeak-bookshare-browse-latest   
@findex emacspeak-bookshare-browse-latest

@format
Return latest books.
@end format
@end deffn

@subsubsection emacspeak-bookshare-browse-popular
@deffn {Command} emacspeak-bookshare-browse-popular  (&optional category)
@findex emacspeak-bookshare-browse-popular

@format
Browse popular books.
Optional interactive prefix arg prompts for a category to use as a filter.

(fn &optional CATEGORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-debugInfo-handler
@deffn {Command} emacspeak-bookshare-debugInfo-handler  (&rest arguments)
@findex emacspeak-bookshare-debugInfo-handler

@format
Ignore ARGUMENTS, do nothing, and return nil.
This function accepts any number of arguments in ARGUMENTS.
Also see ‘always’.

(fn &rest ARGUMENTS)
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-audio
@deffn {Command} emacspeak-bookshare-download-audio  (id target)
@findex emacspeak-bookshare-download-audio

@format
Download audio format of specified book to target location.

(fn ID TARGET)
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-audio-at-point
@deffn {Command} emacspeak-bookshare-download-audio-at-point   
@findex emacspeak-bookshare-download-audio-at-point

@format
Download audio version of book under point.
Target location is generated from author and title.
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-brf
@deffn {Command} emacspeak-bookshare-download-brf  (id target)
@findex emacspeak-bookshare-download-brf

@format
Download Daisy format of specified book to target location.

(fn ID TARGET)
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-brf-at-point
@deffn {Command} emacspeak-bookshare-download-brf-at-point   
@findex emacspeak-bookshare-download-brf-at-point

@format
Download Braille version of book under point.
Target location is generated from author and title.
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-daisy
@deffn {Command} emacspeak-bookshare-download-daisy  (id target)
@findex emacspeak-bookshare-download-daisy

@format
Download Daisy format of specified book to target location.

(fn ID TARGET)
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-daisy-at-point
@deffn {Command} emacspeak-bookshare-download-daisy-at-point   
@findex emacspeak-bookshare-download-daisy-at-point

@format
Download Daisy version of book under point.
Target location is generated from author and title.
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-epub-3
@deffn {Command} emacspeak-bookshare-download-epub-3  (id target)
@findex emacspeak-bookshare-download-epub-3

@format
Download epub-3 format of specified book to target location.

(fn ID TARGET)
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-epub-3-at-point
@deffn {Command} emacspeak-bookshare-download-epub-3-at-point   
@findex emacspeak-bookshare-download-epub-3-at-point

@format
Download epub-3 version of book under point.
Target location is generated from author and title.
@end format
@end deffn

@subsubsection emacspeak-bookshare-download-internal
@deffn {Command} emacspeak-bookshare-download-internal  (url target)
@findex emacspeak-bookshare-download-internal

@format
Download content  to target location.

(fn URL TARGET)
@end format
@end deffn

@subsubsection emacspeak-bookshare-eww
@deffn {Command} emacspeak-bookshare-eww  (directory)
@findex emacspeak-bookshare-eww

@format
Render  book using EWW

(fn DIRECTORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-expand-at-point
@deffn {Command} emacspeak-bookshare-expand-at-point   
@findex emacspeak-bookshare-expand-at-point

@format
Expand entry at point by retrieving metadata.
Once retrieved, memoize to avoid multiple retrievals.
@end format
@end deffn

@subsubsection emacspeak-bookshare-extract-and-view
@deffn {Command} emacspeak-bookshare-extract-and-view  (url)
@findex emacspeak-bookshare-extract-and-view

@format
Extract content referred to by link under point, and render via the browser.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-bookshare-extract-xml
@deffn {Command} emacspeak-bookshare-extract-xml  (url)
@findex emacspeak-bookshare-extract-xml

@format
Extract content referred to by link under point, and return an XML buffer.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-bookshare-flush-lines
@deffn {Command} emacspeak-bookshare-flush-lines  (regexp)
@findex emacspeak-bookshare-flush-lines

@format
Flush lines matching regexp in Bookshare buffer.

(fn REGEXP)
@end format
@end deffn

@subsubsection emacspeak-bookshare-fulltext
@deffn {Command} emacspeak-bookshare-fulltext  (directory)
@findex emacspeak-bookshare-fulltext

@format
Display fulltext contents of  book in specified directory.
Useful for fulltext search in a book.

(fn DIRECTORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-fulltext-search
@deffn {Command} emacspeak-bookshare-fulltext-search  (query)
@findex emacspeak-bookshare-fulltext-search

@format
Perform a Bookshare fulltext search.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-get-more-results
@deffn {Command} emacspeak-bookshare-get-more-results   
@findex emacspeak-bookshare-get-more-results

@format
Get next page of results for last query.
@end format
@end deffn

@subsubsection emacspeak-bookshare-id-search
@deffn {Command} emacspeak-bookshare-id-search  (query)
@findex emacspeak-bookshare-id-search

@format
Perform a Bookshare id search.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-isbn-search
@deffn {Command} emacspeak-bookshare-isbn-search  (query)
@findex emacspeak-bookshare-isbn-search

@format
Perform a Bookshare isbn search.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-list-preferences
@deffn {Command} emacspeak-bookshare-list-preferences   
@findex emacspeak-bookshare-list-preferences

@format
Return preference list.
@end format
@end deffn

@subsubsection emacspeak-bookshare-mode
@deffn {Command} emacspeak-bookshare-mode   
@findex emacspeak-bookshare-mode

@format
A Bookshare front-end for the Emacspeak desktop.

The Emacspeak Bookshare front-end is launched by command
emacspeak-bookshare bound to C-e C-b

This command switches to a special buffer that has Bookshare
commands bounds to single keystrokes-- see the key-binding list at
the end of this description. Use Emacs online help facility to
look up help on these commands.

emacspeak-bookshare-mode provides the necessary functionality to
Search and download Bookshare material, Manage a local library of
downloaded Bookshare content, And commands to easily read newer
Daisy books from Bookshare.

Here is a list of all emacspeak Bookshare commands  with their key-bindings:
a Author Search
A Author/Title Search
t Title Search
s Full Text Search
d Date Search
b Browse

Key             Binding
-------------------------------------------------------------------------------
RET		emacspeak-bookshare-toc-at-point
SPC		emacspeak-bookshare-expand-at-point
+		emacspeak-bookshare-action
/		emacspeak-bookshare-action
3		emacspeak-bookshare-download-epub-3-at-point
A		emacspeak-bookshare-download-audio-at-point
B		emacspeak-bookshare-download-brf-at-point
C		emacspeak-bookshare-fulltext
D		emacspeak-bookshare-download-daisy-at-point
E		emacspeak-bookshare-eww
I		emacspeak-bookshare-action
P		emacspeak-bookshare-action
S		emacspeak-bookshare-action
U		emacspeak-bookshare-unpack-at-point
V		emacspeak-bookshare-view-at-point
[		backward-page
]		forward-page
a		emacspeak-bookshare-action
b		emacspeak-bookshare-browse
c		emacspeak-bookshare-toc-at-point
d		emacspeak-bookshare-action
e		emacspeak-bookshare-eww
f		emacspeak-bookshare-flush-lines
i		emacspeak-bookshare-action
j		next-line
k		previous-line
l .. m		emacspeak-bookshare-action
n		emacspeak-bookshare-next-result
p		emacspeak-bookshare-previous-result
q		bury-buffer
s .. t		emacspeak-bookshare-action
v		emacspeak-bookshare-view

M-n		emacspeak-bookshare-next-result
M-p		emacspeak-bookshare-previous-result

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-bookshare-mode-hook’, as the
final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-bookshare-next-result
@deffn {Command} emacspeak-bookshare-next-result   
@findex emacspeak-bookshare-next-result

@format
Move to next result.
@end format
@end deffn

@subsubsection emacspeak-bookshare-periodical-list
@deffn {Command} emacspeak-bookshare-periodical-list   
@findex emacspeak-bookshare-periodical-list

@format
Return list of periodicals.
@end format
@end deffn

@subsubsection emacspeak-bookshare-previous-result
@deffn {Command} emacspeak-bookshare-previous-result   
@findex emacspeak-bookshare-previous-result

@format
Move to previous result.
@end format
@end deffn

@subsubsection emacspeak-bookshare-set-preference
@deffn {Command} emacspeak-bookshare-set-preference  (preference-id value)
@findex emacspeak-bookshare-set-preference

@format
Set preference preference-id to value.

(fn PREFERENCE-ID VALUE)
@end format
@end deffn

@subsubsection emacspeak-bookshare-since-search
@deffn {Command} emacspeak-bookshare-since-search  (query &optional category)
@findex emacspeak-bookshare-since-search

@format
Perform a Bookshare date  search.
Optional interactive prefix arg filters by category.

(fn QUERY &optional CATEGORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-title-search
@deffn {Command} emacspeak-bookshare-title-search  (query &optional category)
@findex emacspeak-bookshare-title-search

@format
Perform a Bookshare title search.
Interactive prefix arg filters search by category.

(fn QUERY &optional CATEGORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-toc
@deffn {Command} emacspeak-bookshare-toc  (directory)
@findex emacspeak-bookshare-toc

@format
View TOC for book in specified directory.

(fn DIRECTORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-toc-at-point
@deffn {Command} emacspeak-bookshare-toc-at-point   
@findex emacspeak-bookshare-toc-at-point

@format
View TOC for book at point.
Make sure it’s downloaded and unpacked first.
@end format
@end deffn

@subsubsection emacspeak-bookshare-unpack-at-point
@deffn {Command} emacspeak-bookshare-unpack-at-point   
@findex emacspeak-bookshare-unpack-at-point

@format
Unpack downloaded content if necessary.
@end format
@end deffn

@subsubsection emacspeak-bookshare-url-executor
@deffn {Command} emacspeak-bookshare-url-executor  (url)
@findex emacspeak-bookshare-url-executor

@format
Custom URL executor for use in Bookshare TOC.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-bookshare-version-handler
@deffn {Command} emacspeak-bookshare-version-handler  (&rest arguments)
@findex emacspeak-bookshare-version-handler

@format
Ignore ARGUMENTS, do nothing, and return nil.
This function accepts any number of arguments in ARGUMENTS.
Also see ‘always’.

(fn &rest ARGUMENTS)
@end format
@end deffn

@subsubsection emacspeak-bookshare-view
@deffn {Command} emacspeak-bookshare-view  (directory)
@findex emacspeak-bookshare-view

@format
View book in specified directory.

(fn DIRECTORY)
@end format
@end deffn

@subsubsection emacspeak-bookshare-view-at-point
@deffn {Command} emacspeak-bookshare-view-at-point   
@findex emacspeak-bookshare-view-at-point

@format
View book at point.
Make sure it’s downloaded and unpacked first.
@end format
@end deffn

@subsubsection emacspeak-bookshare-view-page-range
@deffn {Command} emacspeak-bookshare-view-page-range  (url)
@findex emacspeak-bookshare-view-page-range

@format
Play pages in specified page range from URL.

(fn URL)
@end format
@end deffn

@subsection emacspeak-bookshare Options

@defvar {User Option} emacspeak-bookshare-api-key
Web API  key for this application.
See http://developer.bookshare.org/docs for details on how to get
  an API key. 

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-bookshare-directory
Customize this to the root of where books are organized.

Default Value: 

@verbatim

"/home/raman/books/book-share"

@end verbatim

@end defvar

@node emacspeak-browse-kill-ring
@section emacspeak-browse-kill-ring

Browse the kill ring using
browse-kill-ring.el - interactively insert items from kill-ring

@node emacspeak-bs
@section emacspeak-bs

speech-enable bs.el -- an alternative to Emacs' default  list-buffers

@subsection Emacspeak-Bs Commands

@subsubsection emacspeak-bs-speak-buffer-line
@deffn {Command} emacspeak-bs-speak-buffer-line   
@findex emacspeak-bs-speak-buffer-line

@format
Speak information about this buffer
@end format
@end deffn

@node emacspeak-buff-menu
@section emacspeak-buff-menu

Speech-enable buffer-menus.

@subsection Emacspeak-Buff-Menu Commands

@subsubsection emacspeak-list-buffers-next-line
@deffn {Command} emacspeak-list-buffers-next-line  (count)
@findex emacspeak-list-buffers-next-line

@format
Speech enabled buffer menu navigation

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-list-buffers-previous-line
@deffn {Command} emacspeak-list-buffers-previous-line  (count)
@findex emacspeak-list-buffers-previous-line

@format
Speech enabled buffer menu navigation

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-list-buffers-speak-buffer-line
@deffn {Command} emacspeak-list-buffers-speak-buffer-line   
@findex emacspeak-list-buffers-speak-buffer-line

@format
Speak information about this buffer
@end format
@end deffn

@subsubsection emacspeak-list-buffers-speak-name
@deffn {Command} emacspeak-list-buffers-speak-name   
@findex emacspeak-list-buffers-speak-name

@format
Speak the name of the buffer on this line
@end format
@end deffn

@node emacspeak-c
@section emacspeak-c

Make  C and C++ mode more emacspeak friendly
Works with both boring c-mode
and the excellent cc-mode

@subsection Emacspeak-C Commands

@subsubsection emacspeak-c-speak-semantics
@deffn {Command} emacspeak-c-speak-semantics   
@findex emacspeak-c-speak-semantics

@format
Speak the C semantics of this line. 
@end format
@end deffn

@node emacspeak-calc
@section emacspeak-calc

This module extends the Emacs Calculator.
Extensions are minimal.
We force a calc-load-everything,
And use an after advice on this function
To fix all of calc's interactive functions

@node emacspeak-calculator
@section emacspeak-calculator

Speech enable desktop calculator

@node emacspeak-calendar
@section emacspeak-calendar

This module speech enables the Emacs Calendar.  Speech enabling is
not the same as speaking the screen: This is an excellent example
of the advantages of speech-enabled interaction.

@subsection Emacspeak-Calendar Commands

@subsubsection emacspeak-appt-repeat-announcement
@deffn {Command} emacspeak-appt-repeat-announcement   
@table @kbd
@item C-e A
@kindex C-e A
@end table

@findex emacspeak-appt-repeat-announcement

@format
Speaks the most recently displayed appointment message if any.
@end format
@end deffn

@subsubsection emacspeak-calendar-setup-sunrise-sunset
@deffn {Command} emacspeak-calendar-setup-sunrise-sunset   
@findex emacspeak-calendar-setup-sunrise-sunset

@format
Set up geo-coordinates using Google Maps reverse geocoding.
To use, configure variable gmaps-my-address via M-x customize-variable.
@end format
@end deffn

@subsubsection emacspeak-calendar-speak-date
@deffn {Command} emacspeak-calendar-speak-date   
@findex emacspeak-calendar-speak-date

@format
Speak the date under point when called in Calendar Mode. 
@end format
@end deffn

@subsubsection emacspeak-calendar-sunrise-sunset
@deffn {Command} emacspeak-calendar-sunrise-sunset  (address &optional arg)
@findex emacspeak-calendar-sunrise-sunset

@format
Display sunrise/sunset for specified address.

(fn ADDRESS &optional ARG)
@end format
@end deffn

@node emacspeak-calibredb
@section emacspeak-calibredb

CALIBREDB == Browse And Search Local Calibre Library

@subsection Emacspeak-Calibredb Commands

@subsubsection emacspeak-calibredb-epub-eww
@deffn {Command} emacspeak-calibredb-epub-eww  (&optional broken-ncx)
@findex emacspeak-calibredb-epub-eww

@format
Open EPub at point in EWW.
Optional prefix arg uses alternative renderer that handles epubs
with broken NCX files.

(fn &optional BROKEN-NCX)
@end format
@end deffn

@node emacspeak-chess
@section emacspeak-chess

The Emacs Chess package provides a rich environment for playing and
exploring Chess Games.
That package comes with a light-weight module that announces
moves.

This module aims to do much more, including:
@itemize @bullet
@item Navigate the board along various axes with audio-formatted  output.
 @item Browse games via  rich audio-formatted   output.
@item Speech-enable all interactive commands  provided by the Chess
package.
@item Enable various means of exploring the state of game, perhaps with
a view to being able to spot patterns   from listening to the
output.
@end itemize
@subsection Navigating And Examining The Board
The board can be navigated along the 8 compass directions.
Arrow keys move to the appropriate squares on the board.
@kbd{/} and @kbd{\} move down the diagonals.
@kbd{[} and @kbd{]} move up the respective diagonals.
@itemize  @bullet
@item  Move North: @code{emacspeak-chess-north} bound to @kbd{up}.
@item  Move South: @code{emacspeak-chess-south} bound to
@kbd{down}.
@item  Move West: @code{emacspeak-chess-west} bound to @kbd{left}.
@item  Move East: @code{emacspeak-chess-east} bound to @kbd{right}.
@end itemize
You can also move along the diagonals:
@itemize @bullet
@item  Move Northwest: @code{emacspeak-chess-northwest} bound to
@kbd{[}.
@item  Move Northeast: @code{emacspeak-chess-northeast} bound to  @kbd{]}.
@item  Move Southwest: @code{emacspeak-chess-southwest} bound to
@kbd{/}.
@item  Move Southeast: @code{emacspeak-chess-southeast} bound to
@kbd{\}.
@end itemize
You can also jump to a given board position by:
@itemize @bullet
@item  Jump: @code{emacspeak-chess-jump} bound to @kbd{j}.
@item Target of last move:
 @code{emacspeak-chess-goto-target} bound to @kbd{t}.
@item Look: @code{emacspeak-chess-speak-that-square} bound to
@kbd{l}.
@item  Review   current square: @kbd{;}.
@item Review Board: @code{emacspeak-chess-speak-board} bound to
@kbd{z}. Useful in end-state.
@item Locate pieces: @code{emacspeak-chess-speak-piece-squares}
bound to @kbd{s}. Specify piece as a single char --- @kbd{w} speaks
all white pieces, @kbd{l} speaks all black pieces, use SAN notation
char for a specific piece.  Use @kbd{a} to hear entire board, this
last is most useful when the game is an end-state.
@item Discover who targets a square:
@code{emacspeak-chess-speak-who-targets} bound to @kbd{w}. Argument
@code{piece} is similar to the previously listed command.
@end itemize
You can obtain views of the board along the rows and diagonals, as
well as a @emph{knight's perspective }:
@itemize @bullet
@item Viewers: @kbd{v} followed by the directional navigation keys
speaks the squares in that direction from the current
square. @kbd{vn} speaks the squares from a knight's perspective,
i.e. the squares the Knight would see  from the current
position. similarly, @kbd{vk} speaks the non-empty squares seen by the King
from the current position.
@kbd{v} followed by a rank-or-file char speaks that complete rank
or file.
@end itemize
@subsection Examining Games

Package @emph{Chess} allows one to browse through a game using
@kbd{,} and @kbd{.}  --- @code{chess-display-move-backward} and
@code{chess-display-move-forward}.  Emacspeak speech-enables these
commands to speak the move that led to the currently displayed
state of the game. Finally, @kbd{m} speaks the @emph{current move}
being displayed.

@subsection Emacspeak-Chess Commands

@subsubsection emacspeak-chess-east
@deffn {Command} emacspeak-chess-east   
@findex emacspeak-chess-east

@format
Move east one step.
@end format
@end deffn

@subsubsection emacspeak-chess-goto-target
@deffn {Command} emacspeak-chess-goto-target   
@findex emacspeak-chess-goto-target

@format
Jump to the most recent target square.
@end format
@end deffn

@subsubsection emacspeak-chess-jump
@deffn {Command} emacspeak-chess-jump  (coord)
@findex emacspeak-chess-jump

@format
Jump to square specified as coord.

(fn COORD)
@end format
@end deffn

@subsubsection emacspeak-chess-look-east
@deffn {Command} emacspeak-chess-look-east   
@findex emacspeak-chess-look-east

@format
Look east 
@end format
@end deffn

@subsubsection emacspeak-chess-look-king
@deffn {Command} emacspeak-chess-look-king   
@findex emacspeak-chess-look-king

@format
Look along non-empty squares reachable by the king  from current position. 
@end format
@end deffn

@subsubsection emacspeak-chess-look-knight
@deffn {Command} emacspeak-chess-look-knight   
@findex emacspeak-chess-look-knight

@format
Look along non-empty squares reachable by a knight from current position. 
@end format
@end deffn

@subsubsection emacspeak-chess-look-north
@deffn {Command} emacspeak-chess-look-north   
@findex emacspeak-chess-look-north

@format
Look north 
@end format
@end deffn

@subsubsection emacspeak-chess-look-northeast
@deffn {Command} emacspeak-chess-look-northeast   
@findex emacspeak-chess-look-northeast

@format
Look northeast 
@end format
@end deffn

@subsubsection emacspeak-chess-look-northwest
@deffn {Command} emacspeak-chess-look-northwest   
@findex emacspeak-chess-look-northwest

@format
Look northwest 
@end format
@end deffn

@subsubsection emacspeak-chess-look-south
@deffn {Command} emacspeak-chess-look-south   
@findex emacspeak-chess-look-south

@format
Look south 
@end format
@end deffn

@subsubsection emacspeak-chess-look-southeast
@deffn {Command} emacspeak-chess-look-southeast   
@findex emacspeak-chess-look-southeast

@format
Look southeast 
@end format
@end deffn

@subsubsection emacspeak-chess-look-southwest
@deffn {Command} emacspeak-chess-look-southwest   
@findex emacspeak-chess-look-southwest

@format
Look southwest 
@end format
@end deffn

@subsubsection emacspeak-chess-look-west
@deffn {Command} emacspeak-chess-look-west   
@findex emacspeak-chess-look-west

@format
Look west 
@end format
@end deffn

@subsubsection emacspeak-chess-north
@deffn {Command} emacspeak-chess-north   
@findex emacspeak-chess-north

@format
Move north one step.
@end format
@end deffn

@subsubsection emacspeak-chess-northeast
@deffn {Command} emacspeak-chess-northeast   
@findex emacspeak-chess-northeast

@format
Move northeast one step.
@end format
@end deffn

@subsubsection emacspeak-chess-northwest
@deffn {Command} emacspeak-chess-northwest   
@findex emacspeak-chess-northwest

@format
Move northwest one step.
@end format
@end deffn

@subsubsection emacspeak-chess-south
@deffn {Command} emacspeak-chess-south   
@findex emacspeak-chess-south

@format
Move south one step.
@end format
@end deffn

@subsubsection emacspeak-chess-southeast
@deffn {Command} emacspeak-chess-southeast   
@findex emacspeak-chess-southeast

@format
Move southeast one step.
@end format
@end deffn

@subsubsection emacspeak-chess-southwest
@deffn {Command} emacspeak-chess-southwest   
@findex emacspeak-chess-southwest

@format
Move southwest one step.
@end format
@end deffn

@subsubsection emacspeak-chess-speak-board
@deffn {Command} emacspeak-chess-speak-board   
@findex emacspeak-chess-speak-board

@format
Speak complete board. Only useful in end-states.
@end format
@end deffn

@subsubsection emacspeak-chess-speak-piece-squares
@deffn {Command} emacspeak-chess-speak-piece-squares  (piece)
@findex emacspeak-chess-speak-piece-squares

@format
Prompt for a piece (single char) and speak its locations on the
  board.  Piece is specified as a char using SAN notation. Use
  ‘w’ for all whites pieces,  ‘l’ for all black pieces,
and ‘a’ for entire board..

(fn PIECE)
@end format
@end deffn

@subsubsection emacspeak-chess-speak-that-square
@deffn {Command} emacspeak-chess-speak-that-square  (coord)
@findex emacspeak-chess-speak-that-square

@format
Speak square at specified coord.

(fn COORD)
@end format
@end deffn

@subsubsection emacspeak-chess-speak-this-move
@deffn {Command} emacspeak-chess-speak-this-move   
@findex emacspeak-chess-speak-this-move

@format
Speak move at current display index.
@end format
@end deffn

@subsubsection emacspeak-chess-speak-this-square
@deffn {Command} emacspeak-chess-speak-this-square   
@findex emacspeak-chess-speak-this-square

@format
Speak square under point.
@end format
@end deffn

@subsubsection emacspeak-chess-speak-who-targets
@deffn {Command} emacspeak-chess-speak-who-targets  (piece)
@findex emacspeak-chess-speak-who-targets

@format
Speak description of squares that can target current square.
Argument ‘piece’ specifies  piece-or-color as in command
  emacspeak-chess-speak-piece-squares

(fn PIECE)
@end format
@end deffn

@subsubsection emacspeak-chess-view-rank-or-file
@deffn {Command} emacspeak-chess-view-rank-or-file   
@findex emacspeak-chess-view-rank-or-file

@format
View a complete rank or file from white’s perspective.
@end format
@end deffn

@subsubsection emacspeak-chess-west
@deffn {Command} emacspeak-chess-west   
@findex emacspeak-chess-west

@format
Move west one step.
@end format
@end deffn

@node emacspeak-cider
@section emacspeak-cider

Speech-Enable CIDER --- Clojure IDE

@node emacspeak-ciel
@section emacspeak-ciel

Package ciel provides vim's "copy inside" and "clear inside" commands.
Emacspeak binds these commands to <Super i> and <Super o>.
This module speech-enables ciel.

@node emacspeak-clojure
@section emacspeak-clojure

CLOJURE-mode: Specialized mode for Clojure programming.

@node emacspeak-cmuscheme
@section emacspeak-cmuscheme

speech-enable scheme support

@node emacspeak-combobulate
@section emacspeak-combobulate

COMBOBULATE: Navigate, Manipulate code with  tree-sitter's
concrete-tree;
https://github.com/mickeynp/combobulate.git (push)

@node emacspeak-comint
@section emacspeak-comint

comint == command interaction.
Advice comint and friends to speak.

@subsection Emacspeak-Comint Commands

@subsubsection emacspeak-toggle-comint-autospeak
@deffn {Command} emacspeak-toggle-comint-autospeak  (&optional prefix)
@findex emacspeak-toggle-comint-autospeak

@format
Toggle comint autospeak.
Interactive PREFIX arg means toggle  global default value. 

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-toggle-comint-output-monitor
@deffn {Command} emacspeak-toggle-comint-output-monitor  (&optional prefix)
@table @kbd
@item C-e M-o
@kindex C-e M-o
@end table

@findex emacspeak-toggle-comint-output-monitor

@format
Toggle  Emacspeak comint monitor.
Interactive PREFIX arg means toggle the global default value. 
@end format
@end deffn

@subsubsection emacspeak-toggle-inaudible-or-comint-autospeak
@deffn {Command} emacspeak-toggle-inaudible-or-comint-autospeak   
@table @kbd
@item C-e C-q
@kindex C-e C-q
@end table

@findex emacspeak-toggle-inaudible-or-comint-autospeak

@format
Toggle comint-autospeak when in a comint or vterm buffer.
Otherwise call voice-setup-toggle-silence-personality which
toggles personality under point.
@end format
@end deffn

@subsubsection emacspeak-zoxide
@deffn {Command} emacspeak-zoxide  (q)
@table @kbd
@item C-; j
@kindex C-; j
@item C-x @@ h j
@kindex C-x @@ h j
@end table

@findex emacspeak-zoxide

@format
Query zoxide  and launch dired.
Shell Utility zoxide --- implemented in Rust --- lets you jump to
directories that are used often. 

(fn Q)
@end format
@end deffn

@subsection emacspeak-comint Options

@defvar {User Option} emacspeak-comint-autospeak
Speak comint output.
Use M-x emacspeak-toggle-comint-autospeak to toggle this
setting. Do not set this globally. Also see custom option
‘emacspeak-wizards-project-shells’ for starting up
project-specific shells that have autospeak turned on. The
default is intentionally nil, since this option should only be
turned on where needed.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-company
@section emacspeak-company

COMPANY -mode: Complete Anything Support for emacs.
This module provides an Emacspeak Company Front-end, And advises
the needed interactive commands in Company. It adds an
emacspeak-specific front-end @code{emacspeak-company-frontend} to
the value of company-frontends. Note that @var{company-frontends}
is a user-customizable option and ends up getting saved by emacs
along with other custom settings. Function
@code{emacspeak-company-frontend} handles providing spoken
feedback, and leaves it to other frontends on
@var{company-frontends}   to generate their own feedback.

  Required modules

@node emacspeak-compile
@section emacspeak-compile

This module makes compiling code from inside Emacs speech friendly.

@subsection Emacspeak-Compile Commands

@subsubsection emacspeak-compilation-speak-error
@deffn {Command} emacspeak-compilation-speak-error   
@findex emacspeak-compilation-speak-error

@format
Speech feedback about the compilation error. 
@end format
@end deffn

@node emacspeak-cperl
@section emacspeak-cperl

Provide additional advice to CPerl mode

@node emacspeak-custom
@section emacspeak-custom

Advise custom to speak.
most of the work is actually done by emacspeak-widget.el
which speech-enables the widget libraries.

@subsection Emacspeak-Custom Commands

@subsubsection emacspeak-custom-goto-group
@deffn {Command} emacspeak-custom-goto-group   
@findex emacspeak-custom-goto-group

@format
Jump to custom group when in a customization buffer.
@end format
@end deffn

@subsubsection emacspeak-custom-goto-toolbar
@deffn {Command} emacspeak-custom-goto-toolbar   
@findex emacspeak-custom-goto-toolbar

@format
Jump to custom toolbar when in a customization buffer.
@end format
@end deffn

@node emacspeak-dbus
@section emacspeak-dbus

Loading this module sets  up Emacspeak to respond to DBus notifications.
This module needs to be loaded explicitly from the user's init file
after emacspeak has been started.

@subsection Overview

This module provides integration via DBus  for the following:
@itemize @bullet
@item Respond to network coming up or going down
--- @code{(nm-enable)}.
@item Respond to screen getting locked/unlocked by gnome-screen-saver
--- @code{(emacspeak-dbus-watch-screen-lock)}.
@item Respond to laptop  going to sleep or waking up
---  @code{(emacspeak-dbus-sleep-enable)}.
@item Respond to insertion/ejection of removable storage
--- @code{(emacspeak-dbus-udisks-enable)}.
@item Watch for power devices
--- @code{(emacspeak-dbus-upower-enable)}.
@item An interactive command  @command{emacspeak-dbus-lock-screen}
bound to @kbd{C-, C-d} to lock the screen using DBus.
Note: this key-binding is available only if this module is loaded.
@end itemize
Add calls to the desired functions from the above list
to the emacs startup file after  this module has been loaded.
See relevant hooks for customizing behavior.
Note that each of the  sleep/wake-up, UDisks2   and network/up-down
can be separately enabled/disabled, and the actions customized
via appropriately named hook functions.

  Required modules

@subsection Emacspeak-Dbus Commands

@subsubsection emacspeak-dbus-lock-screen
@deffn {Command} emacspeak-dbus-lock-screen   
@findex emacspeak-dbus-lock-screen

@format
Lock screen using DBus.
@end format
@end deffn

@subsubsection emacspeak-dbus-sleep-disable
@deffn {Command} emacspeak-dbus-sleep-disable   
@findex emacspeak-dbus-sleep-disable

@format
Disable integration with login1 daemon. Does nothing if
already disabled.
@end format
@end deffn

@subsubsection emacspeak-dbus-sleep-enable
@deffn {Command} emacspeak-dbus-sleep-enable   
@findex emacspeak-dbus-sleep-enable

@format
Enable integration with Login1. Does nothing if already enabled.
@end format
@end deffn

@subsubsection emacspeak-dbus-udisks-disable
@deffn {Command} emacspeak-dbus-udisks-disable   
@findex emacspeak-dbus-udisks-disable

@format
Disable integration with UDisks2 daemon. Does nothing if
already disabled.
@end format
@end deffn

@subsubsection emacspeak-dbus-udisks-enable
@deffn {Command} emacspeak-dbus-udisks-enable   
@findex emacspeak-dbus-udisks-enable

@format
Enable integration with UDisks2. Does nothing if already enabled.
@end format
@end deffn

@subsubsection emacspeak-dbus-upower-disable
@deffn {Command} emacspeak-dbus-upower-disable   
@findex emacspeak-dbus-upower-disable

@format
Disable integration with UPower daemon. Does nothing if
already disabled.
@end format
@end deffn

@subsubsection emacspeak-dbus-upower-enable
@deffn {Command} emacspeak-dbus-upower-enable   
@findex emacspeak-dbus-upower-enable

@format
Enable integration with UPower. Does nothing if already enabled.
@end format
@end deffn

@subsubsection emacspeak-screen-saver-mode
@deffn {Command} emacspeak-screen-saver-mode   
@findex emacspeak-screen-saver-mode

@format
A light-weight mode for the ‘*Emacspeak Screen Saver *’ buffer.
This is a hidden buffer that is made current so we automatically
switch to a screen-saver soundscape.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-screen-saver-mode-hook’, as
the final or penultimate step during initialization.

@end format
@end deffn

@node emacspeak-deadgrep
@section emacspeak-deadgrep

DEADGREP ==  Front-end to ripgrep.

@node emacspeak-debugger
@section emacspeak-debugger

DEBUGGER ==  Emacs Interactive Debugger.
Speech-enable the debugger by speech-enabling interactive commands.

@node emacspeak-desktop
@section emacspeak-desktop

advice desktop package

@node emacspeak-devdocs
@section emacspeak-devdocs

DEVDOCS == Browse DevDocs

@node emacspeak-dictionary
@section emacspeak-dictionary

Speech-enables emacs client for accessing dictionary
server at dict.org:2628

@node emacspeak-diff-mode
@section emacspeak-diff-mode

DIFF-MODE  support.
  Required modules

@node emacspeak-dired
@section emacspeak-dired

This module speech enables dired.
It reduces the amount of speech you hear:
Typically you hear the file names as you move through the dired buffer
Voicification is used to indicate directories, marked files etc.

@subsection Emacspeak-Dired Commands

@subsubsection emacspeak-dired-csv-open
@deffn {Command} emacspeak-dired-csv-open   
@findex emacspeak-dired-csv-open

@format
Open CSV file on current dired line.
@end format
@end deffn

@subsubsection emacspeak-dired-downloads
@deffn {Command} emacspeak-dired-downloads   
@table @kbd
@item C-. d
@kindex C-. d
@item C-x @@ s d
@kindex C-x @@ s d
@end table

@findex emacspeak-dired-downloads

@format
Open Downloads directory.
@end format
@end deffn

@subsubsection emacspeak-dired-epub-eww
@deffn {Command} emacspeak-dired-epub-eww   
@findex emacspeak-dired-epub-eww

@format
Open epub on current line  in EWW
@end format
@end deffn

@subsubsection emacspeak-dired-eww-open
@deffn {Command} emacspeak-dired-eww-open   
@findex emacspeak-dired-eww-open

@format
Open HTML file on current dired line.
@end format
@end deffn

@subsubsection emacspeak-dired-label-fields
@deffn {Command} emacspeak-dired-label-fields   
@findex emacspeak-dired-label-fields

@format
Labels the fields of the listing in the dired buffer.
Currently is a no-op  unless
unless ‘dired-listing-switches’ contains -l
@end format
@end deffn

@subsubsection emacspeak-dired-md-open
@deffn {Command} emacspeak-dired-md-open   
@findex emacspeak-dired-md-open

@format
Preview markdown  file on current dired line.
@end format
@end deffn

@subsubsection emacspeak-dired-midi-play
@deffn {Command} emacspeak-dired-midi-play   
@findex emacspeak-dired-midi-play

@format
Play midi  file on current dired line.
@end format
@end deffn

@subsubsection emacspeak-dired-open-this-directory
@deffn {Command} emacspeak-dired-open-this-directory   
@findex emacspeak-dired-open-this-directory

@format
Open directory corresponding to file on current line.
@end format
@end deffn

@subsubsection emacspeak-dired-open-this-file
@deffn {Command} emacspeak-dired-open-this-file   
@findex emacspeak-dired-open-this-file

@format
Smart dired opener. Invokes appropriate Emacspeak handler on
current file in DirEd.
@end format
@end deffn

@subsubsection emacspeak-dired-pdf-open
@deffn {Command} emacspeak-dired-pdf-open   
@findex emacspeak-dired-pdf-open

@format
Open PDF file on current dired line.
@end format
@end deffn

@subsubsection emacspeak-dired-play-duration
@deffn {Command} emacspeak-dired-play-duration   
@findex emacspeak-dired-play-duration

@format
Speak duration of sound files.
If on a file, speak its duration.
If on a directory, speak the total duration of all sound files under
  that directory.
@end format
@end deffn

@subsubsection emacspeak-dired-rpm-query-in-dired
@deffn {Command} emacspeak-dired-rpm-query-in-dired   
@findex emacspeak-dired-rpm-query-in-dired

@format
Run rpm -qi on current dired entry.
@end format
@end deffn

@subsubsection emacspeak-dired-show-file-type
@deffn {Command} emacspeak-dired-show-file-type  (&optional file deref-symlinks)
@findex emacspeak-dired-show-file-type

@format
Displays type of current file by running command file.
Like Emacs’ built-in dired-show-file-type but allows user to customize
options passed to command ‘file’.

(fn &optional FILE DEREF-SYMLINKS)
@end format
@end deffn

@subsubsection emacspeak-dired-speak-file-access-time
@deffn {Command} emacspeak-dired-speak-file-access-time   
@findex emacspeak-dired-speak-file-access-time

@format
Speak access time  of the current file.
@end format
@end deffn

@subsubsection emacspeak-dired-speak-file-modification-time
@deffn {Command} emacspeak-dired-speak-file-modification-time   
@findex emacspeak-dired-speak-file-modification-time

@format
Speak modification time  of the current file.
@end format
@end deffn

@subsubsection emacspeak-dired-speak-file-permissions
@deffn {Command} emacspeak-dired-speak-file-permissions   
@findex emacspeak-dired-speak-file-permissions

@format
Speak the permissions of the current file.
@end format
@end deffn

@subsubsection emacspeak-dired-speak-file-size
@deffn {Command} emacspeak-dired-speak-file-size   
@findex emacspeak-dired-speak-file-size

@format
Speak the size of the current file.
On a directory line, run du -s on the directory to speak its size.
@end format
@end deffn

@subsubsection emacspeak-dired-speak-header-line
@deffn {Command} emacspeak-dired-speak-header-line   
@findex emacspeak-dired-speak-header-line

@format
Speak the header line of the dired buffer. 
@end format
@end deffn

@subsubsection emacspeak-dired-speak-symlink-target
@deffn {Command} emacspeak-dired-speak-symlink-target   
@findex emacspeak-dired-speak-symlink-target

@format
Speaks the target of the symlink on the current line.
@end format
@end deffn

@subsubsection emacspeak-find-dired
@deffn {Command} emacspeak-find-dired   
@table @kbd
@item C-e C-f
@kindex C-e C-f
@end table

@findex emacspeak-find-dired

@format
Prompt for find-dired arguments using context and completion.
@end format
@end deffn

@subsubsection emacspeak-locate-play-results-as-playlist
@deffn {Command} emacspeak-locate-play-results-as-playlist  (&optional shuffle)
@findex emacspeak-locate-play-results-as-playlist

@format
Treat locate results as a play-list.
Optional interactive prefix arg shuffles playlist.

(fn &optional SHUFFLE)
@end format
@end deffn

@node emacspeak-dismal
@section emacspeak-dismal

### emacspeak-dismal: No Commentary

@subsection Emacspeak-Dismal Commands

@subsubsection emacspeak-dismal-backward-col-and-summarize
@deffn {Command} emacspeak-dismal-backward-col-and-summarize  (cols)
@findex emacspeak-dismal-backward-col-and-summarize

@format
Move backward by arg columns
 (the previous column by default)and summarize it.

(fn COLS)
@end format
@end deffn

@subsubsection emacspeak-dismal-backward-row-and-summarize
@deffn {Command} emacspeak-dismal-backward-row-and-summarize  (rows)
@findex emacspeak-dismal-backward-row-and-summarize

@format
Move backward by arg rows
 (the previous row by default)and summarize it.

(fn ROWS)
@end format
@end deffn

@subsubsection emacspeak-dismal-col-summarize
@deffn {Command} emacspeak-dismal-col-summarize   
@findex emacspeak-dismal-col-summarize

@format
Summarizes a col using the specification in list
emacspeak-dismal-col-summarizer-list
@end format
@end deffn

@subsubsection emacspeak-dismal-display-cell-expression
@deffn {Command} emacspeak-dismal-display-cell-expression   
@findex emacspeak-dismal-display-cell-expression

@format
Display the expression in the message area
@end format
@end deffn

@subsubsection emacspeak-dismal-display-cell-value
@deffn {Command} emacspeak-dismal-display-cell-value   
@findex emacspeak-dismal-display-cell-value

@format
Display the cell value in the message area
@end format
@end deffn

@subsubsection emacspeak-dismal-display-cell-with-col-header
@deffn {Command} emacspeak-dismal-display-cell-with-col-header   
@findex emacspeak-dismal-display-cell-with-col-header

@format
Display current cell along with its column header.
The ‘column header’ is the entry in row 0.
@end format
@end deffn

@subsubsection emacspeak-dismal-display-cell-with-row-header
@deffn {Command} emacspeak-dismal-display-cell-with-row-header   
@findex emacspeak-dismal-display-cell-with-row-header

@format
Displays current cell along with its row header.
The ‘row header’ is the entry in column 0.
@end format
@end deffn

@subsubsection emacspeak-dismal-forward-col-and-summarize
@deffn {Command} emacspeak-dismal-forward-col-and-summarize  (cols)
@findex emacspeak-dismal-forward-col-and-summarize

@format
Move forward by arg columns
 (the next column by default)and summarize it.

(fn COLS)
@end format
@end deffn

@subsubsection emacspeak-dismal-forward-row-and-summarize
@deffn {Command} emacspeak-dismal-forward-row-and-summarize  (rows)
@findex emacspeak-dismal-forward-row-and-summarize

@format
Move forward by arg rows
 (the next row by default)and summarize it.

(fn ROWS)
@end format
@end deffn

@subsubsection emacspeak-dismal-row-summarize
@deffn {Command} emacspeak-dismal-row-summarize   
@findex emacspeak-dismal-row-summarize

@format
Summarizes a row using the specification in list
emacspeak-dismal-row-summarizer-list
@end format
@end deffn

@subsubsection emacspeak-dismal-set-col-summarizer-list
@deffn {Command} emacspeak-dismal-set-col-summarizer-list   
@findex emacspeak-dismal-set-col-summarizer-list

@format
Specify or reset col summarizer list.
@end format
@end deffn

@subsubsection emacspeak-dismal-set-row-summarizer-list
@deffn {Command} emacspeak-dismal-set-row-summarizer-list   
@findex emacspeak-dismal-set-row-summarizer-list

@format
Specify or reset row summarizer list.
@end format
@end deffn

@subsubsection emacspeak-dismal-set-sheet-summarizer-list
@deffn {Command} emacspeak-dismal-set-sheet-summarizer-list   
@findex emacspeak-dismal-set-sheet-summarizer-list

@format
Specify or reset sheet summarizer list.
@end format
@end deffn

@subsubsection emacspeak-dismal-sheet-summarize
@deffn {Command} emacspeak-dismal-sheet-summarize   
@findex emacspeak-dismal-sheet-summarize

@format
Summarizes a sheet using the specification in list
emacspeak-dismal-sheet-summarizer-list
@end format
@end deffn

@node emacspeak-dumb-jump
@section emacspeak-dumb-jump

DUMB-JUMP ==  Jump to imputed cross-references  in source code.
This module speech-enables dumb-jump

@node emacspeak-eat
@section emacspeak-eat

EAT ==  Emacs Terminal Emulator

@node emacspeak-ecb
@section emacspeak-ecb

The ECB is an Emacs Class Browser.
This module speech-enables ECB

@subsection Emacspeak-Ecb Commands

@subsubsection emacspeak-ecb-speak-window-directories
@deffn {Command} emacspeak-ecb-speak-window-directories   
@findex emacspeak-ecb-speak-window-directories

@format
Speak contents of directories window.
@end format
@end deffn

@subsubsection emacspeak-ecb-speak-window-history
@deffn {Command} emacspeak-ecb-speak-window-history   
@findex emacspeak-ecb-speak-window-history

@format
Speak contents of history window.
@end format
@end deffn

@subsubsection emacspeak-ecb-speak-window-methods
@deffn {Command} emacspeak-ecb-speak-window-methods   
@findex emacspeak-ecb-speak-window-methods

@format
Speak contents of methods window.
@end format
@end deffn

@subsubsection emacspeak-ecb-speak-window-sources
@deffn {Command} emacspeak-ecb-speak-window-sources   
@findex emacspeak-ecb-speak-window-sources

@format
Speak contents of sources window.
@end format
@end deffn

@subsubsection emacspeak-ecb-tree-backspace
@deffn {Command} emacspeak-ecb-tree-backspace   
@findex emacspeak-ecb-tree-backspace

@format
Back up during incremental search in tree buffers.
@end format
@end deffn

@subsubsection emacspeak-ecb-tree-clear
@deffn {Command} emacspeak-ecb-tree-clear   
@findex emacspeak-ecb-tree-clear

@format
Clear search pattern during incremental search in tree buffers.
@end format
@end deffn

@node emacspeak-ediff
@section emacspeak-ediff

Ediff provides a nice visual interface to diff. ;;;Comparing and
patching files is easy with ediff when you can see the screen.
This module provides Emacspeak extensions to work fluently
with ediff. Try it out, it's an excellent example of why
Emacspeak is better than a traditional screenreader. This module
was originally written to interface to the old ediff.el bundled
with GNU Emacs 19.28 and earlier. It has been updated to work
with the newer and much larger ediff system found in Emacs 19.29
and later.

When using under modern versions of Emacs, I recommend setting
(setq ediff-window-setup-function 'ediff-setup-windows-plain)
so that Emacs always displays Ediff windows in a single frame.

@subsection Emacspeak-Ediff Commands

@subsubsection emacspeak-ediff-speak-current-difference
@deffn {Command} emacspeak-ediff-speak-current-difference   
@findex emacspeak-ediff-speak-current-difference

@format
Speak the current difference
@end format
@end deffn

@node emacspeak-eglot
@section emacspeak-eglot

EGLOT ==  LSP Support for emacs

@node emacspeak-ein
@section emacspeak-ein

EIN ==  Emacs IPython Notebook
You can install package EIN via mELPA
This module speech-enables EIN

  Required modules

@subsection Emacspeak-Ein Commands

@subsubsection emacspeak-ein-speak-current-cell
@deffn {Command} emacspeak-ein-speak-current-cell   
@findex emacspeak-ein-speak-current-cell

@format
Speak current cell.
@end format
@end deffn

@node emacspeak-elfeed
@section emacspeak-elfeed

ELFEED ==  Feed Reader for Emacs.
Install from elpa
M-x package-install  elfeed

  Required modules

@subsection Emacspeak-Elfeed Commands

@subsubsection emacspeak-elfeed-eww-entry-at-point
@deffn {Command} emacspeak-elfeed-eww-entry-at-point   
@findex emacspeak-elfeed-eww-entry-at-point

@format
Display current article in EWW.
@end format
@end deffn

@subsubsection emacspeak-elfeed-filter-entry-at-point
@deffn {Command} emacspeak-elfeed-filter-entry-at-point   
@findex emacspeak-elfeed-filter-entry-at-point

@format
Display current article after filtering.
@end format
@end deffn

@subsubsection emacspeak-elfeed-next-entry
@deffn {Command} emacspeak-elfeed-next-entry   
@findex emacspeak-elfeed-next-entry

@format
Move to next entry and speak it.
@end format
@end deffn

@subsubsection emacspeak-elfeed-previous-entry
@deffn {Command} emacspeak-elfeed-previous-entry   
@findex emacspeak-elfeed-previous-entry

@format
Move to previous entry and speak it.
@end format
@end deffn

@subsubsection emacspeak-elfeed-speak-entry-at-point
@deffn {Command} emacspeak-elfeed-speak-entry-at-point   
@findex emacspeak-elfeed-speak-entry-at-point

@format
Speak entry at point.
@end format
@end deffn

@node emacspeak-elisp-refs
@section emacspeak-elisp-refs

Speech-enable package elisp-refs.
ELISP-REFS ==

@node emacspeak-ellama
@section emacspeak-ellama

ELLAMA ==  Emacs LLM Interaction.
ellama uses package llm, and this module speech-enables ellama.

@node emacspeak-elpher
@section emacspeak-elpher

ELPHER ==  gopher/gemini client
Let's see if we can rescue the Content-Oriented Web

@node emacspeak-elpy
@section emacspeak-elpy

ELPY ==  Emacs Lisp Python IDE
Speech-enables all aspects of elpy.

@node emacspeak-elscreen
@section emacspeak-elscreen

ELSCREEN ==  Emacs Window Session Manager
Speech-enable interactive commands.

@node emacspeak-emms
@section emacspeak-emms

Speech-enables EMMS --- the Emacs equivalent of XMMS
available from  the Emacs package archive.
http://savannah.gnu.org/project/emms
EMMS is under active development,
to get the current CVS version, use Emacspeak command
M-x emacspeak-cvs-gnu-get-project-snapshot RET emms RET

@subsection Emacspeak-Emms Commands

@subsubsection emacspeak-emms-speak-current-track
@deffn {Command} emacspeak-emms-speak-current-track   
@findex emacspeak-emms-speak-current-track

@format
Speak current track.
@end format
@end deffn

@node emacspeak-empv
@section emacspeak-empv

EMPV ==  Another Emacs Media Player
Provides better Youtube integration

@subsection Emacspeak-Empv Commands

@subsubsection emacspeak-empv-absolute-seek
@deffn {Command} emacspeak-empv-absolute-seek  (target)
@findex emacspeak-empv-absolute-seek

@format
Absolute seek in seconds,see ‘empv-seek’

(fn TARGET)
@end format
@end deffn

@subsubsection emacspeak-empv-accumulate-to-register
@deffn {Command} emacspeak-empv-accumulate-to-register   
@findex emacspeak-empv-accumulate-to-register

@format
Accumulate media links to register u
@end format
@end deffn

@subsubsection emacspeak-empv-clear-filter
@deffn {Command} emacspeak-empv-clear-filter   
@findex emacspeak-empv-clear-filter

@format
Clear all filters. 
@end format
@end deffn

@subsubsection emacspeak-empv-percentage-seek
@deffn {Command} emacspeak-empv-percentage-seek  (target)
@findex emacspeak-empv-percentage-seek

@format
Percentage seek in seconds,see ‘empv-seek’

(fn TARGET)
@end format
@end deffn

@subsubsection emacspeak-empv-play-file
@deffn {Command} emacspeak-empv-play-file  (file &optional left)
@table @kbd
@item C-e '
@kindex C-e '
@end table

@findex emacspeak-empv-play-file

@format
Play file using mpv.
Interactive prefix arg plays on left ear using alsa.

(fn FILE &optional LEFT)
@end format
@end deffn

@subsubsection emacspeak-empv-play-local
@deffn {Command} emacspeak-empv-play-local  (file)
@table @kbd
@item C-e "
@kindex C-e "
@end table

@findex emacspeak-empv-play-local

@format
Play a local resource  using mpv.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-empv-play-url
@deffn {Command} emacspeak-empv-play-url  (url &optional left)
@table @kbd
@item C-e y y
@kindex C-e y y
@end table

@findex emacspeak-empv-play-url

@format
Play URL using mpv.
Interactive prefix arg plays on left ear using Alsa. 

(fn URL &optional LEFT)
@end format
@end deffn

@subsubsection emacspeak-empv-relative-seek
@deffn {Command} emacspeak-empv-relative-seek  (target)
@findex emacspeak-empv-relative-seek

@format
Relative seek in seconds,see ‘empv-seek’

(fn TARGET)
@end format
@end deffn

@subsubsection emacspeak-empv-toggle-custom
@deffn {Command} emacspeak-empv-toggle-custom   
@findex emacspeak-empv-toggle-custom

@format
Toggle our custom filters.
@end format
@end deffn

@subsubsection emacspeak-empv-toggle-filter
@deffn {Command} emacspeak-empv-toggle-filter  (filter)
@findex emacspeak-empv-toggle-filter

@format
Toggle Filter.
Filter is of the  form name=arg-1:arg-2:...

(fn FILTER)
@end format
@end deffn

@subsubsection emacspeak-empv-yt-download
@deffn {Command} emacspeak-empv-yt-download   
@findex emacspeak-empv-yt-download

@format
Download Youtube result.
@end format
@end deffn

@subsection emacspeak-empv Options

@defvar {User Option} emacspeak-empv-custom-filters
List of custom filters to turn on/off at one shot
The default value is suitable for classical instrumental music.

Default Value: 

@verbatim

("extrastereo" "stereowiden=4.25:.1:735:.8")

@end verbatim

@end defvar

@node emacspeak-enriched
@section emacspeak-enriched

emacspeak extensions to voiceify rich  text.

@subsection Emacspeak-Enriched Commands

@subsubsection emacspeak-enriched-voiceify-faces
@deffn {Command} emacspeak-enriched-voiceify-faces  (start end)
@findex emacspeak-enriched-voiceify-faces

@format
Map base fonts to voices.
Useful in voiceifying rich text.

(fn START END)
@end format
@end deffn

@node emacspeak-entertain
@section emacspeak-entertain

Auditory interface to misc games

@subsection Emacspeak-Entertain Commands

@subsubsection emacspeak-hangman-speak-guess
@deffn {Command} emacspeak-hangman-speak-guess   
@findex emacspeak-hangman-speak-guess

@format
Speak current guessed string. 
@end format
@end deffn

@subsubsection emacspeak-hangman-speak-statistics
@deffn {Command} emacspeak-hangman-speak-statistics   
@findex emacspeak-hangman-speak-statistics

@format
Speak statistics.
@end format
@end deffn

@node emacspeak-enwc
@section emacspeak-enwc

ENWC ==  Emacs Network Client
Work easily with NM and friends.

@node emacspeak-epa
@section emacspeak-epa

EPA == EasyPG Assistant
Integrate GPG functionality into Emacs.
Speech-enable all interactive commands.

@node emacspeak-eperiodic
@section emacspeak-eperiodic

eperiodic produces an interactive periodic table of elements
and can be found at
http://vegemite.chem.nottingham.ac.uk/~matt/emacs/eperiodic.el

@subsection Emacspeak-Eperiodic Commands

@subsubsection emacspeak-eperiodic-goto-property-section
@deffn {Command} emacspeak-eperiodic-goto-property-section   
@findex emacspeak-eperiodic-goto-property-section

@format
Mark position and jump to properties section.
@end format
@end deffn

@subsubsection emacspeak-eperiodic-next-line
@deffn {Command} emacspeak-eperiodic-next-line   
@findex emacspeak-eperiodic-next-line

@format
Move to next row and speak element.
@end format
@end deffn

@subsubsection emacspeak-eperiodic-play-description
@deffn {Command} emacspeak-eperiodic-play-description   
@findex emacspeak-eperiodic-play-description

@format
Play audio description from WebElements.
@end format
@end deffn

@subsubsection emacspeak-eperiodic-previous-line
@deffn {Command} emacspeak-eperiodic-previous-line   
@findex emacspeak-eperiodic-previous-line

@format
Move to next row and speak element.
@end format
@end deffn

@subsubsection emacspeak-eperiodic-speak-current-element
@deffn {Command} emacspeak-eperiodic-speak-current-element   
@findex emacspeak-eperiodic-speak-current-element

@format
Speak element at point.
@end format
@end deffn

@node emacspeak-epub
@section emacspeak-epub

@subsection Introduction
This module implements the Emacspeak EPub
Bookshelf --- a unified interface for organizing, locating and
reading EPub EBooks on the emacspeak Audio Desktop. The epub
reader is built using the Emacs Web Browser (EWW), and all of
emacspeak's EWW conveniences are available when reading EBooks ---
see @xref{emacspeak-eww} for useful tools including bookmarking
and structured navigation. For now it supports epub2 --- it will
support epub3 some time in the future.

The main entry point is command @command{emacspeak-epub} bound to
@kbd{C-e g}. This command opens a new bookshelf buffer unless the
user has previously opened a specific bookshelf. A
@emph{bookshelf} is a buffer that lists books placed on a given
bookshelf --- these are listed by @emph{title} and
@emph{author}. The bookshelf buffer is in a special mode that
provides single-key commands for adding, removing and finding
books, as well as for opening the selected book using Emacs'
built-in Web browser (@command{eww}).

The next few sections give a high-level overview of the emacspeak
Bookshelf and EPub interaction, followed by detailed documentation
on the various commands and user options.

@subsection Organizing EBooks On The Emacspeak Desktop

In the simplest case, EBooks can be placed under a specific
directory (with sub-directories as needed).
Customize   user option @code{emacspeak-epub-library-directory}
to point to this location.
Here is  a quick summary of commands for
organizing, saving and opening  a bookshelf:

@table @kbd
@item a
emacspeak-epub-bookshelf-add-epub
@item b
emacspeak-epub-bookshelf-open
@item c
emacspeak-epub-bookshelf-clear
@item d
emacspeak-epub-bookshelf-remove-this-book
@item r
emacspeak-epub-bookshelf-rename
@item l
emacspeak-epub-locate-epubs
@item C-a
emacspeak-epub-bookshelf-add-directory
@item C-d
emacspeak-epub-bookshelf-remove-directory
@item C-l
emacspeak-epub-bookshelf-redraw
@item C-o
emacspeak-epub-bookshelf-open-epub
@item M-s
emacspeak-epub-bookshelf-save
@item C-x C-q
emacspeak-epub-bookshelf-refresh
@item C-x C-s
emacspeak-epub-bookshelf-save
@end table

@subsection Integrating With Project Gutenberg

Gutenberg integration provides one-shot commands for downloading
the latest copy of the Gutenberg catalog and  finding and downloading
the desired epub for offline reading.

@table @kbd
@item C
emacspeak-epub-gutenberg-catalog
@item g
emacspeak-epub-gutenberg-download
@end table
Once downloaded, these EBooks can be
organized under  @code{emacspeak-epub-library-directory}
For  more advanced usage, see the next section
on integrating with Calibre catalogs.

@subsection Calibre Integration

Project Calibre enables the indexing and searching of large EBook
collections.  Read the Calibre documentation for organizing and
indexing your EBook library.  See user options named
@code{emacspeak-epub-calibre-*} for customizing emacspeak to work
with Calibre.  Once set up, Calibre integration provides the
following commands from the @emph{bookshelf} buffer:

@table @kbd
@item /
emacspeak-epub-calibre-results
@item A
emacspeak-epub-bookshelf-calibre-author
@item S
emacspeak-epub-bookshelf-calibre-search
@item T
emacspeak-epub-bookshelf-calibre-title
@end table

@subsection Reading EBooks From The Bookshelf

The most efficient means to read an EBook is to have EWW render
the entire book --- this works well even for very large EBooks
given that EWW is efficient at rendering HTML. Rendering the
entire book means that all of the contents are available for
searching. To view an EBook in its entirety, use command
@code{emacspeak-epub-eww}. You can open the EPub table of contents
with command @code{emacspeak-epub-open}; for a
well-constructed epub, this TOC should provide hyperlinks to each
section listed in the table of contents.

@table @kbd
@item RET
emacspeak-epub-eww
@item e
emacspeak-epub-eww
@item f
emacspeak-epub-browse-files
@item o
emacspeak-epub-open
@end table

@subsection Emacspeak-Epub Commands

@subsubsection emacspeak-calibre-mode
@deffn {Command} emacspeak-calibre-mode   
@findex emacspeak-calibre-mode

@format
A Calibre Front-end.
Letters do not insert themselves; instead, they are commands.

Key             Binding
-------------------------------------------------------------------------------
RET		emacspeak-epub-calibre-dired-at-point

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-calibre-mode-hook’, as the
final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-epub
@deffn {Command} emacspeak-epub   
@table @kbd
@item C-e g
@kindex C-e g
@end table

@findex emacspeak-epub

@format
EPub  Interaction.
When opened, displays a bookshelf consisting of  epubs found at the
root directory,see M-x emacspeak-epub-mode
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-add-directory
@deffn {Command} emacspeak-epub-bookshelf-add-directory  (directory &optional recursive)
@findex emacspeak-epub-bookshelf-add-directory

@format
Add EPubs found in specified directory to the bookshelf.
Interactive prefix arg searches recursively in directory.

(fn DIRECTORY &optional RECURSIVE)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-add-epub
@deffn {Command} emacspeak-epub-bookshelf-add-epub  (epub-file)
@findex emacspeak-epub-bookshelf-add-epub

@format
Add epub file to current bookshelf.

(fn EPUB-FILE)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-calibre-author
@deffn {Command} emacspeak-epub-bookshelf-calibre-author  (pattern)
@findex emacspeak-epub-bookshelf-calibre-author

@format
Add results of an author search to current bookshelf.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-calibre-search
@deffn {Command} emacspeak-epub-bookshelf-calibre-search  (pattern)
@findex emacspeak-epub-bookshelf-calibre-search

@format
Add results of an title/author search to current bookshelf.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-calibre-title
@deffn {Command} emacspeak-epub-bookshelf-calibre-title  (pattern)
@findex emacspeak-epub-bookshelf-calibre-title

@format
Add results of an title search to current bookshelf.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-clear
@deffn {Command} emacspeak-epub-bookshelf-clear   
@findex emacspeak-epub-bookshelf-clear

@format
Clear all books from bookshelf.
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-load
@deffn {Command} emacspeak-epub-bookshelf-load   
@findex emacspeak-epub-bookshelf-load

@format
Load bookshelf metadata from disk.
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-open
@deffn {Command} emacspeak-epub-bookshelf-open  (bookshelf)
@findex emacspeak-epub-bookshelf-open

@format
Load bookshelf metadata from specified bookshelf.

(fn BOOKSHELF)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-open-epub
@deffn {Command} emacspeak-epub-bookshelf-open-epub  (epub-file)
@findex emacspeak-epub-bookshelf-open-epub

@format
Open epub file and add it to current bookshelf.

(fn EPUB-FILE)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-redraw
@deffn {Command} emacspeak-epub-bookshelf-redraw  (&optional author-first)
@findex emacspeak-epub-bookshelf-redraw

@format
Redraw Bookshelf.
Optional interactive prefix arg author-first prints author at the
  left.

(fn &optional AUTHOR-FIRST)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-refresh
@deffn {Command} emacspeak-epub-bookshelf-refresh   
@findex emacspeak-epub-bookshelf-refresh

@format
Refresh and redraw bookshelf.
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-remove-directory
@deffn {Command} emacspeak-epub-bookshelf-remove-directory  (directory &optional recursive)
@findex emacspeak-epub-bookshelf-remove-directory

@format
Remove EPubs found in specified directory from the bookshelf.
Interactive prefix arg searches recursively in directory.

(fn DIRECTORY &optional RECURSIVE)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-remove-this-book
@deffn {Command} emacspeak-epub-bookshelf-remove-this-book   
@findex emacspeak-epub-bookshelf-remove-this-book

@format
Remove the book on current line from this bookshelf.
No book files are deleted.
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-rename
@deffn {Command} emacspeak-epub-bookshelf-rename  (name &optional overwrite)
@findex emacspeak-epub-bookshelf-rename

@format
Saves current bookshelf to  specified name.
Interactive prefix arg ‘overwrite’ will overwrite existing file.

(fn NAME &optional OVERWRITE)
@end format
@end deffn

@subsubsection emacspeak-epub-bookshelf-save
@deffn {Command} emacspeak-epub-bookshelf-save   
@findex emacspeak-epub-bookshelf-save

@format
Save bookshelf metadata.
@end format
@end deffn

@subsubsection emacspeak-epub-browse-files
@deffn {Command} emacspeak-epub-browse-files  (epub)
@findex emacspeak-epub-browse-files

@format
Browse list of HTML files in  EPub.
Useful if table of contents in toc.ncx is empty.

(fn EPUB)
@end format
@end deffn

@subsubsection emacspeak-epub-calibre-dired-at-point
@deffn {Command} emacspeak-epub-calibre-dired-at-point   
@findex emacspeak-epub-calibre-dired-at-point

@format
Open directory containing current result.
@end format
@end deffn

@subsubsection emacspeak-epub-calibre-results
@deffn {Command} emacspeak-epub-calibre-results   
@findex emacspeak-epub-calibre-results

@format
Show most recent Calibre search results.
@end format
@end deffn

@subsubsection emacspeak-epub-delete
@deffn {Command} emacspeak-epub-delete   
@findex emacspeak-epub-delete

@format
Delete EPub under point.
@end format
@end deffn

@subsubsection emacspeak-epub-eww
@deffn {Command} emacspeak-epub-eww  (epub-file &optional use-ncx)
@findex emacspeak-epub-eww

@format
Display entire book  using EWW from EPub.
Use content listed in toc.ncx  if prefix-arg use-ncx is true.
Default is to  use   the sorted list of html files
in the epub file.

(fn EPUB-FILE &optional USE-NCX)
@end format
@end deffn

@subsubsection emacspeak-epub-google
@deffn {Command} emacspeak-epub-google  (query)
@findex emacspeak-epub-google

@format
Search for Epubs from Google Books.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-epub-gutenberg-catalog
@deffn {Command} emacspeak-epub-gutenberg-catalog  (&optional refresh)
@findex emacspeak-epub-gutenberg-catalog

@format
Open Gutenberg catalog.
Fetch if needed, or if refresh is T.

(fn &optional REFRESH)
@end format
@end deffn

@subsubsection emacspeak-epub-gutenberg-download
@deffn {Command} emacspeak-epub-gutenberg-download  (book-id &optional download)
@findex emacspeak-epub-gutenberg-download

@format
Open web page for specified book.
Place download url for epub in kill ring.
With interactive prefix arg ‘download’, download the epub.

(fn BOOK-ID &optional DOWNLOAD)
@end format
@end deffn

@subsubsection emacspeak-epub-locate-epubs
@deffn {Command} emacspeak-epub-locate-epubs  (pattern)
@findex emacspeak-epub-locate-epubs

@format
Locate epub files using locate.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-epub-mode
@deffn {Command} emacspeak-epub-mode   
@findex emacspeak-epub-mode

@format
An EPub Front-end.
Letters do not insert themselves; instead, they are commands.

Key             Binding
-------------------------------------------------------------------------------
C-a		emacspeak-epub-bookshelf-add-directory
C-d		emacspeak-epub-bookshelf-remove-directory
C-k		emacspeak-epub-delete
C-l		emacspeak-epub-bookshelf-redraw
RET		emacspeak-epub-eww
C-o		emacspeak-epub-bookshelf-open-epub
/		emacspeak-epub-calibre-results
A		emacspeak-epub-bookshelf-calibre-author
C		emacspeak-epub-gutenberg-catalog
G		emacspeak-epub-google
O		emacspeak-epub-open-with-nov
S		emacspeak-epub-bookshelf-calibre-search
T		emacspeak-epub-bookshelf-calibre-title
a		emacspeak-epub-bookshelf-add-epub
b		emacspeak-epub-bookshelf-open
c		emacspeak-epub-bookshelf-clear
d		emacspeak-epub-bookshelf-remove-this-book
e		emacspeak-epub-eww
f		emacspeak-epub-browse-files
g		emacspeak-epub-gutenberg-download
l		emacspeak-epub-locate-epubs
n		next-line
o		emacspeak-epub-open
p		previous-line
r		emacspeak-epub-bookshelf-rename

M-s		emacspeak-epub-bookshelf-save

C-x C-q		emacspeak-epub-bookshelf-refresh
C-x C-s		emacspeak-epub-bookshelf-save

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-epub-mode-hook’, as the final
or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-epub-next
@deffn {Command} emacspeak-epub-next   
@findex emacspeak-epub-next

@format
Move to next book.
@end format
@end deffn

@subsubsection emacspeak-epub-open
@deffn {Command} emacspeak-epub-open  (epub-file)
@findex emacspeak-epub-open

@format
Open specified Epub.
Filename may need to  be shell-quoted when called from Lisp.

(fn EPUB-FILE)
@end format
@end deffn

@subsubsection emacspeak-epub-open-with-nov
@deffn {Command} emacspeak-epub-open-with-nov   
@findex emacspeak-epub-open-with-nov

@format
Open ebook at point in nov-mode.
@end format
@end deffn

@subsubsection emacspeak-epub-previous
@deffn {Command} emacspeak-epub-previous   
@findex emacspeak-epub-previous

@format
Move to previous book.
@end format
@end deffn

@subsubsection emacspeak-epub-url-executor
@deffn {Command} emacspeak-epub-url-executor  (url)
@findex emacspeak-epub-url-executor

@format
Custom URL executor for use in EPub Mode.

(fn URL)
@end format
@end deffn

@subsection emacspeak-epub Options

@defvar {User Option} emacspeak-epub-bookshelf-directory
Directory where we keep .bsf files defining various bookshelves.

Default Value: 

@verbatim

"/home/raman/EBooks/bsf/"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-epub-calibre-root-dir
Root of Calibre library.

Default Value: 

@verbatim

"/home/raman/EBooks/calibre"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-epub-gutenberg-mirror
Base URL  for Gutenberg mirror.

Default Value: 

@verbatim

"http://www.gutenberg.org/ebooks/"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-epub-gutenberg-suffix
Suffix of book type we retrieve.

Default Value: 

@verbatim

".epub.noimages"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-epub-library-directory
Directory under which we store Epubs.

Default Value: 

@verbatim

"/home/raman/EBooks/"

@end verbatim

@end defvar

@node emacspeak-erc
@section emacspeak-erc

erc.el is a modern Emacs client for IRC including color
and font locking support.
erc.el - an Emacs IRC client (by Alexander L. Belikoff)
http://www.cs.cmu.edu/~berez/irc/erc.el

@subsection Emacspeak-Erc Commands

@subsubsection emacspeak-erc-add-name-to-monitor
@deffn {Command} emacspeak-erc-add-name-to-monitor  (name &optional quiten-pronunciation)
@findex emacspeak-erc-add-name-to-monitor

@format
Add people to monitor in this room.
Optional interactive prefix  arg defines a pronunciation that
  silences speaking of this perso’s name.

(fn NAME &optional QUITEN-PRONUNCIATION)
@end format
@end deffn

@subsubsection emacspeak-erc-delete-name-from-monitor
@deffn {Command} emacspeak-erc-delete-name-from-monitor  (name)
@findex emacspeak-erc-delete-name-from-monitor

@format
Remove name to monitor in this room.

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-erc-setup-cricket-rules
@deffn {Command} emacspeak-erc-setup-cricket-rules   
@findex emacspeak-erc-setup-cricket-rules

@format
Set up #cricket channels.
@end format
@end deffn

@subsubsection emacspeak-erc-toggle-my-monitor
@deffn {Command} emacspeak-erc-toggle-my-monitor  (&optional prefix)
@findex emacspeak-erc-toggle-my-monitor

@format
Toggle state of ERC  monitor of my messages.
Interactive PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end format
@end deffn

@subsubsection emacspeak-erc-toggle-room-monitor
@deffn {Command} emacspeak-erc-toggle-room-monitor  (&optional prefix)
@findex emacspeak-erc-toggle-room-monitor

@format
Toggle state of ERC room monitor.
Interactive 
PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end format
@end deffn

@subsubsection emacspeak-erc-toggle-speak-all-participants
@deffn {Command} emacspeak-erc-toggle-speak-all-participants  (&optional prefix)
@findex emacspeak-erc-toggle-speak-all-participants

@format
Toggle state of ERC speak all participants..
Interactive 
PREFIX arg means toggle the global default value, and then
set the current local value to the result.
@end format
@end deffn

@subsection emacspeak-erc Options

@defvar {User Option} emacspeak-erc-ignore-notices
Set to T if you dont want to see notification  messages from the
server.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-erc-my-nick
My IRC nick.

Default Value: 

@verbatim

""

@end verbatim

@end defvar

@defvar {User Option} emacspeak-erc-speak-all-participants
Speak all things said if t.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-eshell
@section emacspeak-eshell

EShell is a shell implemented entirely in Emacs Lisp.
It is part of emacs 21 --and can also be used under
Emacs 20.
This module speech-enables EShell

@node emacspeak-ess
@section emacspeak-ess

ESS == Emacs Speaks Statistics
This module makes ESS speak.

  Required modules

@node emacspeak-etable
@section emacspeak-etable

table.el provides rich table editing for emacs.
this module speech-enables table.el

@subsection Emacspeak-Etable Commands

@subsubsection emacspeak-etable-speak-cell
@deffn {Command} emacspeak-etable-speak-cell   
@findex emacspeak-etable-speak-cell

@format
Speak current cell.
@end format
@end deffn

@node emacspeak-eterm
@section emacspeak-eterm

This module makes eterm talk.
Eterm is the new terminal emulator for Emacs.
Use of emacspeak with eterm really needs an info page.
At present, the only documentation is the source level documentation.
This module uses Control-t as an additional prefix key to allow the user
To move around the terminal and have different parts spoken.

@subsection Emacspeak-Eterm Commands

@subsubsection emacspeak-eterm-copy-region-to-register
@deffn {Command} emacspeak-eterm-copy-region-to-register  (register)
@findex emacspeak-eterm-copy-region-to-register

@format
Copy text from terminal to an Emacs REGISTER.
This copies  region delimited by the emacspeak eterm marker
set by command M-x emacspeak-eterm-set-marker and the
emacspeak eterm pointer to a register.

(fn REGISTER)
@end format
@end deffn

@subsubsection emacspeak-eterm-define-window
@deffn {Command} emacspeak-eterm-define-window  (id)
@findex emacspeak-eterm-define-window

@format
Prompt for a window ID.
The window is then define to be
the rectangle delimited by point and eterm mark.  This is to
be used when emacspeak is set to review mode inside an
eterm.

(fn ID)
@end format
@end deffn

@subsubsection emacspeak-eterm-describe-window
@deffn {Command} emacspeak-eterm-describe-window  (id)
@findex emacspeak-eterm-describe-window

@format
Describe an eterm  window.
Description indicates eterm window coordinates and whether it is stretchable

(fn ID)
@end format
@end deffn

@subsubsection emacspeak-eterm-goto-line
@deffn {Command} emacspeak-eterm-goto-line  (line)
@findex emacspeak-eterm-goto-line

@format
Move emacspeak eterm pointer to a specified LINE.

(fn LINE)
@end format
@end deffn

@subsubsection emacspeak-eterm-kill-ring-save-region
@deffn {Command} emacspeak-eterm-kill-ring-save-region   
@findex emacspeak-eterm-kill-ring-save-region

@format
Copy text from terminal to kill ring.
This copies  region delimited by the emacspeak eterm marker
set by command M-x emacspeak-eterm-set-marker and the
emacspeak eterm pointer.
@end format
@end deffn

@subsubsection emacspeak-eterm-maybe-send-raw
@deffn {Command} emacspeak-eterm-maybe-send-raw   
@findex emacspeak-eterm-maybe-send-raw

@format
Send a raw character through if in the terminal buffer.
Execute end of line if
in a non eterm buffer if executed via C-e C-e
@end format
@end deffn

@subsubsection emacspeak-eterm-paste-register
@deffn {Command} emacspeak-eterm-paste-register  (register)
@findex emacspeak-eterm-paste-register

@format
Paste contents of REGISTER at current location.
If the specified register contains text, then that text is
sent to the terminal as if it were typed by the user.

(fn REGISTER)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-backward-word
@deffn {Command} emacspeak-eterm-pointer-backward-word  (count)
@findex emacspeak-eterm-pointer-backward-word

@format
Move the pointer backward  by words.
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-down
@deffn {Command} emacspeak-eterm-pointer-down  (count)
@findex emacspeak-eterm-pointer-down

@format
Move the pointer down a line.
Argument COUNT specifies number of lines by which to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-forward-word
@deffn {Command} emacspeak-eterm-pointer-forward-word  (count)
@findex emacspeak-eterm-pointer-forward-word

@format
Move the pointer forward by words.
Interactive numeric prefix arg specifies number of words to move.
Argument COUNT specifies number of words by which to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-left
@deffn {Command} emacspeak-eterm-pointer-left  (count)
@findex emacspeak-eterm-pointer-left

@format
Move the pointer left.
Argument COUNT specifies number of columns by which to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-right
@deffn {Command} emacspeak-eterm-pointer-right  (count)
@findex emacspeak-eterm-pointer-right

@format
Move the pointer right.
Argument COUNT specifies number of columns by which to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-bottom
@deffn {Command} emacspeak-eterm-pointer-to-bottom   
@findex emacspeak-eterm-pointer-to-bottom

@format
Move the pointer to the bottom  of the screen.
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-cursor
@deffn {Command} emacspeak-eterm-pointer-to-cursor   
@findex emacspeak-eterm-pointer-to-cursor

@format
Move the pointer to the cursor.
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-left-edge
@deffn {Command} emacspeak-eterm-pointer-to-left-edge   
@findex emacspeak-eterm-pointer-to-left-edge

@format
Move the pointer to the right edge.
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-next-color-change
@deffn {Command} emacspeak-eterm-pointer-to-next-color-change  (&optional count)
@findex emacspeak-eterm-pointer-to-next-color-change

@format
Move the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip.

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-previous-color-change
@deffn {Command} emacspeak-eterm-pointer-to-previous-color-change  (&optional count)
@findex emacspeak-eterm-pointer-to-previous-color-change

@format
Move the eterm pointer to the next color change.
This allows you to move between highlighted regions of the screen.
Optional argument COUNT specifies how many changes to skip.

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-right-edge
@deffn {Command} emacspeak-eterm-pointer-to-right-edge   
@findex emacspeak-eterm-pointer-to-right-edge

@format
Move the pointer to the right edge.
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-to-top
@deffn {Command} emacspeak-eterm-pointer-to-top   
@findex emacspeak-eterm-pointer-to-top

@format
Move the pointer to the top of the screen.
@end format
@end deffn

@subsubsection emacspeak-eterm-pointer-up
@deffn {Command} emacspeak-eterm-pointer-up  (count)
@findex emacspeak-eterm-pointer-up

@format
Move the pointer up a line.
Argument COUNT .specifies number of lines by which to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-eterm-search-backward
@deffn {Command} emacspeak-eterm-search-backward   
@findex emacspeak-eterm-search-backward

@format
Search backward on the terminal.
@end format
@end deffn

@subsubsection emacspeak-eterm-search-forward
@deffn {Command} emacspeak-eterm-search-forward   
@findex emacspeak-eterm-search-forward

@format
Search forward on the terminal.
@end format
@end deffn

@subsubsection emacspeak-eterm-set-filter-window
@deffn {Command} emacspeak-eterm-set-filter-window  (flag)
@findex emacspeak-eterm-set-filter-window

@format
Prompt for the id of a predefined window,
and set the ‘filter’ window to it.
Non-nil interactive prefix arg ‘unsets’ the filter window;
this is equivalent to having the entire terminal as the filter window (this is
what eterm starts up with).
Setting the filter window results in emacspeak  only monitoring screen
activity within the filter window.

(fn FLAG)
@end format
@end deffn

@subsubsection emacspeak-eterm-set-focus-window
@deffn {Command} emacspeak-eterm-set-focus-window  (flag)
@findex emacspeak-eterm-set-focus-window

@format
Prompt for the id of a predefined window,
and set the ‘focus’ window to it.
Non-nil interactive prefix arg ‘unsets’ the focus window;
this is equivalent to having the entire terminal as the focus window (this is
what eterm starts up with).
Setting the focus window results in emacspeak  monitoring screen
and speaking that window upon seeing screen activity.

(fn FLAG)
@end format
@end deffn

@subsubsection emacspeak-eterm-set-marker
@deffn {Command} emacspeak-eterm-set-marker   
@findex emacspeak-eterm-set-marker

@format
Set Emacspeak eterm marker.
This sets  the emacspeak eterm marker to the position pointed
to by the emacspeak eterm pointer.
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-cursor
@deffn {Command} emacspeak-eterm-speak-cursor   
@findex emacspeak-eterm-speak-cursor

@format
Speak cursor position.
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-pointer
@deffn {Command} emacspeak-eterm-speak-pointer   
@findex emacspeak-eterm-speak-pointer

@format
Speak current pointer position.
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-pointer-char
@deffn {Command} emacspeak-eterm-speak-pointer-char  (&optional prefix)
@findex emacspeak-eterm-speak-pointer-char

@format
Speak char under eterm pointer.
Pronounces character phonetically unless  called with a PREFIX arg.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-pointer-line
@deffn {Command} emacspeak-eterm-speak-pointer-line   
@findex emacspeak-eterm-speak-pointer-line

@format
Speak the line the pointer is on.
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-pointer-word
@deffn {Command} emacspeak-eterm-speak-pointer-word   
@findex emacspeak-eterm-speak-pointer-word

@format
Speak the word  the pointer is on.
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-predefined-window
@deffn {Command} emacspeak-eterm-speak-predefined-window   
@findex emacspeak-eterm-speak-predefined-window

@format
Speak a predefined eterm window between 1 and 10.
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-screen
@deffn {Command} emacspeak-eterm-speak-screen  (&optional flag)
@findex emacspeak-eterm-speak-screen

@format
Speak the screen.  Default is to speak from the emacspeak pointer  to point.
Optional prefix arg FLAG causes region above
the Emacspeak pointer to be spoken.

(fn &optional FLAG)
@end format
@end deffn

@subsubsection emacspeak-eterm-speak-window
@deffn {Command} emacspeak-eterm-speak-window  (id)
@findex emacspeak-eterm-speak-window

@format
Speak an eterm window.
Argument ID specifies the window.

(fn ID)
@end format
@end deffn

@subsubsection emacspeak-eterm-toggle-filter-window
@deffn {Command} emacspeak-eterm-toggle-filter-window   
@findex emacspeak-eterm-toggle-filter-window

@format
Toggle active state of filter window.
@end format
@end deffn

@subsubsection emacspeak-eterm-toggle-focus-window
@deffn {Command} emacspeak-eterm-toggle-focus-window   
@findex emacspeak-eterm-toggle-focus-window

@format
Toggle active state of focus window.
@end format
@end deffn

@subsubsection emacspeak-eterm-toggle-pointer-mode
@deffn {Command} emacspeak-eterm-toggle-pointer-mode  (&optional prefix)
@findex emacspeak-eterm-toggle-pointer-mode

@format
Toggle emacspeak eterm pointer mode.
With optional interactive prefix  arg, turn it on.
When emacspeak eterm is in pointer mode, the eterm read pointer
stays where it is rather than automatically moving to the terminal cursor when
there is terminal activity.
@end format
@end deffn

@subsubsection emacspeak-eterm-toggle-review
@deffn {Command} emacspeak-eterm-toggle-review   
@findex emacspeak-eterm-toggle-review

@format
Toggle state of eterm review.
In review mode, you can move around the terminal and listen to the contents
without sending input to the terminal itself.
@end format
@end deffn

@subsubsection emacspeak-eterm-yank-window
@deffn {Command} emacspeak-eterm-yank-window  (id)
@findex emacspeak-eterm-yank-window

@format
Yank contents of  an eterm window at point.

(fn ID)
@end format
@end deffn

@subsubsection emacspeak-toggle-eterm-autospeak
@deffn {Command} emacspeak-toggle-eterm-autospeak  (&optional prefix)
@findex emacspeak-toggle-eterm-autospeak

@format
Toggle state of eterm autospeak.
When eterm autospeak is turned on and the terminal is in line
mode, all output to the terminal is automatically spoken.
Interactive prefix arg means toggle the global default value, and
then set the current local value to the result.
@end format
@end deffn

@node emacspeak-eudc
@section emacspeak-eudc

EUDC --Emacs Universal Directory Client
provides a unified interface to directory servers
e.g. ldap servers
this module speech enables eudc

@subsection Emacspeak-Eudc Commands

@subsubsection emacspeak-eudc-send-mail
@deffn {Command} emacspeak-eudc-send-mail   
@findex emacspeak-eudc-send-mail

@format
Send email to the address given by the current record. 
@end format
@end deffn

@node emacspeak-evil
@section emacspeak-evil

EVIL ==  VIM In Emacs
This is work-in-progress and is not complete.

@subsection Emacspeak-Evil Commands

@subsubsection emacspeak-evil-toggle-evil
@deffn {Command} emacspeak-evil-toggle-evil   
@findex emacspeak-evil-toggle-evil

@format
Interactively toggle evil-mode.
@end format
@end deffn

@node emacspeak-eww
@section emacspeak-eww

EWW == Emacs Web Browser
EWW is a light-weight Web browser built into Emacs starting with
Emacs-24.4 . This module speech-enables EWW.

It implements additional interactive commands for navigating the
DOM. It also provides a set of filters for interactively filtering
the DOM by various attributes such as id, class and role.
Finally, this module updates EWW's built-in key-bindings with
Emacspeak conveniences.

@subsection Structured Navigation

These commands move through section headers as defined in HTML.
@table @kbd
@item       1
@command{emacspeak-eww-next-h1}
Move to next @code{H1} heading.
@item       2
@command{emacspeak-eww-next-h2}
Move to next @code{H2} heading.
@item       3
@command{emacspeak-eww-next-h3}
Move to next @code{H3} heading.
@item       4
@command{emacspeak-eww-next-h4}
Move to next @code{H4} heading.
@item       .
@command{emacspeak-eww-next-h}
Move to next heading. (@code{H1}...@code{H4}).
@item       M-1
@command{emacspeak-eww-previous-h1}
Move to previous @code{H1} heading.
@item       M-2
@command{emacspeak-eww-previous-h2}
Move to previous @code{H2} heading.
@item       M-3
@command{emacspeak-eww-previous-h3}
Move to previous @code{H3} heading.
@item       M-4
@command{emacspeak-eww-previous-h4}
Move to previous @code{H4} heading.
@item  ,
@command{emacspeak-eww-previous-h}
Move to previous heading (@code{H1}...@code{H4}).
@end table

This next set of DOM commands enable navigating by HTML elements.
@table @kbd
@item       M-SPC
@command{emacspeak-eww-speak-this-element}
Speak contents of current element.
@item       J
@command{emacspeak-eww-next-element-like-this}
Jump to next element that is the same as the one under point.
If there are multiple HTML elements under point,
prompts for element-name using completion.
@item       K
@command{emacspeak-eww-previous-element-like-this}
Jump to previous element that is the same as the one under point.
If there are multiple HTML elements under point,
prompts for element-name using completion.
@item  N
@command{emacspeak-eww-next-element-from-history}
Jump to next element based on  previous J/K command history.
@item       P
@command{emacspeak-eww-previous-element-from-history}
Jump to previous element based on  previous J/K history.
@item       O
@command{emacspeak-eww-previous-li}
Jump to previous list item.
@item       o
@command{emacspeak-eww-next-li}
Jump to next list item.
@item       T
@command{emacspeak-eww-previous-table}
Jump to previous table in page.
@item  t
@command{emacspeak-eww-next-table}
Jump to next table.
@item       [
            @command{emacspeak-eww-previous-p}
            Jump to previous paragraph.
            @item  ]
@command{emacspeak-eww-next-p}
Jump to next paragraph.
@item       b
@command{shr-previous-link}
Jump to previous link.
@item  f
@command{shr-next-link}
Jump to next link.
@item  n
@command{emacspeak-eww-next-element}
Jump to next element.
@item       p
@command{emacspeak-eww-previous-element}
Jump to previous element.
@item       s
@command{eww-readable}
Use EWW's built-in readable tool.
@item :
@command{emacspeak-eww-tags-at-point}
Display  currently active HTML tags at point.
@end table

@subsection Filtering Content Using The DOM
These commands use EWW's HTML DOM to display different filtered
views of the Web page.
With an interactive prefix argument, these commands prompt for a
list of filters.
Command @command{emacspeak-eww-restore} bound to @kbd{DEL} can be used
to restore the previous view.

@table @kbd
@item  A
@command{eww-view-dom-having-attribute}
Display DOM nodes having specified attribute. Valid attributes
are available via completion.
@item       C
@command{eww-view-dom-having-class}
Display DOM nodes having specified class. Valid classes
are available via completion.
@item  E
@command{eww-view-dom-having-elements}
Display specified elements from the Dom. Valid element names
are available via completion.
@item  I
@command{eww-view-dom-having-id}
Display DOM nodes having specified ID. Valid id values
are available via completion.

@item  M
@command{eww-view-dom-element-having-text}
lines containing pattern. Useful to filter down RSS feeds.
@item  R
@command{eww-view-dom-having-role}
Display DOM nodes having specified role. Valid roles
are available via completion.
@item       M-a
@command{eww-view-dom-not-having-attribute}
Filter out DOM nodes having specified attribute. Valid attribute values
are available via completion.
@item       M-c
@command{eww-view-dom-not-having-class}
Filter out DOM nodes having specified class. Valid class values
are available via completion.
@item       M-e
@command{eww-view-dom-not-having-elements}
Filter out  specified element DOM nodes. Valid element names
are available via completion.
@item       M-i
@command{eww-view-dom-not-having-id}
Dfilter out Display DOM nodes having specified ID. Valid id values
are available via completion.
@item       M-r
@command{eww-view-dom-not-having-role}
Filter out  DOM nodes having specified role. Valid role values
are available via completion.
@end table
@subsection Diving Into (Focusing) On Specific Content

Contrast this with filtering described in the previous section.
There, we discussed commands that @emph{filter} the DOM to render
specific types of elements. For HTML as spoken on the Web, there
is a separate use-case that is helpful as a dual to filtering,
namely, displaying a specific portion of a page, typically the
contents of a @code{div} element.
These elements often appear many times on a page, and can be
deeply nested, making it difficult to focus on the relevant
content on the page, e.g. news sites.
Commands @code{emacspeak-eww-dive-into-div}
help  in such cases, @kbd{C-d} renders the @code{div} containing
point in a separate buffer
 As with the filtering commands, @kbd{l} returns to the
buffer where these commands were executed.
Long-term users of Emacspeak who still remember Emacs-W3 will
recognize this as the @emph{focus} command implemented by
Emacspeak for W3.
@subsection Updated  Commands For Following  Links

These key-bindings are available when point is on a link. They
enable context-specific actions for following links, e.g., to play
media streams, or to open various feed-types such as @code{ATOM},
@code{RSS}, or @code{OPML}.

@table @kbd
@item k
@command{shr-copy-url}
Copy URL under point to the kill-ring.
@item ;
@command{emacspeak-eww-play-media-at-point}
Play media URL under point using @code{emacs-m-player}.
Handles URL fragment as time-stamp where we resume; use @kbd{J} in
M-Player to jump to that offset.
@item U
@command{emacspeak-eww-curl-play-media-at-point}
Play media url under point by first downloading the URL using
CURL. This is useful for sites that do multiple redirects before
returning the actual media stream URL.
@item u
@command{emacspeak-eww-url-to-register}
Accumulate url under point to register@code{u}.
Sample use-cases include building up a playlist of links in the
right sort order after a YT search.
@item x
@command{emacspeak-feeds-select-feed}
Display link under point as an @code{ATOM}, @code{OPML} or @code{RSS} feed.
@item y
@command{empv-play}
Play link -under point as a Youtube stream.
@end table

@subsection Table Browsing

Summary Of Keyboard Commands:
@itemize
@item @kbd{M-<left>} emacspeak-eww-table-previous-cell@MDash{}
Speak previous cell.
@item @kbd{M-<right>} emacspeak-eww-table-next-cell @MDash{}
Speak previous cell.
@item @kbd{M-<up>} emacspeak-eww-table-previous-row @MDash{}
Speak cell above.
@item @kbd{M-<down>} emacspeak-eww-table-next-row @MDash{}
Speak  cell below.
@item @kbd{M-.} emacspeak-eww-table-speak-cell @MDash{}
Speak current cell.
@item @kbd{M-,} emacspeak-eww-table-speak-dimensions @MDash{}
Speak number of rows and columns.
@item @kbd{C-t} emacspeak-eww-table-data @MDash{}
Browse this table in Emacspeak's Table UI
 @MDash{} @xref{emacspeak-table-ui}.
@end itemize

Emacspeak EWW supports table navigation via keys @kbd{M-.},
@kbd{M-LEFT} and @kbd{M-RIGHT}, to speak the current, previous and
next table cell respectively. The latter commands also move to the
cell being spoken.  You can get a sense of the table's size via
@kbd{M-,} which speaks the number of rows and cells in the
table. This works for plain tables, not nested tables; for nested
tables, first have then @emph{unnested} using one of the XSLT
transforms like @code{sort-tables}.

@subsection Miscellaneous Commands

@table @kbd
@item  C-RET
@command {emacspeak-eww-fillin-form-field}
When on an input field, insert  username/password information
accessed via auth-source.
@item '
@command{emacspeak-speak-rest-of-buffer}
Speak rest of current Web page starting from point.
@item *
@command{eww-add-bookmark}
Bookmark current Web page.
@item = @command{dtk-toggle-punctuation-mode}
Toggle punctuation mode.
@item ?
@command{emacspeak-google-similar-to-this-page}
Google similarity search.
@item C-t
@item G @command{emacspeak-google-command}
Prefix key to invoke Google-specific commands.
@item L
@command{emacspeak-eww-links-rel}
Display any related links discovered via the document's @code{meta} tag.
@item Q
@command{emacspeak-kill-buffer-quietly}
Delete this buffer.
@item V
@command{eww-view-source}
Display Web page source.
@item e
@command{emacspeak-we-xsl-map}
Prefix key for invoking XSLT-based filters.
@item k
@command{eww-copy-page-url}
Copy page URL to kill-ring.
@end table

In addition, see commands in
@xref{emacspeak-google},  for Google-Search specific commands, many of
which are available via prefix-key @kbd{G}.

@subsection Filtering Content Using XSLT And XPath

@table @kbd
@item C-c
@command{emacspeak-we-junk-by-class-list}
Prompts for list of class-names with completion,
and filters out matching elements.
@item C-f
@command{emacspeak-we-count-matches}
Prompts for XPath expression, and returns count of matching elements.
@item C-p
@command{emacspeak-we-xpath-junk-and-follow}
Follows link under point, and displays that page
after filtering by a specified XPath expression.
@item C-t
@command{emacspeak-we-count-tables}
Display a count of tables in the page.
@item C-x
@command{emacspeak-we-count-nested-tables}
Counts nested tables.
@item C
@command{emacspeak-we-extract-by-class-list}
Prompts for a list of class-names, and displays matching elements.
@item D
@command{emacspeak-we-junk-by-class-list}
Filters out elements  having specified class attributes.
@item I
@command{emacspeak-we-extract-by-id-list}
Extracts elements by specified list of ID values.
@item M
@command{emacspeak-we-extract-tables-by-match-list}
Extracts tables that match specified selection pattern.
@item P
@command{emacspeak-we-follow-and-extract-main}
Follows link under point, and extracts readable content,
by default, this is all paragraphs and headings.
@item S
@command{emacspeak-we-style-filter}
Filters content by style attribute.
@item T
@command{emacspeak-we-extract-tables-by-position-list}
Extracts tables by their position on the page.
@item X
@command{emacspeak-we-extract-nested-table-list}
Extracts nested tables.
@item a
@command{emacspeak-we-xslt-apply}
Prompt for and apply specified XSLT transform to current page.
@item b
@command{emacspeak-we-follow-and-filter-by-id}
Follow link under point, and filter by specified id value.
@item c
@command{emacspeak-we-extract-by-class}
Extracts elements by class.
@item d
@command{emacspeak-we-junk-by-class}
Filters out elements having specified class value.
@item e
@command{emacspeak-we-url-expand-and-execute}
Follow link under point, but pass the result to a custom executor.
Availability of special executors for link under point is indicated
by auditory icon @emph{item} instead of @emph{button}
You can then experiment by pressing @code{RET} or @code {e e}.
Special executors are available for Reddit Links, Wikipedia Links etc.
@item f
@command{emacspeak-we-xslt-filter}
Apply a specified XSLT filter (XPath) to current page.
@item i
@command{emacspeak-we-extract-by-id}
Extract elements by id value.
@item j
@command{emacspeak-we-xslt-junk}
Filter out elements matching specified pattern.
@item k
@command{emacspeak-we-toggle-xsl-keep-result}
Debugging tool  --- retains the  HTML source after XSLT.
@item m
@command{emacspeak-we-extract-table-by-match}
Extract matching table.
@item p
@command{emacspeak-we-xpath-follow-and-filter}
Follow link under point, and filter results by a specified XPath filter.
@item r
@command{emacspeak-we-extract-by-role}
Extract elements by specified role value.
@item s
@command{emacspeak-we-xslt-select}
Select default XSLT transform that is applied before rendering the page.
@item t
@command{emacspeak-we-extract-table-by-position}
Extracts tables by their position on the page.
@item u
@command{emacspeak-we-extract-matching-urls}
Display matching links on the page.
@item v
@command{emacspeak-we-class-follow-and-filter-link}
Follow link under point, and filter by specified class value.
@item w
@command{emacspeak-we-extract-by-property}
Extract element using a combination of DOM attributes.
@item x
@command{emacspeak-we-extract-nested-table}
Extract a nested table using a match-list.
@item y
@command{emacspeak-we-class-follow-and-filter}
Follow link under point and filter by class values.
@end table
@subsection EWW And EBooks On The Emacspeak Audio Desktop
Modules emacspeak-epub and emacspeak-bookshare provide EBook
front-ends to EPub-2 and Daisy EBooks. Both modules now use EWW to
render these EBooks. Module emacspeak-eww provides a simple
bookmarking facility --- called eww-marks (to avoid confusion with
EWW's Web Bookmarks). When reading an EBook, you can use @code{m}
to create an EWW-mark at that position. These marks are
automatically saved across Emacs sessions. To open a previously
created eww-mark, use command @code{emacspeak-eww-open-mark} bound
to @code{C-x r e}. This command reads a eww-mark name with
completion. Use this command with an interactive prefix arg to
delete a previously created eww-mark.

@subsection Emacspeak-Eww Commands

@subsubsection emacspeak-eww-add-mark
@deffn {Command} emacspeak-eww-add-mark  (name)
@findex emacspeak-eww-add-mark

@format
Interactively add a mark with name title+‘name’ at current
  position.  Also store it as an org link for later insertion
into ‘notes’.‘m

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-eww-browse-chrome
@deffn {Command} emacspeak-eww-browse-chrome  (url)
@findex emacspeak-eww-browse-chrome

@format
Open with Chrome.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-eww-browse-eaf
@deffn {Command} emacspeak-eww-browse-eaf  (url)
@findex emacspeak-eww-browse-eaf

@format
Launch async EAF browser.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-eww-cleanup-eww-data
@deffn {Command} emacspeak-eww-cleanup-eww-data   
@findex emacspeak-eww-cleanup-eww-data

@format
Clean up DOM and Source from eww-data.
Use for large EBook buffers.
@end format
@end deffn

@subsubsection emacspeak-eww-curl-play-media-at-point
@deffn {Command} emacspeak-eww-curl-play-media-at-point   
@findex emacspeak-eww-curl-play-media-at-point

@format
Use Curl to pull a URL, then pass
the first line to MPlayer as a playlist.
Useful in handling double-redirect from TuneIn.
@end format
@end deffn

@subsubsection emacspeak-eww-delete-mark
@deffn {Command} emacspeak-eww-delete-mark  (name)
@findex emacspeak-eww-delete-mark

@format
Interactively delete a mark with name ‘name’ at current position.

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-eww-dive-into-div
@deffn {Command} emacspeak-eww-dive-into-div   
@findex emacspeak-eww-dive-into-div

@format
Focus on current div by rendering it in a new buffer.
@end format
@end deffn

@subsubsection emacspeak-eww-fillin-form-field
@deffn {Command} emacspeak-eww-fillin-form-field   
@findex emacspeak-eww-fillin-form-field

@format
Fill in user or passwd field using auth-source backend.
@end format
@end deffn

@subsubsection emacspeak-eww-links-rel
@deffn {Command} emacspeak-eww-links-rel   
@findex emacspeak-eww-links-rel

@format
Display Link tags of type rel.  Web pages for which alternate links
are available are cued by an auditory icon on the header line.
@end format
@end deffn

@subsubsection emacspeak-eww-marks-browse
@deffn {Command} emacspeak-eww-marks-browse   
@table @kbd
@item C-x r C-e
@kindex C-x r C-e
@end table

@findex emacspeak-eww-marks-browse

@format
List EWW Marks as actionable buttons.
@end format
@end deffn

@subsubsection emacspeak-eww-marks-load
@deffn {Command} emacspeak-eww-marks-load   
@findex emacspeak-eww-marks-load

@format
Load saved marks.
@end format
@end deffn

@subsubsection emacspeak-eww-marks-mode
@deffn {Command} emacspeak-eww-marks-mode   
@findex emacspeak-eww-marks-mode

@format
A light-weight mode for the ‘*Emacspeak EWW Marks Browser*’.
 1. Enables org integration via command
 ‘org-store-link’ bound to M-x org-store-link.
 2. Stored links can be inserted into org files in the same directory
via command ‘org-insert-link’ bound to M-x org-insert-link.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-eww-marks-mode-hook’, as the
final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-eww-marks-save
@deffn {Command} emacspeak-eww-marks-save   
@findex emacspeak-eww-marks-save

@format
Save Emacspeak EWW marks.
@end format
@end deffn

@subsubsection emacspeak-eww-masquerade
@deffn {Command} emacspeak-eww-masquerade   
@findex emacspeak-eww-masquerade

@format
Toggle masquerade.
@end format
@end deffn

@subsubsection emacspeak-eww-next-dd
@deffn {Command} emacspeak-eww-next-dd  (&optional speak)
@findex emacspeak-eww-next-dd

@format
Move forward to the next dd.
Optional interactive prefix arg speaks the dd.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The dd is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-dl
@deffn {Command} emacspeak-eww-next-dl  (&optional speak)
@findex emacspeak-eww-next-dl

@format
Move forward to the next dl.
Optional interactive prefix arg speaks the dl.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The dl is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-dt
@deffn {Command} emacspeak-eww-next-dt  (&optional speak)
@findex emacspeak-eww-next-dt

@format
Move forward to the next dt.
Optional interactive prefix arg speaks the dt.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The dt is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-element
@deffn {Command} emacspeak-eww-next-element  (el &optional speak)
@findex emacspeak-eww-next-element

@format
Move forward to the next specified element.

(fn EL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-eww-next-element-from-history
@deffn {Command} emacspeak-eww-next-element-from-history   
@findex emacspeak-eww-next-element-from-history

@format
Uses element navigation history to decide where we jump.
@end format
@end deffn

@subsubsection emacspeak-eww-next-element-like-this
@deffn {Command} emacspeak-eww-next-element-like-this  (element)
@findex emacspeak-eww-next-element-like-this

@format
Moves to next element like current.
Prompts if content at point is enclosed by multiple elements.

(fn ELEMENT)
@end format
@end deffn

@subsubsection emacspeak-eww-next-h
@deffn {Command} emacspeak-eww-next-h  (&optional speak)
@findex emacspeak-eww-next-h

@format
Move forward to the next h.
Optional interactive prefix arg speaks the h.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-h1
@deffn {Command} emacspeak-eww-next-h1  (&optional speak)
@findex emacspeak-eww-next-h1

@format
Move forward to the next h1.
Optional interactive prefix arg speaks the h1.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h1 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-h2
@deffn {Command} emacspeak-eww-next-h2  (&optional speak)
@findex emacspeak-eww-next-h2

@format
Move forward to the next h2.
Optional interactive prefix arg speaks the h2.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h2 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-h3
@deffn {Command} emacspeak-eww-next-h3  (&optional speak)
@findex emacspeak-eww-next-h3

@format
Move forward to the next h3.
Optional interactive prefix arg speaks the h3.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h3 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-h4
@deffn {Command} emacspeak-eww-next-h4  (&optional speak)
@findex emacspeak-eww-next-h4

@format
Move forward to the next h4.
Optional interactive prefix arg speaks the h4.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h4 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-h5
@deffn {Command} emacspeak-eww-next-h5  (&optional speak)
@findex emacspeak-eww-next-h5

@format
Move forward to the next h5.
Optional interactive prefix arg speaks the h5.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h5 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-h6
@deffn {Command} emacspeak-eww-next-h6  (&optional speak)
@findex emacspeak-eww-next-h6

@format
Move forward to the next h6.
Optional interactive prefix arg speaks the h6.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The h6 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-li
@deffn {Command} emacspeak-eww-next-li  (&optional speak)
@findex emacspeak-eww-next-li

@format
Move forward to the next li.
Optional interactive prefix arg speaks the li.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The li is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-ol
@deffn {Command} emacspeak-eww-next-ol  (&optional speak)
@findex emacspeak-eww-next-ol

@format
Move forward to the next ol.
Optional interactive prefix arg speaks the ol.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The ol is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-p
@deffn {Command} emacspeak-eww-next-p  (&optional speak)
@findex emacspeak-eww-next-p

@format
Move forward to the next p.
Optional interactive prefix arg speaks the p.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The p is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-table
@deffn {Command} emacspeak-eww-next-table  (&optional speak)
@findex emacspeak-eww-next-table

@format
Move forward to the next table.
Optional interactive prefix arg speaks the table.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The table is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-next-ul
@deffn {Command} emacspeak-eww-next-ul  (&optional speak)
@findex emacspeak-eww-next-ul

@format
Move forward to the next ul.
Optional interactive prefix arg speaks the ul.  Second
interactive prefix toggles this flag.  See user option
‘emacspeak-eww-autospeak’ on how to reverse this behavior.
Second interactive prefix arg toggles default value of this flag.
The ul is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-open-mark
@deffn {Command} emacspeak-eww-open-mark  (name &optional delete)
@table @kbd
@item C-x r e
@kindex C-x r e
@end table

@findex emacspeak-eww-open-mark

@format
Open EWW marked location.  With optional interactive prefix
arg ‘delete’, delete that mark instead.

(fn NAME &optional DELETE)
@end format
@end deffn

@subsubsection emacspeak-eww-play-media-at-point
@deffn {Command} emacspeak-eww-play-media-at-point  (&optional playlist-p)
@table @kbd
@item C-e M-;
@kindex C-e M-;
@end table

@findex emacspeak-eww-play-media-at-point

@format
Play media url under point.
Interprets url-fragment identifier #nnn as time-offset in
seconds.   Optional
interactive prefix arg ‘playlist-p’ treats link as a playlist.  A
second interactive prefix arg adds mplayer option
-allow-dangerous-playlist-parsing

(fn &optional PLAYLIST-P)
@end format
@end deffn

@subsubsection emacspeak-eww-previous-dd
@deffn {Command} emacspeak-eww-previous-dd  (&optional speak)
@findex emacspeak-eww-previous-dd

@format
Move backward to the next dd.
Optional interactive prefix arg speaks the dd.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The dd is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-dl
@deffn {Command} emacspeak-eww-previous-dl  (&optional speak)
@findex emacspeak-eww-previous-dl

@format
Move backward to the next dl.
Optional interactive prefix arg speaks the dl.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The dl is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-dt
@deffn {Command} emacspeak-eww-previous-dt  (&optional speak)
@findex emacspeak-eww-previous-dt

@format
Move backward to the next dt.
Optional interactive prefix arg speaks the dt.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The dt is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-element
@deffn {Command} emacspeak-eww-previous-element  (el &optional speak)
@findex emacspeak-eww-previous-element

@format
Move backward  to the previous  specified element.

(fn EL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-eww-previous-element-from-history
@deffn {Command} emacspeak-eww-previous-element-from-history   
@findex emacspeak-eww-previous-element-from-history

@format
Uses element navigation history to decide where we jump.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-element-like-this
@deffn {Command} emacspeak-eww-previous-element-like-this  (element)
@findex emacspeak-eww-previous-element-like-this

@format
Moves to next element like current.
Prompts if content at point is enclosed by multiple elements.

(fn ELEMENT)
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h
@deffn {Command} emacspeak-eww-previous-h  (&optional speak)
@findex emacspeak-eww-previous-h

@format
Move backward to the next h.
Optional interactive prefix arg speaks the h.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h1
@deffn {Command} emacspeak-eww-previous-h1  (&optional speak)
@findex emacspeak-eww-previous-h1

@format
Move backward to the next h1.
Optional interactive prefix arg speaks the h1.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h1 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h2
@deffn {Command} emacspeak-eww-previous-h2  (&optional speak)
@findex emacspeak-eww-previous-h2

@format
Move backward to the next h2.
Optional interactive prefix arg speaks the h2.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h2 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h3
@deffn {Command} emacspeak-eww-previous-h3  (&optional speak)
@findex emacspeak-eww-previous-h3

@format
Move backward to the next h3.
Optional interactive prefix arg speaks the h3.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h3 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h4
@deffn {Command} emacspeak-eww-previous-h4  (&optional speak)
@findex emacspeak-eww-previous-h4

@format
Move backward to the next h4.
Optional interactive prefix arg speaks the h4.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h4 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h5
@deffn {Command} emacspeak-eww-previous-h5  (&optional speak)
@findex emacspeak-eww-previous-h5

@format
Move backward to the next h5.
Optional interactive prefix arg speaks the h5.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h5 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-h6
@deffn {Command} emacspeak-eww-previous-h6  (&optional speak)
@findex emacspeak-eww-previous-h6

@format
Move backward to the next h6.
Optional interactive prefix arg speaks the h6.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The h6 is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-li
@deffn {Command} emacspeak-eww-previous-li  (&optional speak)
@findex emacspeak-eww-previous-li

@format
Move backward to the next li.
Optional interactive prefix arg speaks the li.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The li is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-ol
@deffn {Command} emacspeak-eww-previous-ol  (&optional speak)
@findex emacspeak-eww-previous-ol

@format
Move backward to the next ol.
Optional interactive prefix arg speaks the ol.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The ol is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-p
@deffn {Command} emacspeak-eww-previous-p  (&optional speak)
@findex emacspeak-eww-previous-p

@format
Move backward to the next p.
Optional interactive prefix arg speaks the p.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The p is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-table
@deffn {Command} emacspeak-eww-previous-table  (&optional speak)
@findex emacspeak-eww-previous-table

@format
Move backward to the next table.
Optional interactive prefix arg speaks the table.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The table is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-previous-ul
@deffn {Command} emacspeak-eww-previous-ul  (&optional speak)
@findex emacspeak-eww-previous-ul

@format
Move backward to the next ul.
Optional interactive prefix arg speaks the ul.
Second interactive prefix toggles this flag.
See user option ‘emacspeak-eww-autospeak’ on how to reverse this behavior.
The ul is automatically spoken if there is no user activity.
@end format
@end deffn

@subsubsection emacspeak-eww-reading-settings
@deffn {Command} emacspeak-eww-reading-settings   
@findex emacspeak-eww-reading-settings

@format
Setup speech-rate, punctuation and split-caps for reading prose.
@end format
@end deffn

@subsubsection emacspeak-eww-restore
@deffn {Command} emacspeak-eww-restore   
@findex emacspeak-eww-restore

@format
Restore buffer to pre-filtered canonical state.
@end format
@end deffn

@subsubsection emacspeak-eww-shell-cmd-on-url-at-point
@deffn {Command} emacspeak-eww-shell-cmd-on-url-at-point  (&optional prompt)
@findex emacspeak-eww-shell-cmd-on-url-at-point

@format
Run specified shell command on URL at point. 

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-eww-shr-outline-toggle
@deffn {Command} emacspeak-eww-shr-outline-toggle   
@findex emacspeak-eww-shr-outline-toggle

@format
Toggle between shr and native outliner.
@end format
@end deffn

@subsubsection emacspeak-eww-smart-tabs
@deffn {Command} emacspeak-eww-smart-tabs  (char &optional define)
@table @kbd
@item C-, SPC
@kindex C-, SPC
@item C-x @@ a SPC
@kindex C-x @@ a SPC
@end table

@findex emacspeak-eww-smart-tabs

@format
Open URL in EWW keyed by  ‘char’.
To associate a URL with a char, use this command
with an interactive prefix arg. 

(fn CHAR &optional DEFINE)
@end format
@end deffn

@subsubsection emacspeak-eww-smart-tabs-add
@deffn {Command} emacspeak-eww-smart-tabs-add  (char url)
@findex emacspeak-eww-smart-tabs-add

@format
Add a URL to the specified location in smart tabs.

(fn CHAR URL)
@end format
@end deffn

@subsubsection emacspeak-eww-smart-tabs-load
@deffn {Command} emacspeak-eww-smart-tabs-load   
@findex emacspeak-eww-smart-tabs-load

@format
Load our smart tabsfrom a file.
@end format
@end deffn

@subsubsection emacspeak-eww-smart-tabs-save
@deffn {Command} emacspeak-eww-smart-tabs-save   
@findex emacspeak-eww-smart-tabs-save

@format
Save our smart tabs to a file for reloading.
@end format
@end deffn

@subsubsection emacspeak-eww-speak-this-element
@deffn {Command} emacspeak-eww-speak-this-element   
@findex emacspeak-eww-speak-this-element

@format
Speak current .
@end format
@end deffn

@subsubsection emacspeak-eww-table-data
@deffn {Command} emacspeak-eww-table-data   
@findex emacspeak-eww-table-data

@format
View  table at point as a data table using Emacspeak Table UI.
@end format
@end deffn

@subsubsection emacspeak-eww-table-next-cell
@deffn {Command} emacspeak-eww-table-next-cell  (&optional prefix)
@findex emacspeak-eww-table-next-cell

@format
Speak next cell after making it current.
Interactive prefix arg moves to the last cell in the table.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-eww-table-next-row
@deffn {Command} emacspeak-eww-table-next-row  (&optional prefix)
@findex emacspeak-eww-table-next-row

@format
Speak  cell after moving to next row.
 Optional interactive prefix arg moves to end of table.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-eww-table-previous-cell
@deffn {Command} emacspeak-eww-table-previous-cell  (&optional prefix)
@findex emacspeak-eww-table-previous-cell

@format
Speak previous cell after making it current.
With interactive prefix arg, move to the start of the table.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-eww-table-previous-row
@deffn {Command} emacspeak-eww-table-previous-row  (&optional prefix)
@findex emacspeak-eww-table-previous-row

@format
Speak  cell after moving to previous row.
 Optional interactive prefix arg moves to start of table.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-eww-table-speak-cell
@deffn {Command} emacspeak-eww-table-speak-cell   
@findex emacspeak-eww-table-speak-cell

@format
Speak current cell.
@end format
@end deffn

@subsubsection emacspeak-eww-table-speak-dimensions
@deffn {Command} emacspeak-eww-table-speak-dimensions   
@findex emacspeak-eww-table-speak-dimensions

@format
Speak number of rows and cells.
@end format
@end deffn

@subsubsection emacspeak-eww-tags-at-point
@deffn {Command} emacspeak-eww-tags-at-point   
@findex emacspeak-eww-tags-at-point

@format
Display tags at point.
@end format
@end deffn

@subsubsection emacspeak-eww-url-to-register
@deffn {Command} emacspeak-eww-url-to-register   
@findex emacspeak-eww-url-to-register

@format
Accumulate  URL in register ‘u’
@end format
@end deffn

@subsubsection emacspeak-eww-yt-dl
@deffn {Command} emacspeak-eww-yt-dl  (url)
@findex emacspeak-eww-yt-dl

@format
Download link at point   using youtube-dl --- works with BBC Sounds. 

(fn URL)
@end format
@end deffn

@subsection emacspeak-eww Options

@defvar {User Option} emacspeak-eww-autospeak
Turn this on to make section navigation autospeak.
This also reverses the meaning of the prefix-arg to section nav
  commands.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-eww-inhibit-images
Turn this on to avoid rendering images.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-extras
@section emacspeak-extras

Infrequently used wizards archived for posterity.

@subsection Emacspeak-Extras Commands

@subsubsection emacspeak-annotate-add-annotation
@deffn {Command} emacspeak-annotate-add-annotation  (&optional reset)
@findex emacspeak-annotate-add-annotation

@format
Add annotation to the annotation working buffer.
Prompt for annotation buffer if not already set.
Interactive prefix arg ‘reset’ prompts for the annotation
buffer even if one is already set.
Annotation is entered in a temporary buffer and the
annotation is inserted into the working buffer when complete.
@end format
@end deffn

@subsubsection emacspeak-clipfile-copy
@deffn {Command} emacspeak-clipfile-copy  (start end &optional prompt)
@table @kbd
@item C-e C-M-c
@kindex C-e C-M-c
@end table

@findex emacspeak-clipfile-copy

@format
Use file-based Emacspeak Clipboard ---
dis a convenient way of sharing information between independent
Emacspeak sessions running on  different machines. 
@end format
@end deffn

@subsubsection emacspeak-clipfile-paste
@deffn {Command} emacspeak-clipfile-paste  (&optional paste-table)
@findex emacspeak-clipfile-paste

@format
Yank contents of the Emacspeak clipboard at point. 
@end format
@end deffn

@subsubsection emacspeak-curl
@deffn {Command} emacspeak-curl  (url)
@findex emacspeak-curl

@format
Grab URL using Curl, and preview it with a browser .
@end format
@end deffn

@subsubsection emacspeak-wizards-add-autoload-cookies
@deffn {Command} emacspeak-wizards-add-autoload-cookies  (&optional f)
@findex emacspeak-wizards-add-autoload-cookies

@format
Add autoload cookies to file f.
Default is to add autoload cookies to current file.
@end format
@end deffn

@subsubsection emacspeak-wizards-bindings-from-org
@deffn {Command} emacspeak-wizards-bindings-from-org  (variable filename)
@findex emacspeak-wizards-bindings-from-org

@format
Load bindings from a specified file.
@end format
@end deffn

@subsubsection emacspeak-wizards-bindings-to-org
@deffn {Command} emacspeak-wizards-bindings-to-org  (variable filename)
@findex emacspeak-wizards-bindings-to-org

@format
Persists mapping to org file.
@end format
@end deffn

@subsubsection emacspeak-wizards-display-pod-as-manpage
@deffn {Command} emacspeak-wizards-display-pod-as-manpage  (filename)
@findex emacspeak-wizards-display-pod-as-manpage

@format
Create a virtual manpage in Emacs from the Perl Online Documentation.
@end format
@end deffn

@subsubsection emacspeak-wizards-find-grep
@deffn {Command} emacspeak-wizards-find-grep  (glob pattern)
@findex emacspeak-wizards-find-grep

@format
Run compile using find and grep.
Interactive  arguments specify filename pattern and search pattern.
@end format
@end deffn

@subsubsection emacspeak-wizards-fix-read-only-text
@deffn {Command} emacspeak-wizards-fix-read-only-text  (start end)
@findex emacspeak-wizards-fix-read-only-text

@format
Nuke read-only property on text range.
@end format
@end deffn

@subsubsection emacspeak-wizards-generate-voice-sampler
@deffn {Command} emacspeak-wizards-generate-voice-sampler  (step)
@findex emacspeak-wizards-generate-voice-sampler

@format
Generate a buffer that shows a sample line in all the ACSS settings
for the current voice family.
@end format
@end deffn

@subsubsection emacspeak-wizards-list-voices
@deffn {Command} emacspeak-wizards-list-voices  (pattern)
@table @kbd
@item C-h "
@kindex C-h "
@item <f1> "
@kindex <f1> "
@item <help> "
@kindex <help> "
@end table

@findex emacspeak-wizards-list-voices

@format
Show all defined voice-face mappings  in a help buffer.
Sample text to use comes from variable
  ‘ems--wizards-sampler-text 
@end format
@end deffn

@subsubsection emacspeak-wizards-midi-using-m-score
@deffn {Command} emacspeak-wizards-midi-using-m-score  (midi-file)
@findex emacspeak-wizards-midi-using-m-score

@format
Play midi file using mscore from musescore package.
@end format
@end deffn

@subsubsection emacspeak-wizards-show-voices
@deffn {Command} emacspeak-wizards-show-voices   
@findex emacspeak-wizards-show-voices

@format
Display a buffer with sample text in the defined voices.
@end format
@end deffn

@subsubsection emacspeak-wizards-tramp-open-location
@deffn {Command} emacspeak-wizards-tramp-open-location  (name)
@table @kbd
@item C-; C-t
@kindex C-; C-t
@item C-x @@ h C-t
@kindex C-x @@ h C-t
@end table

@findex emacspeak-wizards-tramp-open-location

@format
Open specified tramp location.
Location is specified by name.
@end format
@end deffn

@subsubsection emacspeak-wizards-voice-sampler
@deffn {Command} emacspeak-wizards-voice-sampler  (personality)
@findex emacspeak-wizards-voice-sampler

@format
Read a personality  and apply it to the current line.
@end format
@end deffn

@subsection emacspeak-extras Options

@defvar {User Option} emacspeak-clipfile-file
File used to save Emacspeak clipboard.
The emacspeak clipboard provides a convenient mechanism for exchanging
information between different Emacs sessions.

Default Value: 

@verbatim

"/home/raman/.emacspeak//clipboard"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-curl-cookie-store
Cookie store used by Curl.

Default Value: 

@verbatim

"/home/raman/.curl-cookies"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-wizards-tramp-locations
Tramp locations used by Emacspeak tramp wizard.
Locations added here via custom can be opened using command
emacspeak-wizards-tramp-open-location
bound to C-x @@ h C-t.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-exwm
@section emacspeak-exwm

EXWM ==  Emacs X Window Manager
This module speech-enables and integrates EXWM on the Emacspeak
Audio Desktop

@subsection Emacspeak-Exwm Commands

@subsubsection emacspeak-exwm-workspace-cycle
@deffn {Command} emacspeak-exwm-workspace-cycle   
@findex emacspeak-exwm-workspace-cycle

@format
Cycle to next workspace, with wrap-around
@end format
@end deffn

@node emacspeak-feeds
@section emacspeak-feeds

This module provides Feeds support for Emacspeak
 required modules

@subsection Emacspeak-Feeds Commands

@subsubsection emacspeak-feeds-add-feed
@deffn {Command} emacspeak-feeds-add-feed  (title url type)
@table @kbd
@item C-e M-u
@kindex C-e M-u
@end table

@findex emacspeak-feeds-add-feed

@format
Add specified feed to our feed store.

(fn TITLE URL TYPE)
@end format
@end deffn

@subsubsection emacspeak-feeds-archive-feeds
@deffn {Command} emacspeak-feeds-archive-feeds   
@findex emacspeak-feeds-archive-feeds

@format
Archive list of subscribed fees to personal resource directory.
Archiving is useful when synchronizing feeds across multiple machines.
@end format
@end deffn

@subsubsection emacspeak-feeds-atom-display
@deffn {Command} emacspeak-feeds-atom-display  (feed-url)
@table @kbd
@item C-, a
@kindex C-, a
@item C-x @@ a a
@kindex C-x @@ a a
@end table

@findex emacspeak-feeds-atom-display

@format
Display ATOM feed.

(fn FEED-URL)
@end format
@end deffn

@subsubsection emacspeak-feeds-awesome-rss
@deffn {Command} emacspeak-feeds-awesome-rss   
@findex emacspeak-feeds-awesome-rss

@format
Display Awesome RSS OPML file read with completion.
See etc/fixup-awesome-rss  for first-time  for instructions.
@end format
@end deffn

@subsubsection emacspeak-feeds-browse
@deffn {Command} emacspeak-feeds-browse  (feed)
@table @kbd
@item C-e C-u
@kindex C-e C-u
@end table

@findex emacspeak-feeds-browse

@format
Browse   feed.

(fn FEED)
@end format
@end deffn

@subsubsection emacspeak-feeds-fastload-feeds
@deffn {Command} emacspeak-feeds-fastload-feeds   
@findex emacspeak-feeds-fastload-feeds

@format
Fast load list of feeds from archive.
This directly updates emacspeak-feeds from the archive, rather
than adding those entries to the current set of subscribed
feeds.
@end format
@end deffn

@subsubsection emacspeak-feeds-opml-display
@deffn {Command} emacspeak-feeds-opml-display  (feed-url)
@table @kbd
@item C-, o
@kindex C-, o
@item C-x @@ a o
@kindex C-x @@ a o
@end table

@findex emacspeak-feeds-opml-display

@format
Display OPML feed.

(fn FEED-URL)
@end format
@end deffn

@subsubsection emacspeak-feeds-restore-feeds
@deffn {Command} emacspeak-feeds-restore-feeds   
@findex emacspeak-feeds-restore-feeds

@format
Restore list of subscribed fees from  personal resource directory.
Archiving is useful when synchronizing feeds across multiple machines.
@end format
@end deffn

@subsubsection emacspeak-feeds-rss-display
@deffn {Command} emacspeak-feeds-rss-display  (feed-url)
@table @kbd
@item C-, r
@kindex C-, r
@item C-x @@ a r
@kindex C-x @@ a r
@end table

@findex emacspeak-feeds-rss-display

@format
Display RSS feed.

(fn FEED-URL)
@end format
@end deffn

@subsubsection emacspeak-feeds-select-feed
@deffn {Command} emacspeak-feeds-select-feed  (feed-type)
@findex emacspeak-feeds-select-feed

@format
Prompt for feed-type (Atom, RSS, OPML and open it.

(fn FEED-TYPE)
@end format
@end deffn

@subsection emacspeak-feeds Options

@defvar {User Option} emacspeak-feeds
Table of RSS/Atom feeds.
The feed list is persisted to file saved-feeds on exit.

Default Value: 

@verbatim

(("BBC Podcast Directory" "http://www.bbc.co.uk/podcasts.opml" opml)
 ("CNet Tech News" "http://feeds.feedburner.com/cnet/tcoc" rss)
 ("Wired News" "http://www.wired.com/news_drop/netcenter/netcenter.rdf" rss))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-feeds-awesome-rss
Location of Awesome RSS

Default Value: 

@verbatim

"/home/raman/sourceforge/awesome-rss-feeds/"

@end verbatim

@end defvar

@node emacspeak-ffap
@section emacspeak-ffap

FFAP ==  Find file at point and friends

@node emacspeak-ffip
@section emacspeak-ffip

FFIP ==  find-file-in-project

@node emacspeak-filtertext
@section emacspeak-filtertext

It is often useful  to view the results of filtering
large amounts of text.;;; Typically you do this with
various combinations of grep and friends.
When doing so it requires explicit effort to not destroy
the original text being filtered.
This module provides a textfilter utility that:
A) Copies over the selected text to a special filtertext
buffer
B) Implements a filtertext mode for that buffer that
allows easy application of filters
C: Provides commands for reverting to the original
unfiltered text
D: Provides commands for saving results from
intermediate filters.

@subsection Emacspeak-Filtertext Commands

@subsubsection emacspeak-filtertext
@deffn {Command} emacspeak-filtertext  (start end)
@table @kbd
@item C-e ^
@kindex C-e ^
@end table

@findex emacspeak-filtertext

@format
Copy over text in region to special filtertext buffer to  filter text. 

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-filtertext-mode
@deffn {Command} emacspeak-filtertext-mode   
@findex emacspeak-filtertext-mode

@format
Major mode for FilterText interaction. 

Key             Binding
-------------------------------------------------------------------------------
=		keep-lines
^		flush-lines
r		emacspeak-filtertext-revert

In addition to any hooks its parent mode ‘text-mode’ might have run,
this mode runs the hook ‘emacspeak-filtertext-mode-hook’, as the final
or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-filtertext-revert
@deffn {Command} emacspeak-filtertext-revert   
@findex emacspeak-filtertext-revert

@format
Revert to original text.
@end format
@end deffn

@node emacspeak-flycheck
@section emacspeak-flycheck

FLYCHECK == On-the-fly checking.

@node emacspeak-flymake
@section emacspeak-flymake

Speech-enable flymake

@node emacspeak-flyspell
@section emacspeak-flyspell

This module speech enables flyspell.
it loads flyspell-correct if available,
And when loading flyspell-correct sets up that module
to use  one of   three supported correction styles:
@itemize @bullet
@item ido: IDO-like completion with C-s and C-r moving through choices.
@item popup:Use  up and down arrows to move through  corrections.
@item helm: A helm interface for picking amongst  corrections.
@end itemize
See documentation for package flyspell-correct for additional
details.

Use Customization emacspeak-flyspell-correct to pick
between ido, popup and helm.

@subsection emacspeak-flyspell Options

@defvar {User Option} emacspeak-flyspell-correct
Correction style to use with flyspell.

Default Value: 

@verbatim

flyspell-correct-ido

@end verbatim

@end defvar

@node emacspeak-folding
@section emacspeak-folding

Folding mode turns emacs into a folding editor.
Folding mode is what I use:
emacs 19 comes with similar packages, e.g. allout.el
This module defines some advice forms for  folding mode
Think of a fold as a container.

@node emacspeak-forge
@section emacspeak-forge

FORGE ==  Work with Github, Gitlab etc from inside magit.
This module speech-enables magit/forge.

@node emacspeak-forms
@section emacspeak-forms

Provide additional advice to forms-mode

@subsection Emacspeak-Forms Commands

@subsubsection emacspeak-forms-find-file
@deffn {Command} emacspeak-forms-find-file  (filename)
@findex emacspeak-forms-find-file

@format
Visit a forms file

(fn FILENAME)
@end format
@end deffn

@subsubsection emacspeak-forms-flush-unwanted-records
@deffn {Command} emacspeak-forms-flush-unwanted-records   
@findex emacspeak-forms-flush-unwanted-records

@format
Prompt for pattern and flush matching lines
@end format
@end deffn

@subsubsection emacspeak-forms-rerun-filter
@deffn {Command} emacspeak-forms-rerun-filter   
@findex emacspeak-forms-rerun-filter

@format
Rerun filter --allows us to nuke more matching records
@end format
@end deffn

@subsubsection emacspeak-forms-speak-field
@deffn {Command} emacspeak-forms-speak-field   
@findex emacspeak-forms-speak-field

@format
Speak current form field name and value.
Assumes that point is at the front of a field value.
@end format
@end deffn

@subsubsection emacspeak-forms-summarize-current-position
@deffn {Command} emacspeak-forms-summarize-current-position   
@findex emacspeak-forms-summarize-current-position

@format
Summarize current position in list of records
@end format
@end deffn

@subsubsection emacspeak-forms-summarize-current-record
@deffn {Command} emacspeak-forms-summarize-current-record   
@findex emacspeak-forms-summarize-current-record

@format
Summarize current record
@end format
@end deffn

@node emacspeak-geiser
@section emacspeak-geiser

geiser.el --- GNU Emacs and Scheme talk to each other
This module speech-enables all interactive aspects of geiser,
including the geiser->scheme REPL.
This is used by racket-mode for racket interaction,
And also for interacting with Guile.

@node emacspeak-gh-explorer
@section emacspeak-gh-explorer

GH-EXPLORER ==  GitHub Explorer
This module speech-enables Github Explorer.

@subsection Emacspeak-Gh-Explorer Commands

@subsubsection emacspeak-gh-explorer-next
@deffn {Command} emacspeak-gh-explorer-next   
@findex emacspeak-gh-explorer-next

@format
Move forward and speak current entry.
@end format
@end deffn

@subsubsection emacspeak-gh-explorer-previous
@deffn {Command} emacspeak-gh-explorer-previous   
@findex emacspeak-gh-explorer-previous

@format
Moveback and speak current entry.
@end format
@end deffn

@node emacspeak-gnuplot
@section emacspeak-gnuplot

This module speech-enables gnuplot-mode
an Emacs add-on that enables fluent interaction with
gnuplot.
Use gnuplot to generate plots of mathematical functions
for inclusion in documents.

@node emacspeak-gnus
@section emacspeak-gnus

This module advises gnus to speak.
Updating support in 2014 (Emacspeak is nearly 20 years old)
Updating in 2018 as I switch to gnus as my primary mail interface.
These customizations to gnus make it convenient to listen to news:
You can read news mostly by using the four arrow keys.
By default all article headers are hidden, so you hear the real news.

@subsection Emacspeak-Gnus Commands

@subsubsection emacspeak-gnus-personal-gmail-last-week
@deffn {Command} emacspeak-gnus-personal-gmail-last-week   
@findex emacspeak-gnus-personal-gmail-last-week

@format
Look for mail addressed personally in the last week.
@end format
@end deffn

@subsubsection emacspeak-gnus-personal-gmail-recent
@deffn {Command} emacspeak-gnus-personal-gmail-recent   
@findex emacspeak-gnus-personal-gmail-recent

@format
Look for mail addressed personally in the last day.
@end format
@end deffn

@subsubsection emacspeak-gnus-summary-catchup-quietly-and-exit
@deffn {Command} emacspeak-gnus-summary-catchup-quietly-and-exit   
@findex emacspeak-gnus-summary-catchup-quietly-and-exit

@format
Catch up on all articles in current group.
@end format
@end deffn

@subsection emacspeak-gnus Options

@defvar {User Option} emacspeak-gnus-large-article
Articles having more than
emacspeak-gnus-large-article lines will be considered to be a large article.
A large article is not spoken all at once;
instead you hear only the first screenful.

Default Value: 

@verbatim

100

@end verbatim

@end defvar

@defvar {User Option} emacspeak-gnus-punctuation-mode
Pronunciation mode to use for gnus buffers.

Default Value: 

@verbatim

all

@end verbatim

@end defvar

@node emacspeak-go-mode
@section emacspeak-go-mode

GO-MODE ==  Go Language support in emacs
  Required modules

@node emacspeak-gomoku
@section emacspeak-gomoku

Auditory interface to gomoku

@subsection Emacspeak-Gomoku Commands

@subsubsection emacspeak-gomoku-display-statistics
@deffn {Command} emacspeak-gomoku-display-statistics   
@findex emacspeak-gomoku-display-statistics

@format
Display statistics from previous games
@end format
@end deffn

@subsubsection emacspeak-gomoku-goto-x-y
@deffn {Command} emacspeak-gomoku-goto-x-y  (x y)
@findex emacspeak-gomoku-goto-x-y

@format
Prompt for and go to that square.

(fn X Y)
@end format
@end deffn

@subsubsection emacspeak-gomoku-show-current-column
@deffn {Command} emacspeak-gomoku-show-current-column   
@findex emacspeak-gomoku-show-current-column

@format
Aurally display current column
@end format
@end deffn

@subsubsection emacspeak-gomoku-show-current-negative-diagonal
@deffn {Command} emacspeak-gomoku-show-current-negative-diagonal   
@findex emacspeak-gomoku-show-current-negative-diagonal

@format
Aurally display current negative sloped diagonal 
@end format
@end deffn

@subsubsection emacspeak-gomoku-show-current-positive-diagonal
@deffn {Command} emacspeak-gomoku-show-current-positive-diagonal   
@findex emacspeak-gomoku-show-current-positive-diagonal

@format
Aurally display current positively sloped diagonal
@end format
@end deffn

@subsubsection emacspeak-gomoku-show-current-row
@deffn {Command} emacspeak-gomoku-show-current-row   
@findex emacspeak-gomoku-show-current-row

@format
Aurally display current row
@end format
@end deffn

@subsubsection emacspeak-gomoku-speak-emacs-previous-move
@deffn {Command} emacspeak-gomoku-speak-emacs-previous-move   
@findex emacspeak-gomoku-speak-emacs-previous-move

@format
Speak emacs’ previous move
@end format
@end deffn

@subsubsection emacspeak-gomoku-speak-humans-previous-move
@deffn {Command} emacspeak-gomoku-speak-humans-previous-move   
@findex emacspeak-gomoku-speak-humans-previous-move

@format
Speak human’ previous move
@end format
@end deffn

@subsubsection emacspeak-gomoku-speak-number-of-moves
@deffn {Command} emacspeak-gomoku-speak-number-of-moves   
@findex emacspeak-gomoku-speak-number-of-moves

@format
Speak number of moves so far
@end format
@end deffn

@subsubsection emacspeak-gomoku-speak-square
@deffn {Command} emacspeak-gomoku-speak-square   
@findex emacspeak-gomoku-speak-square

@format
Speak coordinates and state of square at point
@end format
@end deffn

@node emacspeak-google
@section emacspeak-google

There are a number of search tools that can be implemented on
the Google search page --- in a JS-powered browser, these
show up as the Google tool-belt.
This module implements a minor mode for use in Google result
pages that enables these tools via single keyboard commands.
Originally all options were available as tbs=p:v
Now, some specialized searches, e.g. blog search are tbm=

@subsection Emacspeak-Google Commands

@subsubsection emacspeak-google-extract-from-cache
@deffn {Command} emacspeak-google-extract-from-cache   
@findex emacspeak-google-extract-from-cache

@format
Extract current  page from the Google cache. 
@end format
@end deffn

@subsubsection emacspeak-google-knowledge-search
@deffn {Command} emacspeak-google-knowledge-search  (query &optional limit)
@findex emacspeak-google-knowledge-search

@format
Perform a Google Knowledge Graph search.
Optional interactive prefix arg ‘limit’ prompts for number of
results, default is 1.

(fn QUERY &optional LIMIT)
@end format
@end deffn

@subsubsection emacspeak-google-on-this-site
@deffn {Command} emacspeak-google-on-this-site   
@findex emacspeak-google-on-this-site

@format
Perform a google search restricted to the current WWW site.
@end format
@end deffn

@subsubsection emacspeak-google-open-link
@deffn {Command} emacspeak-google-open-link   
@findex emacspeak-google-open-link

@format
Open Google link under point.
@end format
@end deffn

@subsubsection emacspeak-google-show-toolbelt
@deffn {Command} emacspeak-google-show-toolbelt   
@findex emacspeak-google-show-toolbelt

@format
Reload search page with toolbelt showing.
@end format
@end deffn

@subsubsection emacspeak-google-sign-in
@deffn {Command} emacspeak-google-sign-in   
@findex emacspeak-google-sign-in

@format
Sign in to Google.
@end format
@end deffn

@subsubsection emacspeak-google-sign-out
@deffn {Command} emacspeak-google-sign-out   
@findex emacspeak-google-sign-out

@format
Sign out to Google.
@end format
@end deffn

@subsubsection emacspeak-google-similar-to-this-page
@deffn {Command} emacspeak-google-similar-to-this-page  (url)
@findex emacspeak-google-similar-to-this-page

@format
Ask Google to find documents similar to this one.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-google-toolbelt-change
@deffn {Command} emacspeak-google-toolbelt-change   
@findex emacspeak-google-toolbelt-change

@format
Command to change values in the toolbelt and execute the query.
@end format
@end deffn

@subsubsection emacspeak-google-tts-line
@deffn {Command} emacspeak-google-tts-line  (&optional lang)
@table @kbd
@item C-. g l
@kindex C-. g l
@item C-x @@ s g l
@kindex C-x @@ s g l
@end table

@findex emacspeak-google-tts-line

@format
TTS line using network TTS.
Use default voice for buffer.

(fn &optional LANG)
@end format
@end deffn

@subsubsection emacspeak-google-tts-next-line
@deffn {Command} emacspeak-google-tts-next-line   
@table @kbd
@item C-. g n
@kindex C-. g n
@item C-x @@ s g n
@kindex C-x @@ s g n
@end table

@findex emacspeak-google-tts-next-line

@format
TTS next line using network TTS.
Use default voice for buffer.
@end format
@end deffn

@subsubsection emacspeak-google-tts-previous-line
@deffn {Command} emacspeak-google-tts-previous-line   
@table @kbd
@item C-. g p
@kindex C-. g p
@item C-x @@ s g p
@kindex C-x @@ s g p
@end table

@findex emacspeak-google-tts-previous-line

@format
TTS previous line using network TTS.
Use default voice for buffer.
@end format
@end deffn

@subsubsection emacspeak-google-tts-region
@deffn {Command} emacspeak-google-tts-region  (start end &optional ask-lang)
@table @kbd
@item C-. g r
@kindex C-. g r
@item C-x @@ s g r
@kindex C-x @@ s g r
@end table

@findex emacspeak-google-tts-region

@format
Speak region using Google Network TTS.

(fn START END &optional ASK-LANG)
@end format
@end deffn

@subsubsection emacspeak-google-tts-speak
@deffn {Command} emacspeak-google-tts-speak  (text &optional lang)
@table @kbd
@item C-. g s
@kindex C-. g s
@item C-x @@ s g s
@kindex C-x @@ s g s
@end table

@findex emacspeak-google-tts-speak

@format
Google Network TTS.
Optional interactive prefix arg ‘lang’ specifies  language identifier
which becomes buffer-local.

(fn TEXT &optional LANG)
@end format
@end deffn

@subsubsection emacspeak-google-what-is-my-ip
@deffn {Command} emacspeak-google-what-is-my-ip   
@findex emacspeak-google-what-is-my-ip

@format
Show my public IP
@end format
@end deffn

@subsubsection emacspeak-google-who-links-to-this-page
@deffn {Command} emacspeak-google-who-links-to-this-page   
@findex emacspeak-google-who-links-to-this-page

@format
Perform a google search to locate documents that link to the
current page.
@end format
@end deffn

@subsubsection emacspeak-google-yt-feed
@deffn {Command} emacspeak-google-yt-feed  (url)
@table @kbd
@item C-' y
@kindex C-' y
@end table

@findex emacspeak-google-yt-feed

@format
Turn YT Channel or Playlist url into an RSS feed and open it.

(fn URL)
@end format
@end deffn

@subsection emacspeak-google Options

@defvar {User Option} emacspeak-google-kg-key
API Key for Google Knowledge Graph.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-gridtext
@section emacspeak-gridtext

Emacspeak's table browsing mode allows one to
efficiently access  content that is tabular in nature.
That module also provides functions for inferring table
structure where possible.
Often, such structure is hard to infer automatically
--but might be known to the user
e.g. treat columns 1 through 30 as one column of a table
and so on.
This module allows the user to specify a conceptual grid
that is "overlaid" on the region of text to turn it into
a table for tabular browsing. For now, elements of the
grid are "one line" high --but that may change in the
future if necessary. This module is useful for browsing
structured text files and the output from programs that
tabulate their output.
It's also useful for handling multicolumn text.
The "grid" is specified as a list of (start end) tuples..

@subsection Emacspeak-Gridtext Commands

@subsubsection emacspeak-gridtext-apply
@deffn {Command} emacspeak-gridtext-apply  (start end grid)
@table @kbd
@item C-e # a
@kindex C-e # a
@end table

@findex emacspeak-gridtext-apply

@format
Apply grid to region.

(fn START END GRID)
@end format
@end deffn

@subsubsection emacspeak-gridtext-load
@deffn {Command} emacspeak-gridtext-load  (file)
@table @kbd
@item C-e # l
@kindex C-e # l
@end table

@findex emacspeak-gridtext-load

@format
Load saved grid settings.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-gridtext-save
@deffn {Command} emacspeak-gridtext-save  (file)
@table @kbd
@item C-e # s
@kindex C-e # s
@end table

@findex emacspeak-gridtext-save

@format
Save out grid settings.

(fn FILE)
@end format
@end deffn

@node emacspeak-gtags
@section emacspeak-gtags

GTAGS ==  Emacs support for GNU global.
GNU  global implements  a modern tags solution
Package gtags interfaces Emacs to this tool.

@node emacspeak-gud
@section emacspeak-gud

Provide additional advice to ease debugger interaction with gud

@node emacspeak-haskell
@section emacspeak-haskell

Speech-enable package haskell-mode

@node emacspeak-helm
@section emacspeak-helm

HELM == Smart narrowing/selection in emacs This module
speech-enables Helm interaction.  See tvr/helm-prepare.el in the
GitHub repository for my helm setup.  that file provides convenient
emacspeak-centric keybindings for Helm interaction.

@node emacspeak-hide
@section emacspeak-hide

Flexible hide and show for emacspeak.
This module allows one to easily hide or expose
blocks of lines starting with a common prefix.
It is motivated by the need to flexibly hide quoted text in email
but is designed to be more general.
the prefix parsing is inspired by filladapt.el

@subsection Emacspeak-Hide Commands

@subsubsection emacspeak-hide-or-expose-all-blocks
@deffn {Command} emacspeak-hide-or-expose-all-blocks   
@findex emacspeak-hide-or-expose-all-blocks

@format
Hide or expose all blocks.
@end format
@end deffn

@subsubsection emacspeak-hide-or-expose-block
@deffn {Command} emacspeak-hide-or-expose-block  (&optional prefix)
@table @kbd
@item C-e j
@kindex C-e j
@end table

@findex emacspeak-hide-or-expose-block

@format
Hide or expose a block of text.
 Optional interactive prefix arg causes all blocks in current
buffer to be hidden or exposed.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-hide-speak-block-sans-prefix
@deffn {Command} emacspeak-hide-speak-block-sans-prefix   
@table @kbd
@item C-e C-j
@kindex C-e C-j
@end table

@findex emacspeak-hide-speak-block-sans-prefix

@format
Speaks current block after stripping its prefix. 
@end format
@end deffn

@node emacspeak-hide-lines
@section emacspeak-hide-lines

HIDE-LINES ==  hide/show lines from melpa

@node emacspeak-hideshow
@section emacspeak-hideshow

speech-enable hideshow.el

@node emacspeak-hydra
@section emacspeak-hydra

Speech-enable package hydra:
For  uses of hydra see module @xref{emacspeak-muggles}.

@subsection Emacspeak-Hydra Commands

@subsubsection emacspeak-hydra-toggle-talkative
@deffn {Command} emacspeak-hydra-toggle-talkative   
@findex emacspeak-hydra-toggle-talkative

@format
Toggle hydra-is-helpful
@end format
@end deffn

@node emacspeak-ibuffer
@section emacspeak-ibuffer

speech-enable ibuffer.el
this is an alternative to buffer-menu

@subsection Emacspeak-Ibuffer Commands

@subsubsection emacspeak-ibuffer-speak-buffer-line
@deffn {Command} emacspeak-ibuffer-speak-buffer-line   
@findex emacspeak-ibuffer-speak-buffer-line

@format
Speak information about this buffer
@end format
@end deffn

@node emacspeak-ido
@section emacspeak-ido

speech-enable ido.el This is an interesting task since most of the
value-add provided by package ido.el is visual feedback.  Speech UI
Challenge: What is the most efficient means of conveying a
dynamically updating set of choices?  current strategy is to walk
the list using c-s and c-r as provided by ido Set number matches
shown (ido-max-prospects) to 3 using Custom so you dont hear the
entire list.

@subsection emacspeak-ido Options

@defvar {User Option} emacspeak-ido-typing-delay
How long we wait before speaking completions.

Default Value: 

@verbatim

0.15

@end verbatim

@end defvar

@node emacspeak-iedit
@section emacspeak-iedit

IEDIT ==  Edit multiple regions
This module speech-enables iedit.

@node emacspeak-indium
@section emacspeak-indium

INDIUM ==  Javascript IDE
This module speech-enables Indium.

@node emacspeak-info
@section emacspeak-info

This module speech-enables the Emacs Info Reader.

@subsection Emacspeak-Info Commands

@subsubsection emacspeak-info-next-section
@deffn {Command} emacspeak-info-next-section   
@findex emacspeak-info-next-section

@format
Move forward to next section in this node.
@end format
@end deffn

@subsubsection emacspeak-info-previous-section
@deffn {Command} emacspeak-info-previous-section   
@findex emacspeak-info-previous-section

@format
Move backward to previous section in this node.
@end format
@end deffn

@subsubsection emacspeak-info-speak-header
@deffn {Command} emacspeak-info-speak-header   
@findex emacspeak-info-speak-header

@format
Speak info header line.
@end format
@end deffn

@subsubsection emacspeak-info-wizard
@deffn {Command} emacspeak-info-wizard  (node-spec)
@table @kbd
@item C-h TAB
@kindex C-h TAB
@item <f1> TAB
@kindex <f1> TAB
@item <help> TAB
@kindex <help> TAB
@end table

@findex emacspeak-info-wizard

@format
Read a node spec from the minibuffer and launch
Info-goto-node.
See documentation for command ‘Info-goto-node’ for details on
node-spec.

(fn NODE-SPEC)
@end format
@end deffn

@subsection emacspeak-info Options

@defvar {User Option} emacspeak-info-select-node-speak-chunk
Specifies how much of the selected node gets spoken.
Possible values are:
screenfull  -- speak the displayed screen
node -- speak the entire node.

Default Value: 

@verbatim

screenfull

@end verbatim

@end defvar

@node emacspeak-ispell
@section emacspeak-ispell

This module speech enables ispell.  Implementation note: This is
hard because of how ispell.el is written Namely, all of the work is
done by one huge hairy function.  This makes advising it hard.  The
ispell commands work well with Emacspeak as long as the list of
correction choices are few.  For interactively moving through
corrections, install package flyspell-correct from MELPA
(package-install "flyspell-correct") Then use M-x flyspell-mode.
Package flyspell is speech-enabled by Emacspeak module
emacspeak-flyspell And that module sets up flyspell-correct to use
IDO-style completion, i.e. you can move through corrections with
C-r and C-s.

@subsection emacspeak-ispell Options

@defvar {User Option} emacspeak-ispell-max-choices
Emacspeak will not speak the choices if there are more than this
many available corrections.

Default Value: 

@verbatim

8

@end verbatim

@end defvar

@node emacspeak-ivy
@section emacspeak-ivy

IVY ==  One More Smart Completion Technique
Speech-enable ivy-style completion.
This is still experimental and preliminary.

@node emacspeak-jabber
@section emacspeak-jabber

emacs-jabber.el implements a  jabber client for emacs
emacs-jabber is hosted at sourceforge.
I use emacs-jabber with my gmail.com account

@subsection Emacspeak-Jabber Commands

@subsubsection emacspeak-jabber-chat-next-message
@deffn {Command} emacspeak-jabber-chat-next-message   
@findex emacspeak-jabber-chat-next-message

@format
Move forward to and speak the next message in this chat session.
@end format
@end deffn

@subsubsection emacspeak-jabber-chat-previous-message
@deffn {Command} emacspeak-jabber-chat-previous-message   
@findex emacspeak-jabber-chat-previous-message

@format
Move backward to and speak the previous message in this chat session.
@end format
@end deffn

@subsubsection emacspeak-jabber-chat-speak-this-message
@deffn {Command} emacspeak-jabber-chat-speak-this-message  (&optional copy-as-kill)
@findex emacspeak-jabber-chat-speak-this-message

@format
Speak chat message under point.
With optional interactive prefix arg ‘copy-as-kill’, copy it to
the kill ring as well.

(fn &optional COPY-AS-KILL)
@end format
@end deffn

@subsubsection emacspeak-jabber-popup-roster
@deffn {Command} emacspeak-jabber-popup-roster   
@findex emacspeak-jabber-popup-roster

@format
Pop to Jabber roster.
@end format
@end deffn

@subsubsection emacspeak-jabber-speak-recent-message
@deffn {Command} emacspeak-jabber-speak-recent-message   
@findex emacspeak-jabber-speak-recent-message

@format
Speak most recent message if one exists.
@end format
@end deffn

@subsection emacspeak-jabber Options

@defvar {User Option} emacspeak-jabber-speak-presence-alerts
Set to T if you want to hear presence alerts.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-jdee
@section emacspeak-jdee

Speech enable Java IDE.
The Java IDE --JDEE-- can be found at
http://sunsite.auc.dk/jdee/

@node emacspeak-journalctl
@section emacspeak-journalctl

JOURNALCTL ==  SystemD Journal From emacs
See https://github.com/SebastianMeisel/journalctl-mode

@node emacspeak-js2
@section emacspeak-js2

JS2-mode http://js2-mode.googlecode.com/svn/trunk
is a new, powerful Emacs mode for working with JavaScript.
This module speech-enables js2.

  Required modules

@node emacspeak-keymap
@section emacspeak-keymap

This module defines the emacspeak keybindings.
Note that the <fn> key found on laptops is denoted <fn>

@subsection emacspeak-keymap Options

@defvar {User Option} emacspeak-alt-keys
Alt key bindings. 

Default Value: 

@verbatim

(("," eldoc)
 ("C-l" ellama-chat)
 ("SPC" emacspeak-eww-smart-tabs)
 ("a" emacspeak-feeds-atom-display)
 ("b" sox-binaural)
 ("c" gptel)
 ("d" deadgrep)
 ("e" eww)
 ("f" ffip)
 ("g" rg)
 ("l" eww-open-file)
 ("o" emacspeak-feeds-opml-display)
 ("p" emacspeak-wizards-pdf-open)
 ("q" emacspeak-wizards-quotes)
 ("r" emacspeak-feeds-rss-display)
 ("s" emacspeak-wizards-tune-in-radio-search)
 ("t" emacspeak-wizards-tune-in-radio-browse)
 ("u" emacspeak-m-player-url)
 ("v" visual-line-mode)
 ("w" define-word))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ctl-z-keys
CTL-z keymap.

Default Value: 

@verbatim

(("SPC" flyspell-mode)
 ("b" emacspeak-wizards-view-buffers-filtered-by-this-mode)
 ("c" calibredb)
 ("d" magit-dispatch)
 ("e" emacspeak-wizards-eww-buffer-list)
 ("f" magit-file-dispatch)
 ("l" emacspeak-m-player-locate-media)
 ("n" emacspeak-wizards-buffer-select)
 ("p" emacspeak-wizards-buffer-select)
 ("r" restart-emacs)
 ("s" magit-status)
 ("z" suspend-frame))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-hyper-keys
Hyper-Key bindings. 

Default Value: 

@verbatim

(("C-;" emacspeak-amark-bookshelf)
 ("C-a" ansi-term)
 ("C-b" eww-list-bookmarks)
 ("C-d" dictionary-search)
 ("C-e" eshell)
 ("C-j" journalctl)
 ("C-l" emacspeak-librivox)
 ("C-t" emacspeak-wizards-tramp-open-location)
 ("DEL" emacspeak-wizards-snarf-sexp)
 ("TAB" hippie-expand)
 ("a" emacspeak-amark-browse)
 ("b" emacspeak-wizards-bbc-sounds)
 ("c" browse-url-chrome)
 ("d" magit-dispatch)
 ("f" magit-file-dispatch)
 ("g" gnus)
 ("h" emacspeak-m-player-from-history)
 ("i" ibuffer)
 ("j" emacspeak-zoxide)
 ("l" emacspeak-m-player-locate-media)
 ("m" vm)
 ("o" find-file)
 ("r" emacspeak-wizards-find-file-as-root)
 ("s" magit-status)
 ("u" list-unicode-display)
 ("w" emacspeak-wizards-noaa-weather)
 ("y" yas-expand))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-multi-keys
Multi key bindings. 

Default Value: 

@verbatim

(("'" emacspeak-pianobar)
 ("C-'" empv-exit)
 ("d" sdcv-search-input)
 ("e" eat)
 ("f" ffap)
 ("l" locate)
 ("m" notmuch-search)
 ("o" org-mode)
 ("y" emacspeak-google-yt-feed))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-super-keys
Super key bindings. 

Default Value: 

@verbatim

(("." emacspeak-wizards-shell-directory-reset)
 ("C-n" emacspeak-wizards-google-headlines)
 ("R" emacspeak-webspace-feed-reader)
 ("SPC" scratch-buffer)
 ("b" eww-list-buffers)
 ("c" calculator)
 ("d" emacspeak-dired-downloads)
 ("e" elfeed)
 ("f" browse-url-firefox)
 ("g" emacspeak-google-tts)
 ("h" emacspeak-org-capture-link)
 ("l" emacspeak-wizards-locate-content)
 ("m" emacspeak-wizards-view-buffers-filtered-by-this-mode)
 ("n" emacspeak-wizards-google-news)
 ("p" proced)
 ("r" soundscape-restart)
 ("s" soundscape)
 ("t" soundscape-toggle)
 ("u" soundscape-update-mood)
 ("y" empv-youtube-tabulated))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-v-keys
Key bindings for use with C-e v. 

Default Value: 

@verbatim

(("v" view-register))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-windows-keys
Key bindings on the windows  key. 

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-x-keys
Key bindings for  C-e x. 

Default Value: 

@verbatim

(("," emacspeak-wizards-shell-directory-set)
 ("." emacspeak-wizards-shell-directory-reset)
 ("0" emacspeak-wizards-shell-by-key)
 ("1" emacspeak-wizards-shell-by-key)
 ("2" emacspeak-wizards-shell-by-key)
 ("3" emacspeak-wizards-shell-by-key)
 ("4" emacspeak-wizards-shell-by-key)
 ("5" emacspeak-wizards-shell-by-key)
 ("7" emacspeak-wizards-shell-command-on-current-file)
 ("8" calc)
 (":" emacspeak-m-player-loop)
 (";" emacspeak-m-player-shuffle)
 ("=" emacspeak-wizards-find-longest-line-in-region)
 ("C-c" emacspeak-wizards-color-wheel)
 ("M-c" emacspeak-wizards-colors)
 ("b" battery)
 ("d" emacspeak-speak-load-directory-settings)
 ("e" emacspeak-we-xsl-map)
 ("f" emacspeak-wizards-remote-frame)
 ("h" emacspeak-wizards-how-many-matches)
 ("i" ibuffer)
 ("m" mspools-show)
 ("o" emacspeak-wizards-occur-header-lines)
 ("p" paradox-list-packages)
 ("t" emacspeak-speak-telephone-directory)
 ("u" emacspeak-wizards-units)
 ("v" emacspeak-wizards-vc-viewer)
 ("w" emacspeak-wizards-noaa-weather)
 ("x" exchange-point-and-mark)
 ("|" emacspeak-wizards-squeeze-blanks)
 ("<DEL>" desktop-clear))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-y-keys
Key bindings for use with C-e y. 

Default Value: 

@verbatim

(("a" emacspeak-xslt-view-atom-file)
 ("p" emacspeak-pianobar)
 ("r" emacspeak-xslt-view-rss-file)
 ("x" emacspeak-xslt-view-file)
 ("y" emacspeak-empv-play-url))

@end verbatim

@end defvar

@node emacspeak-kmacro
@section emacspeak-kmacro

  Introduction
speech-enables kmacro --- a kbd macro interface

 required modules

@node emacspeak-librivox
@section emacspeak-librivox

LIBRIVOX == @url{http://www.librivox.org} --- Free Audio Books.
API Info: @url{https://librivox.org/api/info}
It provides a simple Web  API
This module implements an Emacspeak Librivox client.

@subsection Usage

main entry point is command @code{emacspeak-librivox} bound to @kbd{C-; l}.
This prompts with the following choices:
@itemize
@item @kbd{a} Author --- Search  by Author.
@item @kbd{t} Title --- Search  by Title.
@item @kbd{g} Genre --- Search  by Genre --- with minibuffer completion.
@item @kbd{p} Play --- Play a  book.
@item @kbd{d} Directory --- Browse local cache.
@end itemize

Search results are displayed in a Web page that provides controls
for accessing the book.

@subsection Emacspeak-Librivox Commands

@subsubsection emacspeak-librivox
@deffn {Command} emacspeak-librivox  (search-type)
@table @kbd
@item C-; C-l
@kindex C-; C-l
@item C-x @@ h C-l
@kindex C-x @@ h C-l
@end table

@findex emacspeak-librivox

@format
Launch a Librivox Search.

(fn SEARCH-TYPE)
@end format
@end deffn

@subsubsection emacspeak-librivox-play
@deffn {Command} emacspeak-librivox-play  (rss-url)
@findex emacspeak-librivox-play

@format
Play book stream

(fn RSS-URL)
@end format
@end deffn

@subsubsection emacspeak-librivox-search-by-author
@deffn {Command} emacspeak-librivox-search-by-author  (author &optional offset)
@findex emacspeak-librivox-search-by-author

@format
Search by author. Both exact and partial matches for
‘author’. Optional interactive prefix arg ‘offset’ prompts for offset
--- use this for retrieving next set of results.

(fn AUTHOR &optional OFFSET)
@end format
@end deffn

@subsubsection emacspeak-librivox-search-by-genre
@deffn {Command} emacspeak-librivox-search-by-genre  (genre &optional offset)
@findex emacspeak-librivox-search-by-genre

@format
Search by genre.
Optional prefix arg ‘offset’ prompts for offset.

(fn GENRE &optional OFFSET)
@end format
@end deffn

@subsubsection emacspeak-librivox-search-by-title
@deffn {Command} emacspeak-librivox-search-by-title  (title &optional offset)
@findex emacspeak-librivox-search-by-title

@format
Search by title. Both exact and partial matches for ‘title’. Optional
prefix arg ‘offset’ prompts for offset --- use this for retrieving
more results.

(fn TITLE &optional OFFSET)
@end format
@end deffn

@subsection emacspeak-librivox Options

@defvar {User Option} emacspeak-librivox-local-cache
Location where we cache LIBRIVOX playlists.

Default Value: 

@verbatim

"/home/raman/.emacspeak/librivox"

@end verbatim

@end defvar

@node emacspeak-lispy
@section emacspeak-lispy

LISPY == smart Navigation Of Lisp code This module speech-enables
lispy.
@subsection Overview
Lispy editing keeps delimiters
balanced and Lispy navigators reliably place point on either the
opening or closing delimiter of the current s-expression. Emacspeak
leverages this fact in the type of spoken feedback that is
produced. All navigation commands produce the following:
@itemize
@item Speak the current s-expression when at the front of a sexp.
@item Speak the current line with option
@code{emacspeak-show-point} turned on when at the end of an
s-expression.
 @item Produce auditory icon @code{left} or
@code{right} to indicate point being at the beginning or end of
current line.
@item Indicate with an auditory icon if point did
not move.
  @end itemize

@node emacspeak-lua
@section emacspeak-lua

LUA == lua-mode
Speech-enable lua-mode.

@node emacspeak-m-player
@section emacspeak-m-player

Defines an Emacspeak front-end for interacting with @code{mplayer}.
Program @code{mplayer}  is a versatile media player capable of playing many
streaming media formats.
This module provides complete access to all @code{mplayer} functionality
from a convenient Emacs interface.

@subsection Usage

The main entry-point is command @code{emacspeak-multimedia} bound
to @kbd{C-e ;}.  This prompts for and launches the desired media
stream.  Once a stream is playing, you can control it with
single-letter keystrokes in the @code{*M-Player*} buffer.
Alternatively, you can switch away from that buffer to do real
work, And invoke @code{m-player} commands by first pressing
prefix-key @kbd{C-e ;}.  If your Emacs supports @code{repeat-mode},
--- @xref{repeating, , , emacs} you can avoid the need to
repeatedly press the prefix-key @code{C-e ;} each time; with
@code{repeat-mode} active, you only need to press the prefix
@code{C-e ;} the first time; subsequent invocations can happen via
single-letter presses as long as they are performed in a sequence.
As an example, pressing @kbd{v} in the @code{*M-Player*} buffer
prompts for and sets the volume; When not in the @code{*M-Player*}
buffer, you can achieve the same by pressing @kbd{C-e ; v}.  Press
@kbd{C-h b} in the @code{*M-Player*} buffer to list @code{m-player}
keybindings.

@subsection Emacspeak-M-Player Commands

@subsubsection emacspeak-m-player
@deffn {Command} emacspeak-m-player  (resource &optional play-list)
@findex emacspeak-m-player

@format
Play  resource, or play dynamic playlist if set.  Optional prefix argument
play-list interprets resource as a play-list.  Second interactive
prefix arg adds option -allow-dangerous-playlist-parsing to mplayer.
See command M-x emacspeak-m-player-add-dynamic for adding to the
dynamic playlist. 

(fn RESOURCE &optional PLAY-LIST)
@end format
@end deffn

@subsubsection emacspeak-m-player-add-autopan
@deffn {Command} emacspeak-m-player-add-autopan   
@findex emacspeak-m-player-add-autopan

@format
Add autopan effect.
@end format
@end deffn

@subsubsection emacspeak-m-player-add-autosat
@deffn {Command} emacspeak-m-player-add-autosat   
@findex emacspeak-m-player-add-autosat

@format
Add ZamAutoSat (auto saturation) effect.
@end format
@end deffn

@subsubsection emacspeak-m-player-add-dynamic
@deffn {Command} emacspeak-m-player-add-dynamic  (file)
@findex emacspeak-m-player-add-dynamic

@format
Add file to the current  dynamic playlist.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-m-player-add-equalizer
@deffn {Command} emacspeak-m-player-add-equalizer  (&optional reset)
@findex emacspeak-m-player-add-equalizer

@format
Add equalizer.  Equalizer is updated as each change
is made, and the final effect set by pressing RET.  Interactive prefix
arg ‘reset’ starts with all filters set to 0.

(fn &optional RESET)
@end format
@end deffn

@subsubsection emacspeak-m-player-add-filter
@deffn {Command} emacspeak-m-player-add-filter  (filter-name &optional edit)
@findex emacspeak-m-player-add-filter

@format
Adds  filter with completion.
 Optional interactive prefix arg ‘edit’ edits the.

(fn FILTER-NAME &optional EDIT)
@end format
@end deffn

@subsubsection emacspeak-m-player-add-ladspa
@deffn {Command} emacspeak-m-player-add-ladspa   
@findex emacspeak-m-player-add-ladspa

@format
Apply plugin to running MPlayer.
Copies  invocation string to kill-ring so it can be added easily to
our pre-defined filters if appropriate.
@end format
@end deffn

@subsubsection emacspeak-m-player-add-loop
@deffn {Command} emacspeak-m-player-add-loop  (&optional prompt)
@findex emacspeak-m-player-add-loop

@format
Add loop 10 is default.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-m-player-alt-src-step
@deffn {Command} emacspeak-m-player-alt-src-step  (step)
@findex emacspeak-m-player-alt-src-step

@format
Move within an ASF playlist.

(fn STEP)
@end format
@end deffn

@subsubsection emacspeak-m-player-amark-add
@deffn {Command} emacspeak-m-player-amark-add  (name &optional prompt-position)
@findex emacspeak-m-player-amark-add

@format
Set AMark ‘name’ at current position.
Interactive prefix arg prompts for position.
As the default, use current position.

(fn NAME &optional PROMPT-POSITION)
@end format
@end deffn

@subsubsection emacspeak-m-player-amark-jump
@deffn {Command} emacspeak-m-player-amark-jump   
@findex emacspeak-m-player-amark-jump

@format
Jump to AMark.
@end format
@end deffn

@subsubsection emacspeak-m-player-amark-save
@deffn {Command} emacspeak-m-player-amark-save   
@findex emacspeak-m-player-amark-save

@format
Save amarks.
@end format
@end deffn

@subsubsection emacspeak-m-player-apply-reverb
@deffn {Command} emacspeak-m-player-apply-reverb  (preset)
@findex emacspeak-m-player-apply-reverb

@format
Prompt for and apply a reverb preset.
  You need to use mplayer built with ladspa support, and have package
  tap-reverb already installed.

(fn PRESET)
@end format
@end deffn

@subsubsection emacspeak-m-player-backward-10min
@deffn {Command} emacspeak-m-player-backward-10min   
@findex emacspeak-m-player-backward-10min

@format
Move backward ten minutes.
@end format
@end deffn

@subsubsection emacspeak-m-player-backward-10s
@deffn {Command} emacspeak-m-player-backward-10s   
@findex emacspeak-m-player-backward-10s

@format
Move back 10 seconds.
@end format
@end deffn

@subsubsection emacspeak-m-player-backward-1min
@deffn {Command} emacspeak-m-player-backward-1min   
@findex emacspeak-m-player-backward-1min

@format
Move back 1 minute.
@end format
@end deffn

@subsubsection emacspeak-m-player-balance
@deffn {Command} emacspeak-m-player-balance   
@findex emacspeak-m-player-balance

@format
Set left/right balance.
@end format
@end deffn

@subsubsection emacspeak-m-player-balance-channels
@deffn {Command} emacspeak-m-player-balance-channels   
@findex emacspeak-m-player-balance-channels

@format
Mono to stereo.
@end format
@end deffn

@subsubsection emacspeak-m-player-bind-hotkey
@deffn {Command} emacspeak-m-player-bind-hotkey  (directory key)
@findex emacspeak-m-player-bind-hotkey

@format
Binds key to invoke m-player  on specified directory.

(fn DIRECTORY KEY)
@end format
@end deffn

@subsubsection emacspeak-m-player-browse-history
@deffn {Command} emacspeak-m-player-browse-history   
@findex emacspeak-m-player-browse-history

@format
Create a  media history browser from media-history.
@end format
@end deffn

@subsubsection emacspeak-m-player-clear-filters
@deffn {Command} emacspeak-m-player-clear-filters   
@findex emacspeak-m-player-clear-filters

@format
Clear all filters
@end format
@end deffn

@subsubsection emacspeak-m-player-command
@deffn {Command} emacspeak-m-player-command  (key)
@findex emacspeak-m-player-command

@format
Invoke MPlayer commands.

(fn KEY)
@end format
@end deffn

@subsubsection emacspeak-m-player-customize
@deffn {Command} emacspeak-m-player-customize   
@findex emacspeak-m-player-customize

@format
Use Customize to set MPlayer options.
@end format
@end deffn

@subsubsection emacspeak-m-player-delete-filter
@deffn {Command} emacspeak-m-player-delete-filter  (filter)
@findex emacspeak-m-player-delete-filter

@format
Delete filter.

(fn FILTER)
@end format
@end deffn

@subsubsection emacspeak-m-player-delete-ladspa
@deffn {Command} emacspeak-m-player-delete-ladspa   
@findex emacspeak-m-player-delete-ladspa

@format
Delete plugin from  running MPlayer.
@end format
@end deffn

@subsubsection emacspeak-m-player-display-percent
@deffn {Command} emacspeak-m-player-display-percent   
@findex emacspeak-m-player-display-percent

@format
Display current percentage.
@end format
@end deffn

@subsubsection emacspeak-m-player-double-speed
@deffn {Command} emacspeak-m-player-double-speed   
@findex emacspeak-m-player-double-speed

@format
Scale speed by 2.0
@end format
@end deffn

@subsubsection emacspeak-m-player-edit-reverb
@deffn {Command} emacspeak-m-player-edit-reverb   
@findex emacspeak-m-player-edit-reverb

@format
Edit ladspa reverb filter.
  You need to use mplayer built with ladspa support, and have package
  tap-reverb already installed.
@end format
@end deffn

@subsubsection emacspeak-m-player-end-track
@deffn {Command} emacspeak-m-player-end-track   
@findex emacspeak-m-player-end-track

@format
Move to end.
@end format
@end deffn

@subsubsection emacspeak-m-player-eq-controls
@deffn {Command} emacspeak-m-player-eq-controls  (v)
@findex emacspeak-m-player-eq-controls

@format
Manipulate values in  vector using minibuffer.
Applies  the resulting value at each step.

(fn V)
@end format
@end deffn

@subsubsection emacspeak-m-player-eq-preset
@deffn {Command} emacspeak-m-player-eq-preset  (name)
@findex emacspeak-m-player-eq-preset

@format
Prompts for  and apply equalizer preset.

The following presets are available:

flat classical club dance full-bass full-bass-and-treble
 full-treble headphones large-hall live party pop reggae rock
 ska soft soft-rock techno 

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-m-player-faster
@deffn {Command} emacspeak-m-player-faster   
@findex emacspeak-m-player-faster

@format
Speed up  playback. 
@end format
@end deffn

@subsubsection emacspeak-m-player-forward-10min
@deffn {Command} emacspeak-m-player-forward-10min   
@findex emacspeak-m-player-forward-10min

@format
Move forward ten minutes.
@end format
@end deffn

@subsubsection emacspeak-m-player-forward-10s
@deffn {Command} emacspeak-m-player-forward-10s   
@findex emacspeak-m-player-forward-10s

@format
Move forward 10 seconds.
@end format
@end deffn

@subsubsection emacspeak-m-player-forward-1min
@deffn {Command} emacspeak-m-player-forward-1min   
@findex emacspeak-m-player-forward-1min

@format
Move forward by 1 minute.
@end format
@end deffn

@subsubsection emacspeak-m-player-from-history
@deffn {Command} emacspeak-m-player-from-history  (&optional prefix)
@table @kbd
@item C-; h
@kindex C-; h
@item C-x @@ h h
@kindex C-x @@ h h
@end table

@findex emacspeak-m-player-from-history

@format
Play media from the front of media-history.
   Interactive prefix arg invokes media history browser.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-m-player-get-length
@deffn {Command} emacspeak-m-player-get-length   
@findex emacspeak-m-player-get-length

@format
Display length of track.
@end format
@end deffn

@subsubsection emacspeak-m-player-half-speed
@deffn {Command} emacspeak-m-player-half-speed   
@findex emacspeak-m-player-half-speed

@format
Scale speed by 0.5.
@end format
@end deffn

@subsubsection emacspeak-m-player-left-channel
@deffn {Command} emacspeak-m-player-left-channel   
@findex emacspeak-m-player-left-channel

@format
Play both channels on left.
@end format
@end deffn

@subsubsection emacspeak-m-player-locate-media
@deffn {Command} emacspeak-m-player-locate-media  (pattern)
@table @kbd
@item C-z l
@kindex C-z l
@item C-; l
@kindex C-; l
@item C-e z l
@kindex C-e z l
@item C-x @@ h l
@kindex C-x @@ h l
@end table

@findex emacspeak-m-player-locate-media

@format
Locate media matching  pattern.  The results can be
played as a play-list by pressing [RET] on the first line, see
 M-x emacspeak-dired-open-this-file locally bound to C-RET
to play  tracks.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-m-player-loop
@deffn {Command} emacspeak-m-player-loop  (&optional raw)
@table @kbd
@item C-e x :
@kindex C-e x :
@end table

@findex emacspeak-m-player-loop

@format
M-Player with repeat indefinitely  turned on.
Interactive prefix ‘raw’ reads a raw URL.

(fn &optional RAW)
@end format
@end deffn

@subsubsection emacspeak-m-player-mode
@deffn {Command} emacspeak-m-player-mode   
@findex emacspeak-m-player-mode

@format
Major mode for m-player interaction. 

Key             Binding
-------------------------------------------------------------------------------
C-a		emacspeak-amark-browse
C-l		ladspa
SPC		emacspeak-m-player-pause
%		emacspeak-m-player-display-percent
'		emacspeak-m-player-add-loop
(		emacspeak-m-player-left-channel
)		emacspeak-m-player-right-channel
+		emacspeak-m-player-volume-up
,		emacspeak-m-player-backward-10s
-		emacspeak-m-player-volume-down
.		emacspeak-m-player-forward-10s
/		emacspeak-m-player-restore-process
1 .. 9		emacspeak-m-player-volume-set
;		emacspeak-m-player-pop-to-player
<		emacspeak-m-player-backward-1min
=		emacspeak-m-player-volume-up
>		emacspeak-m-player-forward-1min
?		emacspeak-m-player-show-pos
A		emacspeak-m-player-amark-add
C		emacspeak-m-player-clear-filters
E		emacspeak-m-player-add-equalizer
G		emacspeak-m-player-seek-percentage
L		emacspeak-m-player-get-length
M		emacspeak-m-player-show-data
O		emacspeak-m-player-reset-options
P		emacspeak-m-player-apply-reverb
Q		emacspeak-m-player-quit
R		emacspeak-m-player-edit-reverb
S		emacspeak-m-player-amark-save
T		emacspeak-speak-brief-time
[		emacspeak-m-player-slower
\		emacspeak-m-player-persist-process
]		emacspeak-m-player-faster
a		emacspeak-m-player-add-autopan
b		emacspeak-m-player-balance-channels
c		emacspeak-m-player-slave-command
d		emacspeak-m-player-delete-filter
e		emacspeak-m-player-eq-preset
f		emacspeak-m-player-add-filter
g		emacspeak-m-player-seek-absolute
h		emacspeak-m-player-from-history
i		emacspeak-m-player-stream-info
j		emacspeak-m-player-amark-jump
k		emacspeak-m-player-quit
l		emacspeak-m-player-store-link
m		emacspeak-m-player-mode-line
n		emacspeak-m-player-next-track
o		emacspeak-m-player-customize
p		emacspeak-m-player-previous-track
r		emacspeak-m-player-seek-relative
s		emacspeak-m-player-scale-speed
t		emacspeak-m-player-skip-tracks
v		emacspeak-m-player-volume-change
w		emacspeak-m-player-write-clip
x		emacspeak-m-player-pan
z		emacspeak-m-player-add-autosat
@{		emacspeak-m-player-half-speed
@}		emacspeak-m-player-double-speed
DEL		emacspeak-m-player-reset-speed
<down>		emacspeak-m-player-forward-1min
<end>		emacspeak-m-player-end-track
<home>		emacspeak-m-player-start-track
<left>		emacspeak-m-player-backward-10s
<next>		emacspeak-m-player-forward-10min
<prior>		emacspeak-m-player-backward-10min
<right>		emacspeak-m-player-forward-10s
<up>		emacspeak-m-player-backward-1min

M-,		emacspeak-m-player-set-clip-start
M-.		emacspeak-m-player-set-clip-end

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-m-player-mode-hook’, as the
final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-m-player-mode-line
@deffn {Command} emacspeak-m-player-mode-line   
@findex emacspeak-m-player-mode-line

@format
Mode-line for M-Player buffers.
@end format
@end deffn

@subsubsection emacspeak-m-player-next-track
@deffn {Command} emacspeak-m-player-next-track   
@findex emacspeak-m-player-next-track

@format
Next track.
@end format
@end deffn

@subsubsection emacspeak-m-player-pan
@deffn {Command} emacspeak-m-player-pan   
@findex emacspeak-m-player-pan

@format
Pan from left to right   and back  one step at a time.
@end format
@end deffn

@subsubsection emacspeak-m-player-pause
@deffn {Command} emacspeak-m-player-pause   
@findex emacspeak-m-player-pause

@format
Pause or unpause.
@end format
@end deffn

@subsubsection emacspeak-m-player-persist-process
@deffn {Command} emacspeak-m-player-persist-process  (&optional name)
@findex emacspeak-m-player-persist-process

@format
Persists  m-player process instance by renaming its buffer.
Optional interactive prefix arg prompts for name to use for  player.

(fn &optional NAME)
@end format
@end deffn

@subsubsection emacspeak-m-player-play-rss
@deffn {Command} emacspeak-m-player-play-rss  (rss-url)
@findex emacspeak-m-player-play-rss

@format
Play an RSS stream.

(fn RSS-URL)
@end format
@end deffn

@subsubsection emacspeak-m-player-play-tree-up
@deffn {Command} emacspeak-m-player-play-tree-up  (step)
@findex emacspeak-m-player-play-tree-up

@format
Move within the play tree.

(fn STEP)
@end format
@end deffn

@subsubsection emacspeak-m-player-pop-to-player
@deffn {Command} emacspeak-m-player-pop-to-player   
@findex emacspeak-m-player-pop-to-player

@format
Pop to m-player buffer.
@end format
@end deffn

@subsubsection emacspeak-m-player-previous-track
@deffn {Command} emacspeak-m-player-previous-track   
@findex emacspeak-m-player-previous-track

@format
Previous track.
@end format
@end deffn

@subsubsection emacspeak-m-player-quit
@deffn {Command} emacspeak-m-player-quit   
@findex emacspeak-m-player-quit

@format
Quit.
@end format
@end deffn

@subsubsection emacspeak-m-player-rem-history
@deffn {Command} emacspeak-m-player-rem-history  (url)
@findex emacspeak-m-player-rem-history

@format
Remove URL from media history

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-m-player-reset-options
@deffn {Command} emacspeak-m-player-reset-options   
@findex emacspeak-m-player-reset-options

@format
Reset MPlayer options.
@end format
@end deffn

@subsubsection emacspeak-m-player-reset-speed
@deffn {Command} emacspeak-m-player-reset-speed   
@findex emacspeak-m-player-reset-speed

@format
Reset  speed.
@end format
@end deffn

@subsubsection emacspeak-m-player-restore-process
@deffn {Command} emacspeak-m-player-restore-process   
@findex emacspeak-m-player-restore-process

@format
Restore emacspeak-m-player-process from current buffer.
Check first if current buffer is in emacspeak-m-player-mode.
@end format
@end deffn

@subsubsection emacspeak-m-player-right-channel
@deffn {Command} emacspeak-m-player-right-channel   
@findex emacspeak-m-player-right-channel

@format
Play on right channel.
@end format
@end deffn

@subsubsection emacspeak-m-player-scale-speed
@deffn {Command} emacspeak-m-player-scale-speed  (factor)
@findex emacspeak-m-player-scale-speed

@format
Scale speed by factor.

(fn FACTOR)
@end format
@end deffn

@subsubsection emacspeak-m-player-seek-absolute
@deffn {Command} emacspeak-m-player-seek-absolute  (pos)
@findex emacspeak-m-player-seek-absolute

@format
Seek  to absolute pos in seconds.
The time position can also be specified as HH:MM:SS.

(fn POS)
@end format
@end deffn

@subsubsection emacspeak-m-player-seek-percentage
@deffn {Command} emacspeak-m-player-seek-percentage  (pos)
@findex emacspeak-m-player-seek-percentage

@format
Seek  to absolute pos in percent.

(fn POS)
@end format
@end deffn

@subsubsection emacspeak-m-player-seek-relative
@deffn {Command} emacspeak-m-player-seek-relative  (offset)
@findex emacspeak-m-player-seek-relative

@format
Seek  by offset from current position.
Time offset can be specified as a number of seconds, or as HH:MM:SS.

(fn OFFSET)
@end format
@end deffn

@subsubsection emacspeak-m-player-set-clip-end
@deffn {Command} emacspeak-m-player-set-clip-end   
@findex emacspeak-m-player-set-clip-end

@format
Set end of clip mark.
@end format
@end deffn

@subsubsection emacspeak-m-player-set-clip-start
@deffn {Command} emacspeak-m-player-set-clip-start   
@findex emacspeak-m-player-set-clip-start

@format
Set start of clip. 
@end format
@end deffn

@subsubsection emacspeak-m-player-show-data
@deffn {Command} emacspeak-m-player-show-data   
@findex emacspeak-m-player-show-data

@format
Display metadata after refreshing it if needed.
@end format
@end deffn

@subsubsection emacspeak-m-player-show-pos
@deffn {Command} emacspeak-m-player-show-pos   
@findex emacspeak-m-player-show-pos

@format
Display current position in track.
@end format
@end deffn

@subsubsection emacspeak-m-player-shuffle
@deffn {Command} emacspeak-m-player-shuffle   
@table @kbd
@item C-e x ;
@kindex C-e x ;
@end table

@findex emacspeak-m-player-shuffle

@format
M-Player with shuffle turned on.
@end format
@end deffn

@subsubsection emacspeak-m-player-skip-tracks
@deffn {Command} emacspeak-m-player-skip-tracks  (step)
@findex emacspeak-m-player-skip-tracks

@format
Skip tracks.

(fn STEP)
@end format
@end deffn

@subsubsection emacspeak-m-player-slave-command
@deffn {Command} emacspeak-m-player-slave-command  (command)
@findex emacspeak-m-player-slave-command

@format
Dispatch slave command.

(fn COMMAND)
@end format
@end deffn

@subsubsection emacspeak-m-player-slower
@deffn {Command} emacspeak-m-player-slower   
@findex emacspeak-m-player-slower

@format
Slow down playback. 
@end format
@end deffn

@subsubsection emacspeak-m-player-start-track
@deffn {Command} emacspeak-m-player-start-track   
@findex emacspeak-m-player-start-track

@format
Move to beginning.
@end format
@end deffn

@subsubsection emacspeak-m-player-store-link
@deffn {Command} emacspeak-m-player-store-link   
@findex emacspeak-m-player-store-link

@format
Store an org-link to currently playing stream at current position.
@end format
@end deffn

@subsubsection emacspeak-m-player-stream-info
@deffn {Command} emacspeak-m-player-stream-info  (&optional toggle-cue)
@findex emacspeak-m-player-stream-info

@format
Speak and display metadata.
Interactive prefix arg toggles automatic cueing of ICY info updates.

(fn &optional TOGGLE-CUE)
@end format
@end deffn

@subsubsection emacspeak-m-player-toggle-extrastereo
@deffn {Command} emacspeak-m-player-toggle-extrastereo   
@findex emacspeak-m-player-toggle-extrastereo

@format
Toggle application of extrastereo filter to all streams.
@end format
@end deffn

@subsubsection emacspeak-m-player-url
@deffn {Command} emacspeak-m-player-url  (url &optional playlist-p)
@table @kbd
@item C-, u
@kindex C-, u
@item C-x @@ a u
@kindex C-x @@ a u
@end table

@findex emacspeak-m-player-url

@format
Call emacspeak-m-player on  URL.
URL fragment specifies optional start position.

(fn URL &optional PLAYLIST-P)
@end format
@end deffn

@subsubsection emacspeak-m-player-using-hrtf
@deffn {Command} emacspeak-m-player-using-hrtf   
@findex emacspeak-m-player-using-hrtf

@format
Add af resample=48000,hrtf to startup options.
This will work if the soundcard is set to 48000.
@end format
@end deffn

@subsubsection emacspeak-m-player-using-openal
@deffn {Command} emacspeak-m-player-using-openal   
@findex emacspeak-m-player-using-openal

@format
Use openal.  
@end format
@end deffn

@subsubsection emacspeak-m-player-volume-change
@deffn {Command} emacspeak-m-player-volume-change  (value)
@findex emacspeak-m-player-volume-change

@format
Set volume.

(fn VALUE)
@end format
@end deffn

@subsubsection emacspeak-m-player-volume-down
@deffn {Command} emacspeak-m-player-volume-down   
@findex emacspeak-m-player-volume-down

@format
Volume down.
@end format
@end deffn

@subsubsection emacspeak-m-player-volume-set
@deffn {Command} emacspeak-m-player-volume-set  (&optional arg)
@findex emacspeak-m-player-volume-set

@format
Set Volume in steps from 1 to 9.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-m-player-volume-up
@deffn {Command} emacspeak-m-player-volume-up   
@findex emacspeak-m-player-volume-up

@format
Volume up.
@end format
@end deffn

@subsubsection emacspeak-m-player-write-clip
@deffn {Command} emacspeak-m-player-write-clip   
@findex emacspeak-m-player-write-clip

@format
Split selected range using SoX
@end format
@end deffn

@subsubsection emacspeak-multimedia
@deffn {Command} emacspeak-multimedia   
@table @kbd
@item C-e ;
@kindex C-e ;
@end table

@findex emacspeak-multimedia

@format
Start or control Emacspeak multimedia player.
Controls media playback when already playing.

Key             Binding
-------------------------------------------------------------------------------
C-a		emacspeak-amark-browse
C-l		ladspa
SPC		emacspeak-m-player-pause
%		emacspeak-m-player-display-percent
'		emacspeak-m-player-add-loop
(		emacspeak-m-player-left-channel
)		emacspeak-m-player-right-channel
+		emacspeak-m-player-volume-up
,		emacspeak-m-player-backward-10s
-		emacspeak-m-player-volume-down
.		emacspeak-m-player-forward-10s
/		emacspeak-m-player-restore-process
1 .. 9		emacspeak-m-player-volume-set
;		emacspeak-m-player-pop-to-player
<		emacspeak-m-player-backward-1min
=		emacspeak-m-player-volume-up
>		emacspeak-m-player-forward-1min
?		emacspeak-m-player-show-pos
A		emacspeak-m-player-amark-add
C		emacspeak-m-player-clear-filters
E		emacspeak-m-player-add-equalizer
G		emacspeak-m-player-seek-percentage
L		emacspeak-m-player-get-length
M		emacspeak-m-player-show-data
O		emacspeak-m-player-reset-options
P		emacspeak-m-player-apply-reverb
Q		emacspeak-m-player-quit
R		emacspeak-m-player-edit-reverb
S		emacspeak-m-player-amark-save
T		emacspeak-speak-brief-time
[		emacspeak-m-player-slower
\		emacspeak-m-player-persist-process
]		emacspeak-m-player-faster
a		emacspeak-m-player-add-autopan
b		emacspeak-m-player-balance-channels
c		emacspeak-m-player-slave-command
d		emacspeak-m-player-delete-filter
e		emacspeak-m-player-eq-preset
f		emacspeak-m-player-add-filter
g		emacspeak-m-player-seek-absolute
h		emacspeak-m-player-from-history
i		emacspeak-m-player-stream-info
j		emacspeak-m-player-amark-jump
k		emacspeak-m-player-quit
l		emacspeak-m-player-store-link
m		emacspeak-m-player-mode-line
n		emacspeak-m-player-next-track
o		emacspeak-m-player-customize
p		emacspeak-m-player-previous-track
r		emacspeak-m-player-seek-relative
s		emacspeak-m-player-scale-speed
t		emacspeak-m-player-skip-tracks
v		emacspeak-m-player-volume-change
w		emacspeak-m-player-write-clip
x		emacspeak-m-player-pan
z		emacspeak-m-player-add-autosat
@{		emacspeak-m-player-half-speed
@}		emacspeak-m-player-double-speed
DEL		emacspeak-m-player-reset-speed
<down>		emacspeak-m-player-forward-1min
<end>		emacspeak-m-player-end-track
<home>		emacspeak-m-player-start-track
<left>		emacspeak-m-player-backward-10s
<next>		emacspeak-m-player-forward-10min
<prior>		emacspeak-m-player-backward-10min
<right>		emacspeak-m-player-forward-10s
<up>		emacspeak-m-player-backward-1min

M-,		emacspeak-m-player-set-clip-start
M-.		emacspeak-m-player-set-clip-end

@end format
@end deffn

@subsection emacspeak-m-player Options

@defvar {User Option} emacspeak-m-player-clips
Directory where we store clips.

Default Value: 

@verbatim

"/home/raman/mp3/clips"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-m-player-custom-filters
Additional filters to apply to streams.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-media-location-bindings
Map  keys  to launch MPlayer on a  directory.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-mplayer
Media player program.

Default Value: 

@verbatim

"/usr/local/bin/mplayer"

@end verbatim

@end defvar

@node emacspeak-magit
@section emacspeak-magit

MAGIT ==  Git interface in Emacs
git clone git://github.com/magit/magit.git

  Required modules

@node emacspeak-make-mode
@section emacspeak-make-mode

This module speech enables make-mode

@node emacspeak-man
@section emacspeak-man

Provide additional advice to man-mode

@subsection Emacspeak-Man Commands

@subsubsection emacspeak-man-browse-man-page
@deffn {Command} emacspeak-man-browse-man-page   
@findex emacspeak-man-browse-man-page

@format
Browse the man page --read it a paragraph at a time
@end format
@end deffn

@subsubsection emacspeak-man-speak-this-section
@deffn {Command} emacspeak-man-speak-this-section   
@findex emacspeak-man-speak-this-section

@format
Speak current section
@end format
@end deffn

@node emacspeak-markdown
@section emacspeak-markdown

MARKDOWN ==  Light-weight markup.
This module speech-enables markdown.el

  Required modules

@node emacspeak-maths
@section emacspeak-maths

@subsection Setup
Do not try what follows until you have read  js/node/README.org
and successfully set up nvm (Node Version Manager) as described there.
@subsection Technical Overview
Spoken mathematics on the emacspeak audio desktop. Use a NodeJS
based speech-rule-engine for Mathematics as the backend for
processing mathematical markup. The result of this processing is
an annotated S-expression that is rendered via Emacspeak's speech
facilities. Annotations follow Aural CSS as implemented in
Emacspeak, This allows us to map these expressions to aural
properties supported by specific TTS engines.

Start  the server/client: M-x emacspeak-maths-start. Once the server
and client are started, you can browse any number of math
expressions using the emacspeak-maths-navigator defined in module
@xref{emacspeak-maths} as described below.

Note: In general, once everything is configured correctly, using
the maths navigator automatically starts the server and
client. Invoke the Navigator using @kbd{s-spc} --- this is the <windows>
key on Linux laptops.
Linux. Now you can use these keys:
@itemize
@item  Show Output <o> Switch to output buffer and quit Maths Navigator
@item Enter: <SPC>
Enter a LaTeX expression.
@item Smart-Enter: <enter> Enter the guessed expression with no prompting.
@item Alt-Text <a> Process alt-text
under point as LaTeX.
@item Down <down> Move down a level.
@item
Up <up> Move up a level.
@item Left <left> Move left.
@item Right
<right> Move right.
@item Exit <any other key> Exit
navigator.

@end itemize
The current expression is spoken after
each of the above commands. It is also displayed in a special
buffer *Spoken Math*. That buffer holds all previously generated
output, And Emacs commands forward-page and backward-page can be
used to move through each chunk of output.

@subsection Emacspeak-Maths Commands

@subsubsection emacspeak-maths-depth
@deffn {Command} emacspeak-maths-depth   
@findex emacspeak-maths-depth

@format
Move depth in current Math expression. (auto-generated)
@end format
@end deffn

@subsubsection emacspeak-maths-down
@deffn {Command} emacspeak-maths-down   
@findex emacspeak-maths-down

@format
Move down in current Math expression. (auto-generated)
@end format
@end deffn

@subsubsection emacspeak-maths-enter
@deffn {Command} emacspeak-maths-enter  (latex)
@findex emacspeak-maths-enter

@format
Send a LaTeX expression to Maths server,
 guess  based on context. 
@end format
@end deffn

@subsubsection emacspeak-maths-enter-guess
@deffn {Command} emacspeak-maths-enter-guess   
@findex emacspeak-maths-enter-guess

@format
Send the guessed  LaTeX expression to Maths server. 
@end format
@end deffn

@subsubsection emacspeak-maths-flush-output
@deffn {Command} emacspeak-maths-flush-output   
@findex emacspeak-maths-flush-output

@format
Flush client buffer if things go out of sync.
@end format
@end deffn

@subsubsection emacspeak-maths-left
@deffn {Command} emacspeak-maths-left   
@findex emacspeak-maths-left

@format
Move left in current Math expression. (auto-generated)
@end format
@end deffn

@subsubsection emacspeak-maths-restart
@deffn {Command} emacspeak-maths-restart   
@findex emacspeak-maths-restart

@format
Restart Node math-server if running. Otherwise starts a new one.
@end format
@end deffn

@subsubsection emacspeak-maths-right
@deffn {Command} emacspeak-maths-right   
@findex emacspeak-maths-right

@format
Move right in current Math expression. (auto-generated)
@end format
@end deffn

@subsubsection emacspeak-maths-root
@deffn {Command} emacspeak-maths-root   
@findex emacspeak-maths-root

@format
Move root in current Math expression. (auto-generated)
@end format
@end deffn

@subsubsection emacspeak-maths-shutdown
@deffn {Command} emacspeak-maths-shutdown   
@findex emacspeak-maths-shutdown

@format
Shutdown client and server processes.
@end format
@end deffn

@subsubsection emacspeak-maths-speak-alt
@deffn {Command} emacspeak-maths-speak-alt   
@findex emacspeak-maths-speak-alt

@format
Speak alt text as Maths.
For use on Wikipedia pages  for example.
@end format
@end deffn

@subsubsection emacspeak-maths-spoken-mode
@deffn {Command} emacspeak-maths-spoken-mode   
@findex emacspeak-maths-spoken-mode

@format
Special mode for interacting with Spoken Math.

This mode is used by the special buffer that displays spoken math
returned from the Node server.
This mode is similar to Emacs’ ‘view-mode’.
see the key-binding list at the end of this description.
Emacs online help facility to look up help on these commands.

Key             Binding
-------------------------------------------------------------------------------
[		backward-page
]		forward-page
h		emacspeak-maths-left
j		emacspeak-maths-down
k		emacspeak-maths-up
l		emacspeak-maths-right

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-maths-spoken-mode-hook’, as
the final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-maths-start
@deffn {Command} emacspeak-maths-start   
@findex emacspeak-maths-start

@format
Start Maths server bridge.
@end format
@end deffn

@subsubsection emacspeak-maths-switch-to-output
@deffn {Command} emacspeak-maths-switch-to-output   
@findex emacspeak-maths-switch-to-output

@format
Switch to output buffer.
@end format
@end deffn

@subsubsection emacspeak-maths-up
@deffn {Command} emacspeak-maths-up   
@findex emacspeak-maths-up

@format
Move up in current Math expression. (auto-generated)
@end format
@end deffn

@node emacspeak-message
@section emacspeak-message

advice for posting message commands

@subsection emacspeak-message Options

@defvar {User Option} emacspeak-message-punctuation-mode
Pronunciation mode to use for message buffers.

Default Value: 

@verbatim

all

@end verbatim

@end defvar

@node emacspeak-metapost
@section emacspeak-metapost

Speech-enables metapost mode.
metapost is a powerful drawing package
typically installed as mpost by modern TeX
installations.

  completion

@node emacspeak-midge
@section emacspeak-midge

This module speech enables  midge.
Midge is a MIDI composer/editor tool.
From the package README file:
Midge, for midi generator, is a text to midi translator.
It creates type 1 (ie multitrack) midi files from text
descriptions of music. It is a single perl script, which
does not require any additional modules.
The package also provides a convenient emacs mode for
editing and playing  midge files.
Midge's homepage is at:
http://www.dmriley.demon.co.uk/code/midge/

@node emacspeak-mines
@section emacspeak-mines

MINES == Minesweeper game in emacs. The game itself provides a
fully keyboard driven interface. In addition, Emacspeak provides
these additional interactive commands:
@itemize @bullet
@item @kbd{SPC} Speak current cell.
@item @kbd{.} Speak neighbors of current cell.
@item @kbd{,} Speak number of marks
@item @kbd{a} Move to beginning of row.
@item @kbd{e} Move to end of row.
@item @kbd{g} Move to specified cell
@item @kbd{s} Move to next uncovered cell.
@item @kbd{/} Speak number of remaining uncovered cells.
@item @kbd{'} Speaks entire board.
@end itemize

Speaking cell neighbors uses appropriate clause boundaries to group
related cells --- neighbors are read left-to-right, top-to-bottom.
Moving to the left/right edge of the board produces an appropriate
auditory icon.

@subsection Emacspeak-Mines Commands

@subsubsection emacspeak-mines-beginning-of-row
@deffn {Command} emacspeak-mines-beginning-of-row   
@findex emacspeak-mines-beginning-of-row

@format
Move to beginning of row
@end format
@end deffn

@subsubsection emacspeak-mines-end-of-row
@deffn {Command} emacspeak-mines-end-of-row   
@findex emacspeak-mines-end-of-row

@format
Move to end of row
@end format
@end deffn

@subsubsection emacspeak-mines-goto
@deffn {Command} emacspeak-mines-goto  (index)
@findex emacspeak-mines-goto

@format
Move to specified cell.

(fn INDEX)
@end format
@end deffn

@subsubsection emacspeak-mines-jump-to-uncovered-cell
@deffn {Command} emacspeak-mines-jump-to-uncovered-cell  (from-beginning)
@findex emacspeak-mines-jump-to-uncovered-cell

@format
Jump to next uncovered cell. With interactive prefix-arg, jump
to beginning of board before searching.

(fn FROM-BEGINNING)
@end format
@end deffn

@subsubsection emacspeak-mines-speak-board
@deffn {Command} emacspeak-mines-speak-board   
@findex emacspeak-mines-speak-board

@format
Speak the board.
@end format
@end deffn

@subsubsection emacspeak-mines-speak-cell
@deffn {Command} emacspeak-mines-speak-cell   
@findex emacspeak-mines-speak-cell

@format
Speak current cell.
@end format
@end deffn

@subsubsection emacspeak-mines-speak-mark-count
@deffn {Command} emacspeak-mines-speak-mark-count   
@findex emacspeak-mines-speak-mark-count

@format
Count and speak number of marks.
@end format
@end deffn

@subsubsection emacspeak-mines-speak-neighbors
@deffn {Command} emacspeak-mines-speak-neighbors   
@findex emacspeak-mines-speak-neighbors

@format
Speak neighboring cells in sorted order.
@end format
@end deffn

@subsubsection emacspeak-mines-speak-uncovered-count
@deffn {Command} emacspeak-mines-speak-uncovered-count   
@findex emacspeak-mines-speak-uncovered-count

@format
Speak number of uncovered cells.
@end format
@end deffn

@node emacspeak-mspools
@section emacspeak-mspools

Speech-enable  mspools --a package that lets you monitor
multiple maildrops

@node emacspeak-muggles
@section emacspeak-muggles

MUGGLES ==  Emacspeak spells for power-users.
This module implements no new functionality --- contrast with
emacspeak-wizards.  Instead, it uses package hydra to provide
convenience key-bindings that access existing Emacspeak
functionality.
You need to install package Hydra first:
@samp{M-x package-install  hydra}.

Note that on newer versions of Emacs, loading this module will
attempt to automatically install package hydra if it is not found.
@subsection Using Hydras
See the high-level documentation for the Hydra package by executing
@kbd {C-h C-j } hydra @kbd{RET}.
The documentation in this section uses the same terminology as
shown in the hydra package documentation.

@subsection Implemented Muggles

@itemize
@item Brightness: @kbd{print} Control display brightness using light.
@item Navigate: @kbd{s-n} Navigate with ease.
@item  org-mode tables: @kbd{C-c t} Table UI for org-mode tables.
@item hideshow: C-, h Provide HideShow bindings.
@item toggle-option:  @kbd{C-c o} Single binding for toggling options.
@item Repeatable-Yank: @kbd{C-y} Smart yank
@item undo-only/undo-redo: @kbd{C-/ } Undo-only on @kbd{/} and
undo-redo on @kbd{\}
@item emacspeak-maths @kbd{s-SPC} Speak and browse math.
@end itemize

Emacspeak automatically speaks Hydra hints when displayed.
To silence all Hydra hints, set hydra-is-helpful to nil.  To
temporarily silence speaking of Hydra hints, Muggles can bind
command @code{emacspeak-hydra-toggle-talkative}.  As an
example, Muggle @samp{ViewMode} binds @code{s} to this command.

@subsection Emacspeak-Muggles Commands

@subsubsection emacspeak-muggles-brightness/body
@deffn {Command} emacspeak-muggles-brightness/body   
@table @kbd
@item s-.
@kindex s-.
@item <print>
@kindex <print>
@end table

@findex emacspeak-muggles-brightness/body

@format
Call the body in the "emacspeak-muggles-brightness" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-brightness")’,
"b":    ‘emacspeak-brightness-alert-toggle’,
"s":    ‘light-set’,
"g":    ‘light-get’,
"t":    ‘emacspeak-hydra-toggle-talkative’,
"<print>":    ‘light-black’,
"s-.":    ‘light-black’,
".":    ‘light-black’,
"0":    ‘light-black’,
"1":    ‘light-white’,
"d":    ‘light-decrement’,
"i":    ‘light-increment’,
"SPC":    ‘light-increment’

The body can be accessed via ‘emacspeak-muggles-brightness/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-hideshow/body
@deffn {Command} emacspeak-muggles-hideshow/body   
@table @kbd
@item C-, h
@kindex C-, h
@item C-x @@ a h
@kindex C-x @@ a h
@end table

@findex emacspeak-muggles-hideshow/body

@format
Call the body in the "emacspeak-muggles-hideshow" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-hideshow")’,
"h":    ‘hs-hide-block’,
"s":    ‘hs-show-block’,
"H":    ‘hs-hide-all’,
"S":    ‘hs-show-all’,
"a":    ‘hs-show-all’,
"l":    ‘hs-hide-level’,
"i":    ‘hs-hide-initial-comment-block’

The body can be accessed via ‘emacspeak-muggles-hideshow/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-ido-yank
@deffn {Command} emacspeak-muggles-ido-yank   
@table @kbd
@item C-M-y
@kindex C-M-y
@end table

@findex emacspeak-muggles-ido-yank

@format
Pick what to yank using ido completion.
@end format
@end deffn

@subsubsection emacspeak-muggles-lispy-or-sp
@deffn {Command} emacspeak-muggles-lispy-or-sp   
@findex emacspeak-muggles-lispy-or-sp

@format
Toggle between lispy and smartparens.
@end format
@end deffn

@subsubsection emacspeak-muggles-maths-navigator/body
@deffn {Command} emacspeak-muggles-maths-navigator/body   
@table @kbd
@item s-SPC
@kindex s-SPC
@end table

@findex emacspeak-muggles-maths-navigator/body

@format
Call the body in the "emacspeak-muggles-maths-navigator" hydra.

The heads for the associated hydra are:

"o":    ‘emacspeak-maths-switch-to-output’,
"RET":    ‘emacspeak-maths-enter-guess’,
"SPC":    ‘emacspeak-maths-enter’,
"a":    ‘emacspeak-maths-speak-alt’,
"d":    ‘emacspeak-maths-depth’,
"r":    ‘emacspeak-maths-root’,
"<up>":    ‘emacspeak-maths-up’,
"<down>":    ‘emacspeak-maths-down’,
"<left>":    ‘emacspeak-maths-left’,
"<right>":    ‘emacspeak-maths-right’

The body can be accessed via ‘emacspeak-muggles-maths-navigator/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-navigate/body
@deffn {Command} emacspeak-muggles-navigate/body   
@table @kbd
@item s-n
@kindex s-n
@end table

@findex emacspeak-muggles-navigate/body

@format
Call the body in the "emacspeak-muggles-navigate" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-navigate")’,
"s":    ‘emacspeak-hydra-toggle-talkative’,
"n":    ‘next-line’,
"p":    ‘previous-line’,
"f":    ‘forward-char’,
"b":    ‘backward-char’,
"a":    ‘beginning-of-line’,
"e":    ‘move-end-of-line’,
"j":    ‘next-line’,
"k":    ‘previous-line’,
"v":    ‘scroll-up-command’,
"V":    ‘scroll-down-command’,
"l":    ‘recenter-top-bottom’,
"<":    ‘beginning-of-buffer’,
">":    ‘end-of-buffer’

The body can be accessed via ‘emacspeak-muggles-navigate/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-org-table/body
@deffn {Command} emacspeak-muggles-org-table/body   
@findex emacspeak-muggles-org-table/body

@format
Call the body in the "emacspeak-muggles-org-table" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-org-table")’,
"j":    ‘org-table-next-row’,
"k":    ‘org-table-previous-row’,
"h":    ‘org-table-previous-field’,
"l":    ‘org-table-next-field’,
"SPC":    ‘emacspeak-org-table-speak-current-element’,
".":    ‘emacspeak-org-table-speak-coordinates’,
"b":    ‘emacspeak-org-table-speak-both-headers-and-element’,
"r":    ‘emacspeak-org-table-speak-row-header-and-element’,
"c":    ‘emacspeak-org-table-speak-column-header-and-element’

The body can be accessed via ‘emacspeak-muggles-org-table/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-toggle-option/body
@deffn {Command} emacspeak-muggles-toggle-option/body   
@table @kbd
@item C-c o
@kindex C-c o
@end table

@findex emacspeak-muggles-toggle-option/body

@format
Call the body in the "emacspeak-muggles-toggle-option" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-toggle-option")’,
"a":    ‘(call-interactively #’abbrev-mode)’,
"d":    ‘(call-interactively #’toggle-debug-on-error)’,
"g":    ‘(call-interactively #’toggle-debug-on-quit)’,
"h":    ‘(setq hydra-is-helpful (not hydra-is-helpful))’,
"p":    ‘emacspeak-muggles-lispy-or-sp’,
"q":    nil

The body can be accessed via ‘emacspeak-muggles-toggle-option/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-undo-only/undo-redo/body
@deffn {Command} emacspeak-muggles-undo-only/undo-redo/body   
@table @kbd
@item C-/
@kindex C-/
@end table

@findex emacspeak-muggles-undo-only/undo-redo/body

@format
Call the body in the "emacspeak-muggles-undo-only/undo-redo" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-undo-only/undo-redo")’,
"/":    ‘undo-only’,
"\":    ‘undo-redo’

The body can be accessed via ‘emacspeak-muggles-undo-only/undo-redo/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-yank-pop/body
@deffn {Command} emacspeak-muggles-yank-pop/body   
@findex emacspeak-muggles-yank-pop/body

@format
Call the body in the "emacspeak-muggles-yank-pop" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-yank-pop")’,
"C-y":    ‘yank’,
"M-y":    ‘yank-pop’,
"y":    ‘(funcall-interactively #’yank-pop 1)’,
"Y":    ‘(funcall-interactively #’yank-pop -1)’,
"i":    ‘emacspeak-muggles-ido-yank’,
"s":    ‘emacspeak-muggles-ido-yank’,
"l":    ‘browse-kill-ring’

The body can be accessed via ‘emacspeak-muggles-yank-pop/body’.
@end format
@end deffn

@node emacspeak-muse
@section emacspeak-muse

Speech enable Muse
  Required modules

@node emacspeak-net-utils
@section emacspeak-net-utils

This module speech enables net-utils
 requires

@node emacspeak-newsticker
@section emacspeak-newsticker

Newsticker provides a continuously updating newsticker using
RSS
Provides functionality similar to amphetadesk --but in pure elisp

 required modules

@node emacspeak-notmuch
@section emacspeak-notmuch

NOTMUCH ==  Emacs interface to notmuch mail

@node emacspeak-nov
@section emacspeak-nov

NOV == Yet Another EPub Reader
Package nov.el is an alternative to Emacspeak's built-in EPub
reader.
This module speech-enables nov.el
In addition, opening an epub using nov results in
directory-specific settings being loaded from file
@var{emacspeak-speak-directory-settings} ---
 That file can set book-specific settings such as speech-rate and
punctuation-mode among others.

@node emacspeak-nxml
@section emacspeak-nxml

nxml-mode is a new XML mode for emacs by James Clark.
 Package nxml is available from the Emacs package archive.

@subsection Emacspeak-Nxml Commands

@subsubsection emacspeak-nxml-summarize-outline
@deffn {Command} emacspeak-nxml-summarize-outline   
@findex emacspeak-nxml-summarize-outline

@format
Intelligent spoken display of current outline entry.
@end format
@end deffn

@node emacspeak-ocr
@section emacspeak-ocr

This module defines Emacspeak front-end to OCR.
This module assumes that sane is installed and working
for image acquisition,
and that there is an OCR engine that can take acquired
images and produce text.

@subsection Emacspeak-Ocr Commands

@subsubsection emacspeak-ocr
@deffn {Command} emacspeak-ocr   
@table @kbd
@item C-e C-o
@kindex C-e C-o
@end table

@findex emacspeak-ocr

@format
An OCR front-end for the Emacspeak desktop.  

Page image is acquired using tools from the SANE package.
The acquired image is run through the OCR engine if one is
available, and the results placed in a buffer that is
suitable for browsing the results.

For detailed help, invoke command emacspeak-ocr bound to
C-e C-o to launch emacspeak-ocr-mode, and press
‘?’ to display mode-specific help for emacspeak-ocr-mode.
@end format
@end deffn

@subsubsection emacspeak-ocr-backward-page
@deffn {Command} emacspeak-ocr-backward-page  (&optional count-ignored)
@findex emacspeak-ocr-backward-page

@format
Like backward page, but tracks page number of current document.

(fn &optional COUNT-IGNORED)
@end format
@end deffn

@subsubsection emacspeak-ocr-customize
@deffn {Command} emacspeak-ocr-customize   
@findex emacspeak-ocr-customize

@format
Customize OCR settings.
@end format
@end deffn

@subsubsection emacspeak-ocr-flipflop-and-recognize-image
@deffn {Command} emacspeak-ocr-flipflop-and-recognize-image   
@findex emacspeak-ocr-flipflop-and-recognize-image

@format
Run OCR engine on current image after flip-flopping it.
Useful if you’ve scanned a page upside down and are using an
engine that does not automatically flip the image for you.  You
need the imagemagik family of tools --- we use mogrify to
transform the image.  Prompts for image file if file
corresponding to the expected ‘current page’ is not found.
@end format
@end deffn

@subsubsection emacspeak-ocr-forward-page
@deffn {Command} emacspeak-ocr-forward-page  (&optional count-ignored)
@findex emacspeak-ocr-forward-page

@format
Like forward page, but tracks page number of current document.

(fn &optional COUNT-IGNORED)
@end format
@end deffn

@subsubsection emacspeak-ocr-mode
@deffn {Command} emacspeak-ocr-mode   
@findex emacspeak-ocr-mode

@format
 An OCR front-end for the Emacspeak desktop.

Pre-requisites:

1) A working scanner back-end like SANE on Linux.

2) An OCR engine.

1: Make sure your scanner back-end works, and that you have
the utilities to scan a document and acquire an image as a
tiff file.  Then set variable
emacspeak-ocr-scan-image-program to point at this utility.
By default, this is set to ‘scanimage’ which is the image
scanning utility provided by SANE.

By default, this front-end attempts to compress the acquired
tiff image; make sure you have a utility like tiffcp.
Variable emacspeak-ocr-compress-image is set to ‘tiffcp’ by
default; if you use something else, you should customize
this variable.

2: Next, make sure you have an OCR engine installed and
working.  By default this front-end assumes that OCR is
available as /usr/bin/ocr.

Once you have ensured that acquiring an image and applying
OCR to it work independently of Emacs, you can use this
Emacspeak front-end to enable easy OCR access from within
Emacspeak.

The Emacspeak OCR front-end is launched by command
emacspeak-ocr bound to C-e C-o.  

This command switches to a special buffer that has OCR
commands bounds to single keystrokes-- see the key-binding
list at the end of this description.  Use Emacs online help
facility to look up help on these commands.

emacspeak-ocr-mode provides the necessary functionality to
scan, OCR, read and save documents.  By default, scanned
images and the resulting text are saved under directory
~/ocr; see variable emacspeak-ocr-working-directory.
Invoking command emacspeak-ocr-open-working-directory bound
to M-x emacspeak-ocr-open-working-directory will open this directory.

By default, the document being scanned is named ‘untitled’.
You can name the document by using command
emacspeak-ocr-name-document bound to
M-x emacspeak-ocr-name-document.  The document name is used
in constructing the name of the image and text files.

Key Bindings: 

See 
Key             Binding
-------------------------------------------------------------------------------
RET		emacspeak-ocr-scan-and-recognize
SPC		emacspeak-ocr-read-current-page
1 .. 9		emacspeak-ocr-page
?		describe-mode
C		emacspeak-ocr-set-compress-image-options
I		emacspeak-ocr-set-scan-image-options
[		emacspeak-ocr-backward-page
]		emacspeak-ocr-forward-page
c		emacspeak-ocr-customize
d		emacspeak-ocr-open-working-directory
f		emacspeak-ocr-flipflop-and-recognize-image
i		emacspeak-ocr-scan-image
j		emacspeak-ocr-scan-photo
n		emacspeak-ocr-name-document
o		emacspeak-ocr-recognize-image
p		emacspeak-ocr-page
q		bury-buffer
s		emacspeak-ocr-save-current-page
w		emacspeak-ocr-write-document
.

In addition to any hooks its parent mode ‘text-mode’ might have run,
this mode runs the hook ‘emacspeak-ocr-mode-hook’, as the final or
penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-ocr-name-document
@deffn {Command} emacspeak-ocr-name-document  (name)
@findex emacspeak-ocr-name-document

@format
Name document being scanned in the current OCR buffer.
Pick a short but meaningful name.

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-ocr-open-working-directory
@deffn {Command} emacspeak-ocr-open-working-directory   
@findex emacspeak-ocr-open-working-directory

@format
Launch dired on OCR working directory.
@end format
@end deffn

@subsubsection emacspeak-ocr-page
@deffn {Command} emacspeak-ocr-page   
@findex emacspeak-ocr-page

@format
Move to specified page.
@end format
@end deffn

@subsubsection emacspeak-ocr-read-current-page
@deffn {Command} emacspeak-ocr-read-current-page   
@findex emacspeak-ocr-read-current-page

@format
Speaks current page.
@end format
@end deffn

@subsubsection emacspeak-ocr-recognize-image
@deffn {Command} emacspeak-ocr-recognize-image   
@findex emacspeak-ocr-recognize-image

@format
Run OCR engine on current image.
Prompts for image file if file corresponding to the expected
‘current page’ is not found.
@end format
@end deffn

@subsubsection emacspeak-ocr-save-current-page
@deffn {Command} emacspeak-ocr-save-current-page   
@findex emacspeak-ocr-save-current-page

@format
Writes out recognized text from current page
to an appropriately named file.
@end format
@end deffn

@subsubsection emacspeak-ocr-scan-and-recognize
@deffn {Command} emacspeak-ocr-scan-and-recognize   
@findex emacspeak-ocr-scan-and-recognize

@format
Scan in a page and run OCR engine on it.
Use this command once you’ve verified that the separate
steps of acquiring an image and running the OCR engine work
correctly by themselves.
@end format
@end deffn

@subsubsection emacspeak-ocr-scan-image
@deffn {Command} emacspeak-ocr-scan-image   
@findex emacspeak-ocr-scan-image

@format
Acquire page image.
@end format
@end deffn

@subsubsection emacspeak-ocr-scan-photo
@deffn {Command} emacspeak-ocr-scan-photo  (&optional metadata)
@findex emacspeak-ocr-scan-photo

@format
Scan in a photograph.
The scanned image is converted to JPEG.

(fn &optional METADATA)
@end format
@end deffn

@subsubsection emacspeak-ocr-set-compress-image-options
@deffn {Command} emacspeak-ocr-set-compress-image-options  (setting)
@findex emacspeak-ocr-set-compress-image-options

@format
Interactively update  image compression options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.

(fn SETTING)
@end format
@end deffn

@subsubsection emacspeak-ocr-set-scan-image-options
@deffn {Command} emacspeak-ocr-set-scan-image-options  (setting)
@findex emacspeak-ocr-set-scan-image-options

@format
Interactively update scan image options.
Prompts with current setting in the minibuffer.
Setting persists for current Emacs session.

(fn SETTING)
@end format
@end deffn

@subsubsection emacspeak-ocr-write-document
@deffn {Command} emacspeak-ocr-write-document   
@findex emacspeak-ocr-write-document

@format
Writes out recognized text from all pages in current document.
@end format
@end deffn

@subsection emacspeak-ocr Options

@defvar {User Option} emacspeak-ocr-compress-image
Command used to compress the scanned tiff file.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-compress-image-options
Options used for compressing tiff image.

Default Value: 

@verbatim

"-c g3 "

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-compress-photo-options
Options used when created JPEG from  scanned photographs.

Default Value: 

@verbatim

"-optimize -progressive"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-engine
OCR engine to process acquired image.

Default Value: 

@verbatim

"/home/raman/emacs/lisp/emacspeak/etc/tesseract.pl"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-engine-options
Command line options to pass to OCR engine.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-image-extension
Filename extension used for acquired image.

Default Value: 

@verbatim

".tif"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-jpeg-metadata-writer
Program to add metadata to JPEG files.

Default Value: 

@verbatim

"wrjpgcom"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-keep-uncompressed-image
If set to T, uncompressed image is not removed.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-photo-compress
Program to create JPEG compressed images.

Default Value: 

@verbatim

"cjpeg"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-scan-image
Name of image acquisition program.

Default Value: 

@verbatim

"scanimage"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-scan-image-options
Command line options to pass to image acquisition program.

Default Value: 

@verbatim

"--resolution 300 --mode lineart --format=tiff"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-scan-photo-options
Options  used when scanning in photographs.

Default Value: 

@verbatim

"--mode color --format=pnm"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-ocr-working-directory
Directory where images and OCR results
will be placed.

Default Value: 

@verbatim

"/home/raman/.emacspeak/ocr/"

@end verbatim

@end defvar

@node emacspeak-org
@section emacspeak-org

Speech-enable org ---
 Org allows you to keep organized notes and todo lists.
Homepage: http://www.astro.uva.nl/~dominik/Tools/org/
or http://orgmode.org/

@subsection Emacspeak-Org Commands

@subsubsection emacspeak-org-amarks-play
@deffn {Command} emacspeak-org-amarks-play   
@findex emacspeak-org-amarks-play

@format
Loop through and play list of Amarks from org buffer.
Hit C-g to break out of the loop.
Press ‘y’ to play to next amark.
@end format
@end deffn

@subsubsection emacspeak-org-capture-link
@deffn {Command} emacspeak-org-capture-link  (&optional open)
@table @kbd
@item C-. h
@kindex C-. h
@item C-x @@ s h
@kindex C-x @@ s h
@end table

@findex emacspeak-org-capture-link

@format
Capture hyperlink to current context.
To use this command, first do ‘customize-variable’
‘org-capture-template’ and assign letter ‘h’ to a template that
creates the hyperlink on capture.  Optional interactive prefix
arg just opens the file

(fn &optional OPEN)
@end format
@end deffn

@subsubsection emacspeak-org-popup-input
@deffn {Command} emacspeak-org-popup-input   
@findex emacspeak-org-popup-input

@format
Pops up an org input area.
@end format
@end deffn

@subsubsection emacspeak-org-popup-input-buffer
@deffn {Command} emacspeak-org-popup-input-buffer  (mode)
@findex emacspeak-org-popup-input-buffer

@format
Provide an input buffer in a specified mode.

(fn MODE)
@end format
@end deffn

@subsubsection emacspeak-org-speak-item
@deffn {Command} emacspeak-org-speak-item   
@findex emacspeak-org-speak-item

@format
Speak item
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-both-headers-and-element
@deffn {Command} emacspeak-org-table-speak-both-headers-and-element   
@findex emacspeak-org-table-speak-both-headers-and-element

@format
echoes both row and col headers.
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-column-header
@deffn {Command} emacspeak-org-table-speak-column-header   
@findex emacspeak-org-table-speak-column-header

@format
echoes column header
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-column-header-and-element
@deffn {Command} emacspeak-org-table-speak-column-header-and-element   
@findex emacspeak-org-table-speak-column-header-and-element

@format
echoes col header and element
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-coordinates
@deffn {Command} emacspeak-org-table-speak-coordinates   
@findex emacspeak-org-table-speak-coordinates

@format
echoes coordinates
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-current-element
@deffn {Command} emacspeak-org-table-speak-current-element   
@findex emacspeak-org-table-speak-current-element

@format
echoes current table element
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-row-header
@deffn {Command} emacspeak-org-table-speak-row-header   
@findex emacspeak-org-table-speak-row-header

@format
echoes row header
@end format
@end deffn

@subsubsection emacspeak-org-table-speak-row-header-and-element
@deffn {Command} emacspeak-org-table-speak-row-header-and-element   
@findex emacspeak-org-table-speak-row-header-and-element

@format
echoes row header and element
@end format
@end deffn

@subsection emacspeak-org Options

@defvar {User Option} emacspeak-org-hotlist
Emacspeak org hotlist location.

Default Value: 

@verbatim

"/home/raman/.org/hotlist.org"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-org-table-after-movement-function
The function to call after moving in a table

Default Value: 

@verbatim

emacspeak-org-table-speak-current-element

@end verbatim

@end defvar

@node emacspeak-orgalist
@section emacspeak-orgalist

Speech-enable orgalist --- create org-like lists everywhere.

@node emacspeak-origami
@section emacspeak-origami

ORIGAMI ==  One More Flexible Folding Mechanism
This module speech-enables origami-mode.

@node emacspeak-outline
@section emacspeak-outline

Provide additional advice to outline-mode

@subsection Emacspeak-Outline Commands

@subsubsection emacspeak-outline-speak-backward-heading
@deffn {Command} emacspeak-outline-speak-backward-heading   
@findex emacspeak-outline-speak-backward-heading

@format
Analogous to outline-backward-same-level
except that the outline section is  spoken
@end format
@end deffn

@subsubsection emacspeak-outline-speak-forward-heading
@deffn {Command} emacspeak-outline-speak-forward-heading   
@findex emacspeak-outline-speak-forward-heading

@format
Analogous to outline-forward-same-level,
except that the outline section is  spoken
@end format
@end deffn

@subsubsection emacspeak-outline-speak-next-heading
@deffn {Command} emacspeak-outline-speak-next-heading   
@findex emacspeak-outline-speak-next-heading

@format
Analogous to outline-next-visible-heading,
except that the outline section is  spoken
@end format
@end deffn

@subsubsection emacspeak-outline-speak-previous-heading
@deffn {Command} emacspeak-outline-speak-previous-heading   
@findex emacspeak-outline-speak-previous-heading

@format
Analogous to outline-previous-visible-heading,
except that the outline section is  spoken
@end format
@end deffn

@subsubsection emacspeak-outline-speak-this-heading
@deffn {Command} emacspeak-outline-speak-this-heading   
@findex emacspeak-outline-speak-this-heading

@format
Speak current outline section starting from point
@end format
@end deffn

@node emacspeak-package
@section emacspeak-package

PACKAGE == package.el
Manage Emacs packages.
This module speech-enables package.el with a few convenience commands.

  Required modules

@subsection Emacspeak-Package Commands

@subsubsection emacspeak-package-next-line
@deffn {Command} emacspeak-package-next-line   
@findex emacspeak-package-next-line

@format
Move to next line and speak it.
@end format
@end deffn

@subsubsection emacspeak-package-previous-line
@deffn {Command} emacspeak-package-previous-line   
@findex emacspeak-package-previous-line

@format
Move to next line and speak it.
@end format
@end deffn

@subsubsection emacspeak-package-summarize-line
@deffn {Command} emacspeak-package-summarize-line   
@findex emacspeak-package-summarize-line

@format
Succinct Summary.
@end format
@end deffn

@node emacspeak-paradox
@section emacspeak-paradox

PARADOX == paradox.el Improved package management interface
Manage Emacs packages.
This module speech-enables paradox.el with a few convenience commands.

  Required modules

@subsection Emacspeak-Paradox Commands

@subsubsection emacspeak-paradox-summarize-line
@deffn {Command} emacspeak-paradox-summarize-line   
@findex emacspeak-paradox-summarize-line

@format
Succinct Summary.
@end format
@end deffn

@node emacspeak-perl
@section emacspeak-perl

Provide additional advice to perl-mode

@node emacspeak-pianobar
@section emacspeak-pianobar

@subsection PIANOBAR ==  Pandora Client for Emacs
pianobar git://github.com/PromyLOPh/pianobar.git Ubuntu/Debian:
sudo apt-get install pianobar

Pianobar Is a stand-alone client for Pandora Radio. pianobar.el
available on the Emacs Wiki at
http://www.emacswiki.org/emacs/pianobar.el Provides access to
Pandora Radio via pianobar from the comfort of Emacs. This module
speech-enables Pianobar and enhances it for the Complete Audio
Desktop.

@subsection Emacspeak Usage:

Emacspeak implements command emacspeak-pianobar, a light-weight
wrapper on top of pianobar. Emacspeak binds this command to
@code{C-' '}.
 Command emacspeak-pianobar is designed to let you
launch Pandora channels and switch tracks/channels without moving
away from your primary tasks such as editing code or
reading/composing email. Toward this end, launching command
emacspeak-pianobar the first time initializes the
@code{*pianobar*} buffer and launches command @code{pianobar};
but focus  remains   in your current buffer. Pianobar can be
controlled with single keystrokes while in  the pianobar  buffer
--- switch to   using @code{C-e ''}. The most
useful keys are @code{right} for skipping tracks, @code{up} and
@code{down} for switching channels etc.; see the keys bound in
@code{pianobar-key-map} for a complete list. Pressing @code{C-e '}
in  the @code{*pianobar*} buffer  buries the
@code{*pianobar*}. From here on, Pianobar can be controlled
by pressing the Pianobar prefix key (@code{C-e '}) followed by
keys from @code{pianobar-key-map}.

@subsection Emacspeak-Pianobar Commands

@subsubsection emacspeak-pianobar
@deffn {Command} emacspeak-pianobar   
@table @kbd
@item C-e C-'
@kindex C-e C-'
@item C-' '
@kindex C-' '
@item C-e y p
@kindex C-e y p
@end table

@findex emacspeak-pianobar

@format
Start or control Emacspeak Pianobar player.
@end format
@end deffn

@subsubsection emacspeak-pianobar-command
@deffn {Command} emacspeak-pianobar-command  (key)
@findex emacspeak-pianobar-command

@format
Invoke Pianobar  commands.

(fn KEY)
@end format
@end deffn

@subsubsection emacspeak-pianobar-electric-mode-toggle
@deffn {Command} emacspeak-pianobar-electric-mode-toggle   
@findex emacspeak-pianobar-electric-mode-toggle

@format
Toggle electric mode in pianobar buffer.
If electric mode is on, keystrokes invoke pianobar commands directly.
@end format
@end deffn

@subsubsection emacspeak-pianobar-next-preset
@deffn {Command} emacspeak-pianobar-next-preset   
@findex emacspeak-pianobar-next-preset

@format
Switch to next preset.
@end format
@end deffn

@subsubsection emacspeak-pianobar-previous-preset
@deffn {Command} emacspeak-pianobar-previous-preset   
@findex emacspeak-pianobar-previous-preset

@format
Switch to previous preset.
@end format
@end deffn

@subsubsection emacspeak-pianobar-send-raw
@deffn {Command} emacspeak-pianobar-send-raw  (string)
@findex emacspeak-pianobar-send-raw

@format
Send raw string with newline added to pianobar.

(fn STRING)
@end format
@end deffn

@subsubsection emacspeak-pianobar-switch-to-preset
@deffn {Command} emacspeak-pianobar-switch-to-preset   
@findex emacspeak-pianobar-switch-to-preset

@format
Switch to one of the  presets.
@end format
@end deffn

@subsubsection emacspeak-pianobar-volume-down
@deffn {Command} emacspeak-pianobar-volume-down   
@findex emacspeak-pianobar-volume-down

@format
Decrease volume
@end format
@end deffn

@subsubsection emacspeak-pianobar-volume-up
@deffn {Command} emacspeak-pianobar-volume-up   
@findex emacspeak-pianobar-volume-up

@format
Increase volume
@end format
@end deffn

@node emacspeak-pipewire
@section emacspeak-pipewire

PIPEWIRE ==  Pipewire Interaction from Emacs.

@node emacspeak-popup
@section emacspeak-popup

POPUP ==  popup.el from MELPA

@node emacspeak-preamble
@section emacspeak-preamble

Module that is preloaded by every emacspeak module.
1.  Defines key macros.
2. Defines location-related variables.

@node emacspeak-proced
@section emacspeak-proced

PROCED ==  Process Editor
A new Task Manager for Emacs.
Proced is part of emacs 23.

  Required modules

@subsection Emacspeak-Proced Commands

@subsubsection emacspeak-proced-jump-to-process
@deffn {Command} emacspeak-proced-jump-to-process  (name)
@findex emacspeak-proced-jump-to-process

@format
Jump to process by name.

(fn NAME)
@end format
@end deffn

@subsubsection emacspeak-proced-next-field
@deffn {Command} emacspeak-proced-next-field   
@findex emacspeak-proced-next-field

@format
Navigate to next field.
@end format
@end deffn

@subsubsection emacspeak-proced-next-line
@deffn {Command} emacspeak-proced-next-line   
@findex emacspeak-proced-next-line

@format
Move to next line and speak a summary.
@end format
@end deffn

@subsubsection emacspeak-proced-previous-field
@deffn {Command} emacspeak-proced-previous-field   
@findex emacspeak-proced-previous-field

@format
Navigate to previous field.
@end format
@end deffn

@subsubsection emacspeak-proced-previous-line
@deffn {Command} emacspeak-proced-previous-line   
@findex emacspeak-proced-previous-line

@format
Move to next line and speak a summary.
@end format
@end deffn

@subsubsection emacspeak-proced-speak-args
@deffn {Command} emacspeak-proced-speak-args   
@findex emacspeak-proced-speak-args

@format
Speak command  invocation  for this process.
@end format
@end deffn

@subsubsection emacspeak-proced-speak-field
@deffn {Command} emacspeak-proced-speak-field  (field-name)
@findex emacspeak-proced-speak-field

@format
Speak value of specified field in current line.

(fn FIELD-NAME)
@end format
@end deffn

@subsubsection emacspeak-proced-speak-that-field
@deffn {Command} emacspeak-proced-speak-that-field   
@findex emacspeak-proced-speak-that-field

@format
Speak desired field via single keystroke.
@end format
@end deffn

@subsubsection emacspeak-proced-speak-this-field
@deffn {Command} emacspeak-proced-speak-this-field  (&optional position)
@findex emacspeak-proced-speak-this-field

@format
Speak field at specified column --- defaults to current column.

(fn &optional POSITION)
@end format
@end deffn

@node emacspeak-project
@section emacspeak-project

Speech-enable project.el

@node emacspeak-projectile
@section emacspeak-projectile

PROJECTILE ==  @samp{M-x package-install projectile}.
Project management in Emacs.

@node emacspeak-pronounce
@section emacspeak-pronounce

This module implements user customizable pronunciation dictionaries
for emacspeak. Custom pronunciations can be defined per file, per
directory and/or per major mode. Emacspeak maintains a persistent
user dictionary upon request and loads these in new emacspeak
sessions. This module implements the user interface to the custom
dictionary as well as providing the internal API used by the rest
of emacspeak in using the dictionary.
@subsection Algorithm:

The persistent dictionary is a hash table where the hash keys are
filenames, directory names, or major-mode names. The hash values
are association lists defining the dictionary. Users of this module
can retrieve a dictionary made up of all applicable association
lists for a given file.

@subsection Emacspeak-Pronounce Commands

@subsubsection emacspeak-pronounce-clear-dictionaries
@deffn {Command} emacspeak-pronounce-clear-dictionaries   
@findex emacspeak-pronounce-clear-dictionaries

@format
Clear all current pronunciation dictionaries.
@end format
@end deffn

@subsubsection emacspeak-pronounce-define-local-pronunciation
@deffn {Command} emacspeak-pronounce-define-local-pronunciation  (word pron)
@findex emacspeak-pronounce-define-local-pronunciation

@format
Define buffer local pronunciation.
Argument ‘word’ specified the word to be pronounced.
Argument ‘pron’ specifies the new pronunciation. 

(fn WORD PRON)
@end format
@end deffn

@subsubsection emacspeak-pronounce-define-pronunciation
@deffn {Command} emacspeak-pronounce-define-pronunciation   
@findex emacspeak-pronounce-define-pronunciation

@format
Interactively define entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded.
@end format
@end deffn

@subsubsection emacspeak-pronounce-define-template-pronunciation
@deffn {Command} emacspeak-pronounce-define-template-pronunciation   
@findex emacspeak-pronounce-define-template-pronunciation

@format
Interactively define template entries in the pronunciation dictionaries.
Default term to define is delimited by region.
First loads any persistent dictionaries if not already loaded.
@end format
@end deffn

@subsubsection emacspeak-pronounce-dispatch
@deffn {Command} emacspeak-pronounce-dispatch   
@table @kbd
@item C-e M-d
@kindex C-e M-d
@end table

@findex emacspeak-pronounce-dispatch

@format
Pronounce Frontend
@end format
@end deffn

@subsubsection emacspeak-pronounce-edit-pronunciations
@deffn {Command} emacspeak-pronounce-edit-pronunciations  (key)
@findex emacspeak-pronounce-edit-pronunciations

@format
Prompt for and launch a pronunciation editor on the
specified pronunciation dictionary key.

(fn KEY)
@end format
@end deffn

@subsubsection emacspeak-pronounce-load-dictionaries
@deffn {Command} emacspeak-pronounce-load-dictionaries  (&optional filename)
@findex emacspeak-pronounce-load-dictionaries

@format
Load pronunciation dictionaries.
Optional argument FILENAME specifies the dictionary file,
Default is emacspeak-pronounce-dictionaries-file.

(fn &optional FILENAME)
@end format
@end deffn

@subsubsection emacspeak-pronounce-merge-dictionaries
@deffn {Command} emacspeak-pronounce-merge-dictionaries  (from into)
@findex emacspeak-pronounce-merge-dictionaries

@format
Merge dic ‘from’ into dict ‘into’

(fn FROM INTO)
@end format
@end deffn

@subsubsection emacspeak-pronounce-refresh-pronunciations
@deffn {Command} emacspeak-pronounce-refresh-pronunciations   
@findex emacspeak-pronounce-refresh-pronunciations

@format
Refresh pronunciation table for current buffer. 
@end format
@end deffn

@subsubsection emacspeak-pronounce-save-dictionaries
@deffn {Command} emacspeak-pronounce-save-dictionaries   
@findex emacspeak-pronounce-save-dictionaries

@format
Saves  pronunciation dictionaries.
@end format
@end deffn

@subsubsection emacspeak-pronounce-toggle-use-of-dictionaries
@deffn {Command} emacspeak-pronounce-toggle-use-of-dictionaries  (&optional state)
@findex emacspeak-pronounce-toggle-use-of-dictionaries

@format
Toggle  pronunciation dictionaries. 

(fn &optional STATE)
@end format
@end deffn

@subsubsection emacspeak-pronounce-toggle-voice
@deffn {Command} emacspeak-pronounce-toggle-voice   
@findex emacspeak-pronounce-toggle-voice

@format
Toggle use of pronunciation personality.
@end format
@end deffn

@subsection emacspeak-pronounce Options

@defvar {User Option} emacspeak-pronounce-dictionaries-file
File that holds  emacspeak pronunciations.

Default Value: 

@verbatim

"/home/raman/.emacspeak/.dictionary"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-pronounce-internet-smileys-pronunciations
Smileys

Default Value: 

@verbatim

((":-)" . " smile ")
 (";)" . " half-wink ")
 (":)" . " grin ")
 (":-(" . " frown ")
 (":(" . " sigh ")
 (":-I" . " shrug ")
 (":->" . " sarcastic smile ")
 (">:->" . " devillish smile ")
 (">;->" . " lewd smile ")
 (";-)" . " wink "))

@end verbatim

@end defvar

@defvar {User Option} emacspeak-pronounce-xml-ns
Namespace URIs.

Default Value: 

@verbatim

(("http://www.w3.org/2005/Atom" . " atom ")
 ("http://www.w3.org/1999/02/22-rdf-syntax-ns#" . "RDF Syntax")
 ("http://www.w3.org/2002/06/xhtml2" . " xhtml2 ")
 ("http://www.w3.org/2003/XInclude" . "XInclude")
 ("http://www.w3.org/1999/XSL/Transform" . " XSLT ")
 ("http://www.w3.org/2002/xforms" . " XForms ")
 ("http://www.w3.org/2001/xml-events" . " XEvents ")
 ("http://www.w3.org/2001/vxml" . " vxml ")
 ("http://www.w3.org/2001/XMLSchema-instance" . " XSI ")
 ("http://www.w3.org/2001/XMLSchema" . " XSD ")
 ("http://www.w3.org/1999/xhtml" . " xhtml ")
 ("http://purl.org/dc/elements/1.1/" . "DC")
 ("http://search.yahoo.com/mrss/" . "media"))

@end verbatim

@end defvar

@node emacspeak-py
@section emacspeak-py

This speech-enables python-mode available on sourceforge and ELPA

@node emacspeak-pydoc
@section emacspeak-pydoc

PYDOC ==  Python Documentation Viewer

@node emacspeak-python
@section emacspeak-python

This speech-enables python-mode bundled with Emacs

@node emacspeak-racer
@section emacspeak-racer

RACER ==  Rust documentation and completion

@node emacspeak-racket
@section emacspeak-racket

racket-mode implements an IDE for racket, a dialect of scheme.

@node emacspeak-re-builder
@section emacspeak-re-builder

Speech-enable re-builder.
Will be used to advantage in efficiently setting up outline
regexp wizards


 required modules

@node emacspeak-reftex
@section emacspeak-reftex

This module speech-enables refteex --
reftex is a minor mode that makes navigation of TeX
documents  possible via a table of contents buffer.

@node emacspeak-related
@section emacspeak-related

RELATED ==  Switch among related buffers (melpa).
Speech-enable interactive commands.

@node emacspeak-rg
@section emacspeak-rg

RG ==  Emacs front-end to ripgrep (rg).

@node emacspeak-rmail
@section emacspeak-rmail

emacspeak extensions to rmail

@subsection Emacspeak-Rmail Commands

@subsubsection emacspeak-rmail-speak-current-message-labels
@deffn {Command} emacspeak-rmail-speak-current-message-labels   
@findex emacspeak-rmail-speak-current-message-labels

@format
Speak labels of current message
@end format
@end deffn

@subsubsection emacspeak-rmail-summarize-current-message
@deffn {Command} emacspeak-rmail-summarize-current-message   
@findex emacspeak-rmail-summarize-current-message

@format
Summarize current message
@end format
@end deffn

@node emacspeak-rpm-spec
@section emacspeak-rpm-spec

speech-enable rpm-spec-mode --part of Emacs 21 on RH 7.3

@node emacspeak-rst
@section emacspeak-rst

RST ==  rst-mode for editing rst text files.
This module speech-enables rst-mode.

@node emacspeak-ruby
@section emacspeak-ruby

Provide additional advice to Ruby mode

@node emacspeak-rust-mode
@section emacspeak-rust-mode

Speech-enable rust-mode

@node emacspeak-sage
@section emacspeak-sage

Speech-enable @code{sage-shell-mode}.
This is a major mode for interacting with @code{sage},
 @url{http://www.sagemath.org/}
An Open-source  Mathematical Software System.

@subsection Emacspeak-Sage Commands

@subsubsection emacspeak-sage-describe-symbol
@deffn {Command} emacspeak-sage-describe-symbol  (s)
@findex emacspeak-sage-describe-symbol

@format
Describe Sage symbol at point.

(fn S)
@end format
@end deffn

@subsubsection emacspeak-sage-get-output
@deffn {Command} emacspeak-sage-get-output   
@findex emacspeak-sage-get-output

@format
Return most recent Sage output
@end format
@end deffn

@subsubsection emacspeak-sage-get-output-as-latex
@deffn {Command} emacspeak-sage-get-output-as-latex   
@findex emacspeak-sage-get-output-as-latex

@format
Return most recent Sage output as LaTeX markup.
@end format
@end deffn

@subsubsection emacspeak-sage-speak-output
@deffn {Command} emacspeak-sage-speak-output   
@findex emacspeak-sage-speak-output

@format
Speak last output from Sage.
@end format
@end deffn

@node emacspeak-sdcv
@section emacspeak-sdcv

SDCV ==  Stardict  Dictionary Interface
This module sets up Emacspeak for use with sdcv.
You need to have  command-line sdcv installed.
You can install additional stardict dictionaries, see
 https://wiki.archlinux.org/index.php/sdcv
This module sets up Emacs module sdcv to use all the installed
dictionaries found on the system.

@node emacspeak-selectrum
@section emacspeak-selectrum

SELECTRUM ==  Flexibly select from lists.

@node emacspeak-ses
@section emacspeak-ses

ses implements a simple spread sheet and is part of Emacs
This module speech-enables ses

@subsection Emacspeak-Ses Commands

@subsubsection emacspeak-ses-backward-column-and-summarize
@deffn {Command} emacspeak-ses-backward-column-and-summarize   
@findex emacspeak-ses-backward-column-and-summarize

@format
Move to previous column and summarize.
@end format
@end deffn

@subsubsection emacspeak-ses-backward-row-and-summarize
@deffn {Command} emacspeak-ses-backward-row-and-summarize   
@findex emacspeak-ses-backward-row-and-summarize

@format
Move to previous row  and summarize.
@end format
@end deffn

@subsubsection emacspeak-ses-forward-column-and-summarize
@deffn {Command} emacspeak-ses-forward-column-and-summarize   
@findex emacspeak-ses-forward-column-and-summarize

@format
Move to next column and summarize.
@end format
@end deffn

@subsubsection emacspeak-ses-forward-row-and-summarize
@deffn {Command} emacspeak-ses-forward-row-and-summarize   
@findex emacspeak-ses-forward-row-and-summarize

@format
Move to next row and summarize.
@end format
@end deffn

@subsubsection emacspeak-ses-summarize-cell
@deffn {Command} emacspeak-ses-summarize-cell  (cell-name)
@findex emacspeak-ses-summarize-cell

@format
Summarize specified  cell.

(fn CELL-NAME)
@end format
@end deffn

@subsubsection emacspeak-ses-summarize-current-cell
@deffn {Command} emacspeak-ses-summarize-current-cell  (&rest ignore)
@findex emacspeak-ses-summarize-current-cell

@format
Summarize current cell.

(fn &rest IGNORE)
@end format
@end deffn

@node emacspeak-setup
@section emacspeak-setup

Entry point for Emacspeak.
The simplest and most basic way to start emacspeak is:
emacs -q -l <emacspeak-dir>/lisp/emacspeak-setup.el
The above starts a vanilla Emacs with just Emacspeak loaded.
Once the above has been verified to work,
You can  add
(load-library "emacspeak-setup")
To your .emacs file.
See tvr/emacs-startup.el in the Emacspeak Git repository for  my setup.

@node emacspeak-sgml-mode
@section emacspeak-sgml-mode

emacspeak extensions to sgml mode

@node emacspeak-sh-script
@section emacspeak-sh-script

This module speech-enables sh-script.el

@node emacspeak-shx
@section emacspeak-shx

SHX ==  Shell Extras For emacs

@node emacspeak-slime
@section emacspeak-slime

SLIME == Superior  Lisp Interaction Mode For Emacs
Slime is a powerful IDE for developing in Common Lisp and Clojure.
It's similar but more modern than package ILisp that I used as a
graduate student when developing AsTeR.

@node emacspeak-smartparens
@section emacspeak-smartparens

SMARTPARENS == Automatic insertion, wrapping and paredit-like
navigation with user defined pairs this module speech-enables
smartparens.  Insertion of a matching delimiter is indicated by a
short auditory icon.  Structured navigation speaks the current
line with the position of point aurally highlighted.

@node emacspeak-solitaire
@section emacspeak-solitaire

Auditory interface to solitaire

@subsection Emacspeak-Solitaire Commands

@subsubsection emacspeak-solitaire-show-column
@deffn {Command} emacspeak-solitaire-show-column   
@findex emacspeak-solitaire-show-column

@format
Audio format current column.
@end format
@end deffn

@subsubsection emacspeak-solitaire-show-row
@deffn {Command} emacspeak-solitaire-show-row   
@findex emacspeak-solitaire-show-row

@format
Audio format current row.
@end format
@end deffn

@subsubsection emacspeak-solitaire-speak-coordinates
@deffn {Command} emacspeak-solitaire-speak-coordinates   
@findex emacspeak-solitaire-speak-coordinates

@format
Speak coordinates of current position
@end format
@end deffn

@subsubsection emacspeak-solitaire-speak-row
@deffn {Command} emacspeak-solitaire-speak-row   
@findex emacspeak-solitaire-speak-row

@format
Speak current row.
@end format
@end deffn

@subsubsection emacspeak-solitaire-speak-stones
@deffn {Command} emacspeak-solitaire-speak-stones   
@findex emacspeak-solitaire-speak-stones

@format
Speak number of stones remaining.
@end format
@end deffn

@node emacspeak-sounds
@section emacspeak-sounds

This module provides the interface for generating auditory icons in
emacspeak.
@subsection Design goal:

@itemize
@item   Auditory icons should be used to
provide additional feedback, not as a gimmick.
@item   The Emacspeak interface
should be usable at all times without the icons.
@item   General principle for when to use
an icon:
@item Convey information about events taking place in parallel.
@item  For instance, if making a selection automatically moves the current
focus to the next choice, We speak the next choice, while
indicating the fact that something was selected with an auditory icon.
@item  This interface will assume the availability of a shell command
@code{play} that can take one or more sound files and play them.
@item This module provides  a mapping between names in the elisp world
and actual sound files.
@item icon-names are symbols; sound files  are fully-qualified file-names.
@item Modules that wish to use auditory icons
should use these names, instead of actual file names.
@item As of
Emacspeak 13.0, this module defines a themes architecture for
auditory icons.  Sound files corresponding to a given theme are
found in appropriate subdirectories of emacspeak-sounds-dir.
@item Contrast this with @code{prompts[ that dont belong to any theme.]}
@item The auditory icon player is configure via
custom option @code{emacspeak-play-program}.
@item  That custom setting handles the mapping to various play programs
from audio subsystems such as Pulseaudio, and Pipewire.
@end itemize
@subsection Designing Auditory Icons
Here are some notes on what I have learnt while designing and using
auditory icons over the years:
@enumerate
@item  Auditory icons should be short  --- use command @code{soxi} or
@code{;} in a dired buffer to see duration of a sound file. Use
the bundled themes as a guide.
@item Sounds have many properties, eg: duration, gain, pitch, at
the basic level.
@item  Even more important is the nature of the sound and what it sounds
like in the overall activity where that sound is used.
@item This is why  the gain of icons  @emph{should never be} normalized in
my view---  tuning icons is as complex as picking
colors from  a color palette.
@item The included themes have been optimized over years of use and
are primarily tuned for using with headphones.
@end enumerate

@subsection Emacspeak-Sounds Commands

@subsubsection emacspeak-sounds-select-theme
@deffn {Command} emacspeak-sounds-select-theme  (theme)
@table @kbd
@item C-e )
@kindex C-e )
@end table

@findex emacspeak-sounds-select-theme

@format
Select theme for auditory icons.

(fn THEME)
@end format
@end deffn

@subsubsection emacspeak-toggle-auditory-icons
@deffn {Command} emacspeak-toggle-auditory-icons  (&optional prefix)
@table @kbd
@item C-e C-a
@kindex C-e C-a
@end table

@findex emacspeak-toggle-auditory-icons

@format
Toggle use of auditory icons.
Optional interactive PREFIX arg toggles global value.

(fn &optional PREFIX)
@end format
@end deffn

@subsection emacspeak-sounds Options

@defvar {User Option} emacspeak-play-program
Play program.

Default Value: 

@verbatim

"/usr/bin/pactl"

@end verbatim

@end defvar

@node emacspeak-speak
@section emacspeak-speak

This module defines the core speech services used by emacspeak.
It depends on the speech server interface modules
It protects other parts of emacspeak
from becoming dependent on the speech server modules

@subsection Emacspeak-Speak Commands

@subsubsection emacspeak--persist-variable
@deffn {Command} emacspeak--persist-variable  (var file)
@findex emacspeak--persist-variable

@format
Persist variable  ‘var’ to file ‘FILE’.
Arranges for ‘VAR’ to be restored when ‘file’ is loaded.

(fn VAR FILE)
@end format
@end deffn

@subsubsection emacspeak-beginning-or-end
@deffn {Command} emacspeak-beginning-or-end   
@findex emacspeak-beginning-or-end

@format
Move to start or end of buffer.
@end format
@end deffn

@subsubsection emacspeak-buffer-select
@deffn {Command} emacspeak-buffer-select   
@table @kbd
@item C-e p
@kindex C-e p
@item C-e n
@kindex C-e n
@item C-e .
@kindex C-e .
@item C-e ,
@kindex C-e ,
@end table

@findex emacspeak-buffer-select

@format
Select buffer by smart cycling.
By default, this command is bound to multiple keys.
The final key of the initial  key-sequence, and  further invocations
of the keys below call the following bindings:

, previous-buffer
. next-buffer
b switch-to-buffer
f find-file
k emacspeak-kill-buffer-quietly
n emacspeak-cycle-to-next-buffer
o other-window
p emacspeak-cycle-to-previous-buffer

@end format
@end deffn

@subsubsection emacspeak-completions-move-to-completion-group
@deffn {Command} emacspeak-completions-move-to-completion-group   
@findex emacspeak-completions-move-to-completion-group

@format
Move to group of choices beginning with character last
typed. If no such group exists, then we try to search for that
char, or dont move. 
@end format
@end deffn

@subsubsection emacspeak-cycle-to-next-buffer
@deffn {Command} emacspeak-cycle-to-next-buffer   
@findex emacspeak-cycle-to-next-buffer

@format
Cycles to next buffer having same mode.
@end format
@end deffn

@subsubsection emacspeak-cycle-to-previous-buffer
@deffn {Command} emacspeak-cycle-to-previous-buffer   
@findex emacspeak-cycle-to-previous-buffer

@format
Cycles to previous buffer having same mode.
@end format
@end deffn

@subsubsection emacspeak-describe-tapestry
@deffn {Command} emacspeak-describe-tapestry  (&optional details)
@table @kbd
@item C-e M-t
@kindex C-e M-t
@end table

@findex emacspeak-describe-tapestry

@format
Describe the current layout of visible buffers in current frame.
Use interactive prefix arg to get coordinate positions of the
displayed buffers.

(fn &optional DETAILS)
@end format
@end deffn

@subsubsection emacspeak-execute-repeatedly
@deffn {Command} emacspeak-execute-repeatedly  (command)
@findex emacspeak-execute-repeatedly

@format
Execute COMMAND repeatedly.

(fn COMMAND)
@end format
@end deffn

@subsubsection emacspeak-goto-percent
@deffn {Command} emacspeak-goto-percent  (percent)
@table @kbd
@item C-e M-%
@kindex C-e M-%
@end table

@findex emacspeak-goto-percent

@format
Move to end  PERCENT of buffer like in View mode.
Display is centered at point.
Also set the mark at the position where point was.

(fn PERCENT)
@end format
@end deffn

@subsubsection emacspeak-mark-backward-mark
@deffn {Command} emacspeak-mark-backward-mark   
@findex emacspeak-mark-backward-mark

@format
Cycle backward through the mark ring.
To cycle forward, use pop-to-mark-command bound to M-x pop-to-mark-command 
@end format
@end deffn

@subsubsection emacspeak-open-info
@deffn {Command} emacspeak-open-info   
@table @kbd
@item C-e TAB
@kindex C-e TAB
@end table

@findex emacspeak-open-info

@format
Open Emacspeak Info Manual.
@end format
@end deffn

@subsubsection emacspeak-owindow-next-line
@deffn {Command} emacspeak-owindow-next-line  (count)
@table @kbd
@item ESC <down>
@kindex ESC <down>
@end table

@findex emacspeak-owindow-next-line

@format
Move to the next line in the other window and speak it.
Numeric prefix arg COUNT can specify number of lines to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-owindow-previous-line
@deffn {Command} emacspeak-owindow-previous-line  (count)
@table @kbd
@item ESC <up>
@kindex ESC <up>
@end table

@findex emacspeak-owindow-previous-line

@format
Move to the next line in the other window and speak it.
Numeric prefix arg COUNT specifies number of lines to move.

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-owindow-scroll-down
@deffn {Command} emacspeak-owindow-scroll-down   
@table @kbd
@item ESC <prior>
@kindex ESC <prior>
@end table

@findex emacspeak-owindow-scroll-down

@format
Scroll down  the window that command ‘other-window’ would move to.
Speak the window contents after scrolling.
@end format
@end deffn

@subsubsection emacspeak-owindow-scroll-up
@deffn {Command} emacspeak-owindow-scroll-up   
@table @kbd
@item ESC <next>
@kindex ESC <next>
@end table

@findex emacspeak-owindow-scroll-up

@format
Scroll up the window that command ‘other-window’ would move to.
Speak the window contents after scrolling.
@end format
@end deffn

@subsubsection emacspeak-owindow-speak-line
@deffn {Command} emacspeak-owindow-speak-line   
@findex emacspeak-owindow-speak-line

@format
Speak the current line in the other window.
@end format
@end deffn

@subsubsection emacspeak-read-next-line
@deffn {Command} emacspeak-read-next-line  (&optional arg)
@table @kbd
@item C-e <down>
@kindex C-e <down>
@end table

@findex emacspeak-read-next-line

@format
Read next line, specified by an offset, without moving.
Default is to read the next line. 

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-read-previous-line
@deffn {Command} emacspeak-read-previous-line  (&optional arg)
@table @kbd
@item C-e <up>
@kindex C-e <up>
@end table

@findex emacspeak-read-previous-line

@format
Read previous line, specified by an offset, without moving.
Default is to read the previous line. 

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-select-window-by-name
@deffn {Command} emacspeak-select-window-by-name  (buffer-name)
@table @kbd
@item C-e W
@kindex C-e W
@end table

@findex emacspeak-select-window-by-name

@format
Select window by the name of the buffer it displays.
This is useful when using modes like ECB or the new GDB UI where
  you want to preserve the window layout
but quickly switch to a window by name.

(fn BUFFER-NAME)
@end format
@end deffn

@subsubsection emacspeak-selective-display
@deffn {Command} emacspeak-selective-display  (&optional arg)
@table @kbd
@item C-e C-c
@kindex C-e C-c
@end table

@findex emacspeak-selective-display

@format
Continuously adjust selective-display.
Use ‘,’ and ‘.’ to continuously decrease/increase ‘selective-display’.
 If not specified, ‘arg’ defaults to current-column.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-shell-command
@deffn {Command} emacspeak-shell-command  (command)
@findex emacspeak-shell-command

@format
Run shell command COMMANDAND speak its output.

(fn COMMAND)
@end format
@end deffn

@subsubsection emacspeak-silence
@deffn {Command} emacspeak-silence   
@table @kbd
@item <silence>
@kindex <silence>
@item <XF86AudioPlay>
@kindex <XF86AudioPlay>
@end table

@findex emacspeak-silence

@format
Silence is golden. Stop speech, and pause/resume any media
streams. Runs ‘emacspeak-silence-hook’ which can be used to
configure which media players get silenced or paused/resumed.
@end format
@end deffn

@subsubsection emacspeak-speak-brief-time
@deffn {Command} emacspeak-speak-brief-time   
@table @kbd
@item C-e <fn>
@kindex C-e <fn>
@end table

@findex emacspeak-speak-brief-time

@format
Time in brief
@end format
@end deffn

@subsubsection emacspeak-speak-buffer
@deffn {Command} emacspeak-speak-buffer  (&optional arg)
@table @kbd
@item C-e b
@kindex C-e b
@end table

@findex emacspeak-speak-buffer

@format
Speak current buffer  contents.
With prefix ARG, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point. 

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-buffer-filename
@deffn {Command} emacspeak-speak-buffer-filename  (&optional filename)
@table @kbd
@item C-e f
@kindex C-e f
@end table

@findex emacspeak-speak-buffer-filename

@format
Speak name of file being visited in current buffer.
Speak default directory if invoked in a dired buffer, or when the
buffer is not visiting any file.  Interactive prefix arg
‘filename’ speaks only the final path component.  The result is
put in the kill ring for convenience.

(fn &optional FILENAME)
@end format
@end deffn

@subsubsection emacspeak-speak-buffer-interactively
@deffn {Command} emacspeak-speak-buffer-interactively   
@table @kbd
@item C-e B
@kindex C-e B
@end table

@findex emacspeak-speak-buffer-interactively

@format
Speak the start of, rest of, or the entire buffer.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire buffer.
@end format
@end deffn

@subsubsection emacspeak-speak-char
@deffn {Command} emacspeak-speak-char  (&optional prefix)
@table @kbd
@item C-e c
@kindex C-e c
@end table

@findex emacspeak-speak-char

@format
Speak character under point.
Pronounces character phonetically unless  called with a PREFIX arg.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-speak-char-name
@deffn {Command} emacspeak-speak-char-name  (char)
@findex emacspeak-speak-char-name

@format
tell me what this is

(fn CHAR)
@end format
@end deffn

@subsubsection emacspeak-speak-completions-if-available
@deffn {Command} emacspeak-speak-completions-if-available   
@table @kbd
@item C-e M-SPC
@kindex C-e M-SPC
@end table

@findex emacspeak-speak-completions-if-available

@format
Speak completions if available.
@end format
@end deffn

@subsubsection emacspeak-speak-continuously
@deffn {Command} emacspeak-speak-continuously   
@table @kbd
@item C-e C-<return>
@kindex C-e C-<return>
@end table

@findex emacspeak-speak-continuously

@format
Speak a buffer continuously.
First prompts using the minibuffer for the kind of action to
perform after speaking each chunk,   E.G.  speak a line at a time
etc.  Speaking commences at current buffer position.  Pressing
C-g breaks out, leaving point on last chunk that
was spoken.  Any other key continues to speak the buffer.
@end format
@end deffn

@subsubsection emacspeak-speak-current-column
@deffn {Command} emacspeak-speak-current-column   
@table @kbd
@item C-e =
@kindex C-e =
@end table

@findex emacspeak-speak-current-column

@format
Speak the current column.
@end format
@end deffn

@subsubsection emacspeak-speak-current-kill
@deffn {Command} emacspeak-speak-current-kill  (&optional count)
@table @kbd
@item C-e k
@kindex C-e k
@end table

@findex emacspeak-speak-current-kill

@format
Speak the current kill.
This is what will be yanked by the next <paste>. Prefix numeric
arg, COUNT, specifies that the text that will be yanked as a
result of a <paste> followed by count-1 M-x yank-pop be
spoken. The kill number that is spoken says what numeric prefix
arg to give to command yank.

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-speak-current-mark
@deffn {Command} emacspeak-speak-current-mark  (count)
@table @kbd
@item C-e C-SPC
@kindex C-e C-SPC
@item C-e C-@@
@kindex C-e C-@@
@end table

@findex emacspeak-speak-current-mark

@format
Speak the line containing the mark.
With no argument, speaks the line containing the mark--this is
where C-x C-x would
jump.  Numeric prefix arg  ‘COUNT’ speaks line containing mark  ‘n’
where  ‘n’ is one less than the number of times one has to jump
using ‘set-mark-command’ to get to this marked position.  The
location of the mark is indicated by an aural highlight. 

(fn COUNT)
@end format
@end deffn

@subsubsection emacspeak-speak-current-percentage
@deffn {Command} emacspeak-speak-current-percentage   
@table @kbd
@item C-e %
@kindex C-e %
@end table

@findex emacspeak-speak-current-percentage

@format
Announce the percentage into the current buffer.
@end format
@end deffn

@subsubsection emacspeak-speak-current-window
@deffn {Command} emacspeak-speak-current-window   
@findex emacspeak-speak-current-window

@format
Speak contents of current window.
Speaks entire window irrespective of point.
@end format
@end deffn

@subsubsection emacspeak-speak-date-as-seconds
@deffn {Command} emacspeak-speak-date-as-seconds  (time)
@findex emacspeak-speak-date-as-seconds

@format
Read time value as a human-readable string, return seconds.
Seconds value is also placed in the kill-ring.

(fn TIME)
@end format
@end deffn

@subsubsection emacspeak-speak-extent
@deffn {Command} emacspeak-speak-extent  (beg end &optional no-case)
@table @kbd
@item C-e M-e
@kindex C-e M-e
@end table

@findex emacspeak-speak-extent

@format
Speak extent delimited by beg and end.
Match patterns beg and end define the extent; optional arg
  no-case determines if the match is case sensitive.  Point is
  left at the start of beg on success.

(fn BEG END &optional NO-CASE)
@end format
@end deffn

@subsubsection emacspeak-speak-face-backward
@deffn {Command} emacspeak-speak-face-backward   
@findex emacspeak-speak-face-backward

@format
Property search for face at point see M-x text-property-search-backward
@end format
@end deffn

@subsubsection emacspeak-speak-face-browse
@deffn {Command} emacspeak-speak-face-browse   
@table @kbd
@item C-e C-.
@kindex C-e C-.
@end table

@findex emacspeak-speak-face-browse

@format
Use C-f and C-b to browse by current face.
@end format
@end deffn

@subsubsection emacspeak-speak-face-forward
@deffn {Command} emacspeak-speak-face-forward   
@findex emacspeak-speak-face-forward

@format
Property search for face --- see M-x text-property-search-forward
@end format
@end deffn

@subsubsection emacspeak-speak-field
@deffn {Command} emacspeak-speak-field   
@findex emacspeak-speak-field

@format
Speak current field.
@end format
@end deffn

@subsubsection emacspeak-speak-header-line
@deffn {Command} emacspeak-speak-header-line   
@table @kbd
@item C-e C-x
@kindex C-e C-x
@end table

@findex emacspeak-speak-header-line

@format
Speak header line if set.
@end format
@end deffn

@subsubsection emacspeak-speak-help
@deffn {Command} emacspeak-speak-help  (&optional arg)
@table @kbd
@item C-e h
@kindex C-e h
@end table

@findex emacspeak-speak-help

@format
Speak help buffer if one present.
With prefix arg, speaks the rest of the buffer from point.
Negative prefix arg speaks from start of buffer to point.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-help-interactively
@deffn {Command} emacspeak-speak-help-interactively   
@findex emacspeak-speak-help-interactively

@format
Speak the start of, rest of, or the entire help.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire help.
@end format
@end deffn

@subsubsection emacspeak-speak-line
@deffn {Command} emacspeak-speak-line  (&optional arg)
@table @kbd
@item C-e l
@kindex C-e l
@end table

@findex emacspeak-speak-line

@format
Speaks current line.  With prefix ARG, speaks the rest of the
line from point.  Negative prefix optional arg speaks from start
of line to point.  Indicates indentation with a spoken message if
audio indentation is on see ‘emacspeak-toggle-audio-indentation’
bound to C-e d i.  Indicates
position of point with an aural highlight if option
‘emacspeak-show-point’ is on --see command
‘emacspeak-toggle-show-point’ bound to
C-e C-d.  Lines that start hidden blocks
of text, e.g.  outline header lines, or header lines of blocks
created by command ‘emacspeak-hide-or-expose-block’ are indicated
with auditory icon ellipses. Presence of additional
presentational overlays (created via property display,
before-string, or after-string) is indicated with auditory icon
‘left’, ‘right’, or ‘more’ as appropriate.  These can then be
spoken using command C-e M-l.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-line-interactively
@deffn {Command} emacspeak-speak-line-interactively   
@table @kbd
@item C-e L
@kindex C-e L
@end table

@findex emacspeak-speak-line-interactively

@format
Speak the start of, rest of, or the entire line.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire line.
@end format
@end deffn

@subsubsection emacspeak-speak-line-set-column-filter
@deffn {Command} emacspeak-speak-line-set-column-filter  (filter)
@table @kbd
@item C-e |
@kindex C-e |
@end table

@findex emacspeak-speak-line-set-column-filter

@format
Set up filter for selectively speaking or ignoring portions of lines.
The filter is specified as a list of pairs.
For example, to filter  columns 1 -- 10 and 20 -- 25,
specify filter as
((0 9) (20 25)). Filter settings are persisted across sessions.  A
persisted filter is used as the default when prompting for a filter.
This allows one to accumulate a set of filters for specific files like
/var/adm/messages and /var/adm/maillog over time.
Option emacspeak-speak-line-invert-filter determines
the sense of the filter. 

(fn FILTER)
@end format
@end deffn

@subsubsection emacspeak-speak-load-directory-settings
@deffn {Command} emacspeak-speak-load-directory-settings  (&optional dir)
@table @kbd
@item C-e x d
@kindex C-e x d
@end table

@findex emacspeak-speak-load-directory-settings

@format
Load a directory specific Emacspeak settings file.
This is typically used to load up settings that are specific to
an electronic book consisting of many files in the same
directory.

(fn &optional DIR)
@end format
@end deffn

@subsubsection emacspeak-speak-load-filter-settings
@deffn {Command} emacspeak-speak-load-filter-settings   
@findex emacspeak-speak-load-filter-settings

@format
Load emacspeak filter settings.
@end format
@end deffn

@subsubsection emacspeak-speak-matching-paren
@deffn {Command} emacspeak-speak-matching-paren   
@findex emacspeak-speak-matching-paren

@format
Show matched paren with context.
@end format
@end deffn

@subsubsection emacspeak-speak-message-again
@deffn {Command} emacspeak-speak-message-again  (&optional from-message-cache)
@table @kbd
@item C-e a
@kindex C-e a
@end table

@findex emacspeak-speak-message-again

@format
Speak the last message from Emacs once again.
The message is also placed in the kill ring for convenient yanking 

(fn &optional FROM-MESSAGE-CACHE)
@end format
@end deffn

@subsubsection emacspeak-speak-message-at-time
@deffn {Command} emacspeak-speak-message-at-time  (time message)
@table @kbd
@item C-e @@
@kindex C-e @@
@end table

@findex emacspeak-speak-message-at-time

@format
Speak message at specified time.
Provides simple stop watch functionality.
See documentation for command run-at-time for details on time-spec.

(fn TIME MESSAGE)
@end format
@end deffn

@subsubsection emacspeak-speak-microseconds-since-epoch
@deffn {Command} emacspeak-speak-microseconds-since-epoch  (ms)
@findex emacspeak-speak-microseconds-since-epoch

@format
Speaks time value specified as microseconds  since epoch.

(fn MS)
@end format
@end deffn

@subsubsection emacspeak-speak-milliseconds-since-epoch
@deffn {Command} emacspeak-speak-milliseconds-since-epoch  (ms)
@findex emacspeak-speak-milliseconds-since-epoch

@format
Speaks time value specified as milliseconds  since epoch..

(fn MS)
@end format
@end deffn

@subsubsection emacspeak-speak-minor-mode-line
@deffn {Command} emacspeak-speak-minor-mode-line  (&optional log-msg)
@table @kbd
@item C-e M
@kindex C-e M
@end table

@findex emacspeak-speak-minor-mode-line

@format
Speak the minor mode-information.
Optional interactive prefix arg ‘log-msg’ logs spoken info to
*Messages*.

(fn &optional LOG-MSG)
@end format
@end deffn

@subsubsection emacspeak-speak-mode-line
@deffn {Command} emacspeak-speak-mode-line  (&optional buffer-info)
@table @kbd
@item C-e m
@kindex C-e m
@end table

@findex emacspeak-speak-mode-line

@format
Speak the mode-line.
Speaks header-line if that is set when called non-interactively.
Interactive prefix arg speaks buffer info.

(fn &optional BUFFER-INFO)
@end format
@end deffn

@subsubsection emacspeak-speak-net-id
@deffn {Command} emacspeak-speak-net-id   
@table @kbd
@item C-e `
@kindex C-e `
@end table

@findex emacspeak-speak-net-id

@format
Shows active network interfaces in the echo area.
 The address is also copied to the kill ring for convenient yanking.
@end format
@end deffn

@subsubsection emacspeak-speak-next-field
@deffn {Command} emacspeak-speak-next-field   
@findex emacspeak-speak-next-field

@format
Move to and speak next field.
@end format
@end deffn

@subsubsection emacspeak-speak-other-buffer
@deffn {Command} emacspeak-speak-other-buffer  (buffer)
@table @kbd
@item C-e M-b
@kindex C-e M-b
@end table

@findex emacspeak-speak-other-buffer

@format
Speak specified buffer.
Useful to listen to a buffer without switching  contexts.

(fn BUFFER)
@end format
@end deffn

@subsubsection emacspeak-speak-other-window
@deffn {Command} emacspeak-speak-other-window   
@table @kbd
@item C-e 2
@kindex C-e 2
@end table

@findex emacspeak-speak-other-window

@format
Speak other window
@end format
@end deffn

@subsubsection emacspeak-speak-overlay-properties
@deffn {Command} emacspeak-speak-overlay-properties   
@table @kbd
@item C-e M-l
@kindex C-e M-l
@end table

@findex emacspeak-speak-overlay-properties

@format
Speak display, before-string or after-string property if any.
@end format
@end deffn

@subsubsection emacspeak-speak-page
@deffn {Command} emacspeak-speak-page  (&optional arg)
@table @kbd
@item C-e ]
@kindex C-e ]
@end table

@findex emacspeak-speak-page

@format
Speak a page.
With prefix ARG, speaks rest of current page.
Negative prefix arg will read from start of current page to point. 

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-page-interactively
@deffn {Command} emacspeak-speak-page-interactively   
@findex emacspeak-speak-page-interactively

@format
Speak the start of, rest of, or the entire page.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire page.
@end format
@end deffn

@subsubsection emacspeak-speak-paragraph
@deffn {Command} emacspeak-speak-paragraph  (&optional arg)
@table @kbd
@item C-e [
@kindex C-e [
@end table

@findex emacspeak-speak-paragraph

@format
Speak paragraph.
With prefix arg, speaks rest of current paragraph.
Negative prefix arg will read from start of current paragraph to point. 

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-paragraph-interactively
@deffn {Command} emacspeak-speak-paragraph-interactively   
@table @kbd
@item C-e P
@kindex C-e P
@end table

@findex emacspeak-speak-paragraph-interactively

@format
Speak the start of, rest of, or the entire paragraph.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire paragraph.
@end format
@end deffn

@subsubsection emacspeak-speak-persist-filter-settings
@deffn {Command} emacspeak-speak-persist-filter-settings   
@findex emacspeak-speak-persist-filter-settings

@format
Persist emacspeak filter settings for future sessions.
@end format
@end deffn

@subsubsection emacspeak-speak-preceding-char
@deffn {Command} emacspeak-speak-preceding-char   
@findex emacspeak-speak-preceding-char

@format
Speak character before point.
@end format
@end deffn

@subsubsection emacspeak-speak-predefined-window
@deffn {Command} emacspeak-speak-predefined-window  (&optional arg)
@findex emacspeak-speak-predefined-window

@format
Speak one of the first 10 windows on the screen, 0 is current window.
Speaks entire window irrespective of point.  Semantics of ‘other’
is the same as for the Emacs builtin ‘other-window’.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-previous-field
@deffn {Command} emacspeak-speak-previous-field   
@findex emacspeak-speak-previous-field

@format
Move to previous field and speak it.
@end format
@end deffn

@subsubsection emacspeak-speak-range
@deffn {Command} emacspeak-speak-range  (&optional prop)
@findex emacspeak-speak-range

@format
Speak and return  range at point

(fn &optional PROP)
@end format
@end deffn

@subsubsection emacspeak-speak-rectangle
@deffn {Command} emacspeak-speak-rectangle  (start end)
@table @kbd
@item C-e R
@kindex C-e R
@end table

@findex emacspeak-speak-rectangle

@format
Speak a rectangle of text.
Rectangle is delimited by point and mark.  When call from a
program, arguments specify the START and END of the rectangle.

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-speak-region
@deffn {Command} emacspeak-speak-region  (start end)
@table @kbd
@item C-e r
@kindex C-e r
@end table

@findex emacspeak-speak-region

@format
Speak region bounded by start and end. 

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-speak-rest-of-buffer
@deffn {Command} emacspeak-speak-rest-of-buffer   
@table @kbd
@item C-e i
@kindex C-e i
@end table

@findex emacspeak-speak-rest-of-buffer

@format
Speak remainder of the buffer starting at point
@end format
@end deffn

@subsubsection emacspeak-speak-run-shell-command
@deffn {Command} emacspeak-speak-run-shell-command  (command &optional read-as-csv)
@table @kbd
@item C-e !
@kindex C-e !
@end table

@findex emacspeak-speak-run-shell-command

@format
Invoke shell COMMAND and display its output as a table. The
results are placed in a buffer in Emacspeak’s table browsing
mode. Optional interactive prefix arg read-as-csv interprets the
result as csv. . Use this for running shell commands that produce
tabulated output. This command should be used for shell commands
that produce tabulated output that works with Emacspeak’s table
recognizer. Verify this first by running the command in a shell
and executing command ‘emacspeak-table-display-table-in-region’
normally bound to C-e M-i.

(fn COMMAND &optional READ-AS-CSV)
@end format
@end deffn

@subsubsection emacspeak-speak-seconds-since-epoch
@deffn {Command} emacspeak-speak-seconds-since-epoch  (seconds)
@findex emacspeak-speak-seconds-since-epoch

@format
Speaks time value specified as seconds  since epoch.

(fn SECONDS)
@end format
@end deffn

@subsubsection emacspeak-speak-sentence
@deffn {Command} emacspeak-speak-sentence  (&optional arg)
@findex emacspeak-speak-sentence

@format
Speak current sentence.
With prefix ARG, speaks the rest of the sentence  from point.
Negative prefix arg speaks from start of sentence to point.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-sexp
@deffn {Command} emacspeak-speak-sexp  (&optional arg)
@findex emacspeak-speak-sexp

@format
Speak current sexp.
With prefix ARG, speaks the rest of the sexp  from point.
Negative prefix arg speaks from start of sexp to point. 

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-sexp-interactively
@deffn {Command} emacspeak-speak-sexp-interactively   
@findex emacspeak-speak-sexp-interactively

@format
Speak the start of, rest of, or the entire sexp.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire sexp.
@end format
@end deffn

@subsubsection emacspeak-speak-skim-buffer
@deffn {Command} emacspeak-speak-skim-buffer   
@findex emacspeak-speak-skim-buffer

@format
Skim the current buffer  a paragraph at a time.
@end format
@end deffn

@subsubsection emacspeak-speak-spaces-at-point
@deffn {Command} emacspeak-speak-spaces-at-point   
@table @kbd
@item C-e C-M-SPC
@kindex C-e C-M-SPC
@end table

@findex emacspeak-speak-spaces-at-point

@format
Speak the white space at point.
@end format
@end deffn

@subsubsection emacspeak-speak-spell-current-word
@deffn {Command} emacspeak-speak-spell-current-word   
@findex emacspeak-speak-spell-current-word

@format
Spell word at  point.
@end format
@end deffn

@subsubsection emacspeak-speak-this-window
@deffn {Command} emacspeak-speak-this-window   
@table @kbd
@item C-e 1
@kindex C-e 1
@end table

@findex emacspeak-speak-this-window

@format
Speak current window.
@end format
@end deffn

@subsubsection emacspeak-speak-time
@deffn {Command} emacspeak-speak-time  (&optional world)
@table @kbd
@item C-e t
@kindex C-e t
@end table

@findex emacspeak-speak-time

@format
Speak the time.
Spoken time  is available via C-h N.
Optional interactive prefix arg ‘C-u’invokes world clock.
Timezone is specified using minibuffer completion.
Second interactive prefix sets clock to new timezone.

(fn &optional WORLD)
@end format
@end deffn

@subsubsection emacspeak-speak-version
@deffn {Command} emacspeak-speak-version  (&optional speak-rev)
@table @kbd
@item C-e V
@kindex C-e V
@end table

@findex emacspeak-speak-version

@format
Announce version information for running emacspeak.
Optional interactive prefix arg ‘speak-rev’ speaks only the Git revision.

(fn &optional SPEAK-REV)
@end format
@end deffn

@subsubsection emacspeak-speak-visual-line
@deffn {Command} emacspeak-speak-visual-line   
@findex emacspeak-speak-visual-line

@format
Speaks current visual line.
Cues the start of a physical line with auditory icon ‘left’.
@end format
@end deffn

@subsubsection emacspeak-speak-voice-annotate-paragraphs
@deffn {Command} emacspeak-speak-voice-annotate-paragraphs   
@findex emacspeak-speak-voice-annotate-paragraphs

@format
Locate paragraphs and voice annotate the first word.
Here, paragraph is taken to mean a chunk of text preceded by a blank line.
Useful to do this before you listen to an entire buffer.
@end format
@end deffn

@subsubsection emacspeak-speak-which-function
@deffn {Command} emacspeak-speak-which-function   
@table @kbd
@item C-e M-w
@kindex C-e M-w
@end table

@findex emacspeak-speak-which-function

@format
Speak which function we are on.  Uses which-function from
which-func without turning that mode on.  
@end format
@end deffn

@subsubsection emacspeak-speak-window-information
@deffn {Command} emacspeak-speak-window-information   
@table @kbd
@item C-e C-w
@kindex C-e C-w
@end table

@findex emacspeak-speak-window-information

@format
Speaks information about current window.
@end format
@end deffn

@subsubsection emacspeak-speak-windowful
@deffn {Command} emacspeak-speak-windowful   
@table @kbd
@item C-e SPC
@kindex C-e SPC
@end table

@findex emacspeak-speak-windowful

@format
Delete other windows, Line to top, then Speak window contents.
@end format
@end deffn

@subsubsection emacspeak-speak-word
@deffn {Command} emacspeak-speak-word  (&optional arg)
@table @kbd
@item C-e w
@kindex C-e w
@end table

@findex emacspeak-speak-word

@format
Speak current word.
With prefix ARG, speaks the rest of the word from point.
Negative prefix arg speaks from start of word to point.
If executed  on the same buffer position a second time, the word is
spelled out  instead of being spoken.

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-speak-word-interactively
@deffn {Command} emacspeak-speak-word-interactively   
@findex emacspeak-speak-word-interactively

@format
Speak the start of, rest of, or the entire word.
 ‘s’ to speak the start.
 ‘r’ to speak the rest.
any other key to speak entire word.
@end format
@end deffn

@subsubsection emacspeak-speak-world-clock
@deffn {Command} emacspeak-speak-world-clock  (zone &optional set)
@findex emacspeak-speak-world-clock

@format
Display current date and time  for specified zone.
Optional second arg ‘set’ sets the TZ environment variable as well.

(fn ZONE &optional SET)
@end format
@end deffn

@subsubsection emacspeak-submit-bug
@deffn {Command} emacspeak-submit-bug   
@findex emacspeak-submit-bug

@format
Function to submit a bug to the Emacspeak list
@end format
@end deffn

@subsubsection emacspeak-switch-to-reference-buffer
@deffn {Command} emacspeak-switch-to-reference-buffer   
@findex emacspeak-switch-to-reference-buffer

@format
Switch back to buffer that generated completions.
@end format
@end deffn

@subsubsection emacspeak-toggle-audio-indentation
@deffn {Command} emacspeak-toggle-audio-indentation  (&optional prefix)
@table @kbd
@item C-e d i
@kindex C-e d i
@end table

@findex emacspeak-toggle-audio-indentation

@format
Toggle state of  Emacspeak  audio indentation.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Specifying the method of indentation as ‘tones’
results in the Dectalk producing a tone whose length is a function of the
line’s indentation.  Specifying ‘speak’
results in the number of initial spaces being spoken.
@end format
@end deffn

@subsubsection emacspeak-toggle-character-echo
@deffn {Command} emacspeak-toggle-character-echo  (&optional prefix)
@table @kbd
@item C-e d k
@kindex C-e d k
@end table

@findex emacspeak-toggle-character-echo

@format
Toggle state of  Emacspeak  character echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end format
@end deffn

@subsubsection emacspeak-toggle-header-line
@deffn {Command} emacspeak-toggle-header-line   
@findex emacspeak-toggle-header-line

@format
Toggle Emacspeak’s default header line.
@end format
@end deffn

@subsubsection emacspeak-toggle-line-echo
@deffn {Command} emacspeak-toggle-line-echo  (&optional prefix)
@table @kbd
@item C-e d l
@kindex C-e d l
@end table

@findex emacspeak-toggle-line-echo

@format
Toggle state of  Emacspeak  line echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end format
@end deffn

@subsubsection emacspeak-toggle-mail-alert
@deffn {Command} emacspeak-toggle-mail-alert  (&optional prefix)
@table @kbd
@item C-e M-m
@kindex C-e M-m
@end table

@findex emacspeak-toggle-mail-alert

@format
Toggle state of  Emacspeak  mail alert.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
Turning on this option results in Emacspeak producing an auditory icon
indicating the arrival  of new mail when displaying the mode line.
@end format
@end deffn

@subsubsection emacspeak-toggle-show-point
@deffn {Command} emacspeak-toggle-show-point  (&optional prefix)
@table @kbd
@item C-e C-d
@kindex C-e C-d
@end table

@findex emacspeak-toggle-show-point

@format
Toggle state of  Emacspeak-show-point.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end format
@end deffn

@subsubsection emacspeak-toggle-speak-line-invert-filter
@deffn {Command} emacspeak-toggle-speak-line-invert-filter  (&optional prefix)
@table @kbd
@item C-e \
@kindex C-e \
@end table

@findex emacspeak-toggle-speak-line-invert-filter

@format
Toggle state of   how column filter is interpreted.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end format
@end deffn

@subsubsection emacspeak-toggle-speak-messages
@deffn {Command} emacspeak-toggle-speak-messages  (&optional prefix)
@table @kbd
@item C-e C-M-q
@kindex C-e C-M-q
@end table

@findex emacspeak-toggle-speak-messages

@format
Toggle  state of whether emacspeak echoes messages.
@end format
@end deffn

@subsubsection emacspeak-toggle-word-echo
@deffn {Command} emacspeak-toggle-word-echo  (&optional prefix)
@table @kbd
@item C-e d w
@kindex C-e d w
@end table

@findex emacspeak-toggle-word-echo

@format
Toggle state of  Emacspeak  word echo.
Interactive PREFIX arg means toggle  the global default value, and then set the
current local  value to the result.
@end format
@end deffn

@subsubsection emacspeak-view-notifications
@deffn {Command} emacspeak-view-notifications   
@table @kbd
@item C-h N
@kindex C-h N
@item <f1> N
@kindex <f1> N
@item <help> N
@kindex <help> N
@end table

@findex emacspeak-view-notifications

@format
Display notifications.
@end format
@end deffn

@subsubsection emacspeak-zap-tts
@deffn {Command} emacspeak-zap-tts   
@table @kbd
@item C-e d z
@kindex C-e d z
@end table

@findex emacspeak-zap-tts

@format
Send this command to the TTS directly.
@end format
@end deffn

@subsection emacspeak-speak Options

@defvar {User Option} emacspeak-audio-indentation
Option indicating if line indentation is cued.
You can use  command ‘emacspeak-toggle-audio-indentation’ bound
to C-e d i to toggle this
setting.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-character-echo
If t, then emacspeak echoes characters  as you type.
You can
use C-e d k to toggle this
setting.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-line-echo
If t, then emacspeak echoes lines as you type.
You can use C-e d l to set this
option.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-mail-alert
 If t, emacspeak will alert you about newly arrived mail
with an auditory icon when
displaying the mode line.
You can use command
‘emacspeak-toggle-mail-alert’ bound to
C-e M-m to set this option. 

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-mail-alert-interval
Interval in seconds between mail alerts for the same pending
  message.

Default Value: 

@verbatim

300

@end verbatim

@end defvar

@defvar {User Option} emacspeak-mail-spool-file
Mail spool file examined  to alert you about newly
arrived mail.

Default Value: 

@verbatim

"/var/mail/raman"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-silence-hook
Functions run after emacspeak-silence is called.

Default Value: 

@verbatim

(emacspeak-m-player-pause-or-resume emacspeak-emms-pause-or-resume)

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-filter-persistent-store
File where emacspeak filters are persisted.

Default Value: 

@verbatim

"/home/raman/.emacspeak/.filters"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-messages
Option indicating if messages are spoken.  If nil,
emacspeak will not speak messages as they are echoed to the
message area.  You can use command
‘emacspeak-toggle-speak-messages’ bound to
C-e C-M-q.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-time-brief-format
Format for time in brief.

Default Value: 

@verbatim

"%l %M%p"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-time-format
Format string that specifies how the time should be spoken.
See the documentation for function
‘format-time-string’

Default Value: 

@verbatim

"%l %M%p on %A %B %_e"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-zoneinfo-directory
Directory containing timezone data.

Default Value: 

@verbatim

"/usr/share/zoneinfo/"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-word-echo
If t, then emacspeak echoes words as you type.
You can use C-e d w to toggle this
option.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@node emacspeak-speedbar
@section emacspeak-speedbar

This module advises speedbar.el for use with Emacs.  The
latest speedbar can be obtained from
ftp://ftp.ultranet.com/pub/zappo/ This module ensures
that speedbar works smoothly outside a windowing system
in addition to speech enabling all interactive
commands. Emacspeak also adds an Emacspeak environment
specific entry point to speedbar
--emacspeak-speedbar-goto-speedbar-- and binds this

@subsection Emacspeak-Speedbar Commands

@subsubsection emacspeak-speedbar-click
@deffn {Command} emacspeak-speedbar-click   
@findex emacspeak-speedbar-click

@format
Does the equivalent of the mouse click from the keyboard
@end format
@end deffn

@subsubsection emacspeak-speedbar-goto-speedbar
@deffn {Command} emacspeak-speedbar-goto-speedbar   
@findex emacspeak-speedbar-goto-speedbar

@format
Switch to the speedbar
@end format
@end deffn

@node emacspeak-sql
@section emacspeak-sql

This module speech enables sql-mode--
available from
 the Emacs package archive.
sql-mode.el implemented by the above package
sets up an Emacs to SQL interface where you can
interactively evaluate SQL expressions.

@node emacspeak-sudoku
@section emacspeak-sudoku

Playing SuDoku using speech output.
Written to discover what type of feedback one needs for  this
task.

  Required modules

@subsection Emacspeak-Sudoku Commands

@subsubsection emacspeak-sudoku-board-columns-summarize
@deffn {Command} emacspeak-sudoku-board-columns-summarize   
@findex emacspeak-sudoku-board-columns-summarize

@format
Summarize columns --- speaks number of remaining cells.
@end format
@end deffn

@subsubsection emacspeak-sudoku-board-distribution-summarize
@deffn {Command} emacspeak-sudoku-board-distribution-summarize   
@findex emacspeak-sudoku-board-distribution-summarize

@format
Shows distribution of filled numbers.
@end format
@end deffn

@subsubsection emacspeak-sudoku-board-rows-summarize
@deffn {Command} emacspeak-sudoku-board-rows-summarize   
@findex emacspeak-sudoku-board-rows-summarize

@format
Summarize rows --- speaks number of remaining cells.
@end format
@end deffn

@subsubsection emacspeak-sudoku-board-sub-squares-summarize
@deffn {Command} emacspeak-sudoku-board-sub-squares-summarize   
@findex emacspeak-sudoku-board-sub-squares-summarize

@format
Summarize sub-squares --- speaks number of remaining cells.
@end format
@end deffn

@subsubsection emacspeak-sudoku-board-summarizer
@deffn {Command} emacspeak-sudoku-board-summarizer   
@findex emacspeak-sudoku-board-summarizer

@format
Dispatch to  appropriate summarizer.

d   Number Distribution
r   Row Distribution
c   Column Distribution
s   Sub-square Distribution.

@end format
@end deffn

@subsubsection emacspeak-sudoku-down-sub-square
@deffn {Command} emacspeak-sudoku-down-sub-square   
@findex emacspeak-sudoku-down-sub-square

@format
Move to top-left corner of  sub-square below current one.
@end format
@end deffn

@subsubsection emacspeak-sudoku-erase-current-column
@deffn {Command} emacspeak-sudoku-erase-current-column   
@findex emacspeak-sudoku-erase-current-column

@format
Erase current column.
@end format
@end deffn

@subsubsection emacspeak-sudoku-erase-current-row
@deffn {Command} emacspeak-sudoku-erase-current-row   
@findex emacspeak-sudoku-erase-current-row

@format
Erase current row.
@end format
@end deffn

@subsubsection emacspeak-sudoku-erase-current-sub-square
@deffn {Command} emacspeak-sudoku-erase-current-sub-square   
@findex emacspeak-sudoku-erase-current-sub-square

@format
Erase current sub-square.
@end format
@end deffn

@subsubsection emacspeak-sudoku-hint
@deffn {Command} emacspeak-sudoku-hint   
@findex emacspeak-sudoku-hint

@format
Provide hint for current cell.
@end format
@end deffn

@subsubsection emacspeak-sudoku-history-pop
@deffn {Command} emacspeak-sudoku-history-pop   
@findex emacspeak-sudoku-history-pop

@format
Pop saved state off stack and redraw board.
@end format
@end deffn

@subsubsection emacspeak-sudoku-history-push
@deffn {Command} emacspeak-sudoku-history-push   
@findex emacspeak-sudoku-history-push

@format
Push current state on to history stack.
@end format
@end deffn

@subsubsection emacspeak-sudoku-how-many-remaining
@deffn {Command} emacspeak-sudoku-how-many-remaining   
@findex emacspeak-sudoku-how-many-remaining

@format
Speak number of remaining squares to fill.
@end format
@end deffn

@subsubsection emacspeak-sudoku-next-sub-square
@deffn {Command} emacspeak-sudoku-next-sub-square   
@findex emacspeak-sudoku-next-sub-square

@format
Move to top-left corner of next sub-square.
@end format
@end deffn

@subsubsection emacspeak-sudoku-previous-sub-square
@deffn {Command} emacspeak-sudoku-previous-sub-square   
@findex emacspeak-sudoku-previous-sub-square

@format
Move to top-left corner of previous sub-square.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-current-cell-coordinates
@deffn {Command} emacspeak-sudoku-speak-current-cell-coordinates   
@findex emacspeak-sudoku-speak-current-cell-coordinates

@format
speak current cell coordinates.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-current-cell-value
@deffn {Command} emacspeak-sudoku-speak-current-cell-value   
@findex emacspeak-sudoku-speak-current-cell-value

@format
Speak value in current cell.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-current-column
@deffn {Command} emacspeak-sudoku-speak-current-column   
@findex emacspeak-sudoku-speak-current-column

@format
Speak current column.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-current-row
@deffn {Command} emacspeak-sudoku-speak-current-row   
@findex emacspeak-sudoku-speak-current-row

@format
Speak current row.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-current-sub-square
@deffn {Command} emacspeak-sudoku-speak-current-sub-square   
@findex emacspeak-sudoku-speak-current-sub-square

@format
Speak current sub-square.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-remaining-in-column
@deffn {Command} emacspeak-sudoku-speak-remaining-in-column   
@findex emacspeak-sudoku-speak-remaining-in-column

@format
Speaks number of remaining cells in current column.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-remaining-in-row
@deffn {Command} emacspeak-sudoku-speak-remaining-in-row   
@findex emacspeak-sudoku-speak-remaining-in-row

@format
Speaks number of remaining cells in current row.
@end format
@end deffn

@subsubsection emacspeak-sudoku-speak-remaining-in-sub-square
@deffn {Command} emacspeak-sudoku-speak-remaining-in-sub-square   
@findex emacspeak-sudoku-speak-remaining-in-sub-square

@format
Speaks number of remaining cells in current sub-square.
@end format
@end deffn

@subsubsection emacspeak-sudoku-up-sub-square
@deffn {Command} emacspeak-sudoku-up-sub-square   
@findex emacspeak-sudoku-up-sub-square

@format
Move to top-left corner of  sub-square above current one.
@end format
@end deffn

@node emacspeak-supercite
@section emacspeak-supercite

Speech-enable supercite.

@node emacspeak-syslog
@section emacspeak-syslog

SYSLOG-MODE ==  Working with various log files.
Install package syslog-mode from melpa.

@node emacspeak-tab-bar
@section emacspeak-tab-bar

tab-bar == tabs for window configuration.
Speech-enable tab-bar interaction.  If you have
@var{browse-url-new-window-flag} set to T to have EWW open Web
pages in a new buffer, then set
@var{eww-browse-url-new-window-is-tab} to nil to avoid leaking
tabs.

@node emacspeak-table
@section emacspeak-table

Implements a module that provides a high level interface to
tabulated information.

@node emacspeak-table-ui
@section emacspeak-table-ui

User interface to tables

@subsection Emacspeak-Table-Ui Commands

@subsubsection emacspeak-table-copy-current-element-to-kill-ring
@deffn {Command} emacspeak-table-copy-current-element-to-kill-ring   
@table @kbd
@item C-e C-t w
@kindex C-e C-t w
@end table

@findex emacspeak-table-copy-current-element-to-kill-ring

@format
Copy current table element to kill ring.
@end format
@end deffn

@subsubsection emacspeak-table-copy-current-element-to-register
@deffn {Command} emacspeak-table-copy-current-element-to-register  (register)
@table @kbd
@item C-e C-t x
@kindex C-e C-t x
@end table

@findex emacspeak-table-copy-current-element-to-register

@format
Copy current table element to specified register.

(fn REGISTER)
@end format
@end deffn

@subsubsection emacspeak-table-copy-to-clipboard
@deffn {Command} emacspeak-table-copy-to-clipboard   
@table @kbd
@item C-e C-t k
@kindex C-e C-t k
@end table

@findex emacspeak-table-copy-to-clipboard

@format
Copy table in current buffer to the table clipboard.
Current buffer must be in emacspeak-table mode.
@end format
@end deffn

@subsubsection emacspeak-table-display-table-in-region
@deffn {Command} emacspeak-table-display-table-in-region  (start end)
@table @kbd
@item C-e M-i
@kindex C-e M-i
@end table

@findex emacspeak-table-display-table-in-region

@format
Recognize tabular data in current region and display it in table
browsing mode in a a separate buffer.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command ‘describe-mode’ bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser.

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-table-find-csv-file
@deffn {Command} emacspeak-table-find-csv-file  (filename)
@table @kbd
@item C-e C-t ,
@kindex C-e C-t ,
@end table

@findex emacspeak-table-find-csv-file

@format
Process a csv (comma separated values) file.
The processed  data is presented using emacspeak table navigation. 

(fn FILENAME)
@end format
@end deffn

@subsubsection emacspeak-table-find-file
@deffn {Command} emacspeak-table-find-file  (filename)
@findex emacspeak-table-find-file

@format
Open a file containing table data and display it in table mode.
emacspeak table mode is designed to let you browse tabular data using
all the power of the two-dimensional spatial layout while giving you
sufficient contextual information.  The etc/tables subdirectory of the
emacspeak distribution contains some sample tables --these are the
CalTrain schedules.  Execute command ‘describe-mode’ bound to
C-h m in a buffer that is in emacspeak table mode to read
the documentation on the table browser.

(fn FILENAME)
@end format
@end deffn

@subsubsection emacspeak-table-goto
@deffn {Command} emacspeak-table-goto  (row column)
@table @kbd
@item C-e C-t j
@kindex C-e C-t j
@end table

@findex emacspeak-table-goto

@format
Prompt for a table cell coordinates and jump to it.

(fn ROW COLUMN)
@end format
@end deffn

@subsubsection emacspeak-table-goto-bottom
@deffn {Command} emacspeak-table-goto-bottom   
@table @kbd
@item C-e C-t B
@kindex C-e C-t B
@item C-e C-t M->
@kindex C-e C-t M->
@end table

@findex emacspeak-table-goto-bottom

@format
Goes to the bottom of the current column.
@end format
@end deffn

@subsubsection emacspeak-table-goto-left
@deffn {Command} emacspeak-table-goto-left   
@table @kbd
@item C-e C-t A
@kindex C-e C-t A
@item C-e C-t <
@kindex C-e C-t <
@end table

@findex emacspeak-table-goto-left

@format
Goes to the left of the current row.
@end format
@end deffn

@subsubsection emacspeak-table-goto-right
@deffn {Command} emacspeak-table-goto-right   
@table @kbd
@item C-e C-t E
@kindex C-e C-t E
@item C-e C-t >
@kindex C-e C-t >
@end table

@findex emacspeak-table-goto-right

@format
Goes to the right of the current row.
@end format
@end deffn

@subsubsection emacspeak-table-goto-top
@deffn {Command} emacspeak-table-goto-top   
@table @kbd
@item C-e C-t T
@kindex C-e C-t T
@item C-e C-t M-<
@kindex C-e C-t M-<
@end table

@findex emacspeak-table-goto-top

@format
Goes to the top of the current column.
@end format
@end deffn

@subsubsection emacspeak-table-mode
@deffn {Command} emacspeak-table-mode   
@findex emacspeak-table-mode

@format
Major mode for browsing tables.
Table mode is designed to allow speech users to browse tabular
data with full contextual feedback while retaining all the power
of the two-dimensional spatial layout of tables.

In table mode, the arrow keys move between cells of the table.
Emacspeak speaks the cell contents in a user-customizable way.  The
visual display is kept in sync with the speech you hear; however
Emacspeak is examining the entire table in order to speak the current
cell content intelligently.

You can interactively specify that emacspeak should speak either the row or
column header (or both) while speaking each cell.  You can also specify a row
or column filter that should be applied when speaking entire rows or columns
--this lets you view slices of a table.  You can move to a specific row or
column by searching the cell contents or by searching the row or column
headers to locate items of interest.

Here is a short description of the special commands provided in this mode.

The next four commands help you move to the edges of the table:

E               emacspeak-table-goto-right
A               emacspeak-table-goto-left
B               emacspeak-table-goto-bottom
T               emacspeak-table-goto-top

The next two commands let you search the table.
The commands ask you if you want to search rows or columns.
When searching headers remember that row 0 is the column header,
and that column 0 is the row header.

h               emacspeak-table-search-headers
s               emacspeak-table-search

The next command lets you specify how cell contents should be spoken.  Specify
one of: ‘b’ for both, ‘c’ for column, ‘r’ for row, ‘f’ for row filtering and
‘g’ for column filtering. --table cells with then be spoken with both (or
either)row and column headers, or with the filter applied.

a               emacspeak-table-select-automatic-speaking-method

The next set of commands speak the current table cell:

.               emacspeak-table-speak-coordinates
b               emacspeak-table-speak-both-headers-and-element
SPC             emacspeak-table-speak-current-element
c               emacspeak-table-speak-column-header-and-element
r               e macspeak-table-speak-row-header-and-element

The next set of commands navigate the table:

right               emacspeak-table-next-column
left               emacspeak-table-previous-column
down               emacspeak-table-next-row
up               emacspeak-table-previous-row
j               emacspeak-table-goto
S-tab               emacspeak-table-previous-column
TAB               emacspeak-table-next-column

Row and Column Filtering

Filtering is designed to let you view slices of a table.
They are specified as lists of numbers and strings.
The concept is best explained with an example.

A row filter specifies which of the entries in the current row should be
spoken.Entries are numbered starting with 0.  Thus, when working with a table
having 8 columns, a row filter of (1 2 3) will speak only entries 1 2 and 3.
Use the sample tables in etc/tables   to familiarize yourself with this
feature. Note that you can intersperse meaningful strings in the list that
specifies the filter.

Full List Of Keybindings:

Key             Binding
-------------------------------------------------------------------------------
C-b		emacspeak-table-previous-column
C-f		emacspeak-table-next-column
TAB		emacspeak-table-next-column
C-n		emacspeak-table-next-row
C-p		emacspeak-table-previous-row
SPC		emacspeak-table-speak-current-element
#		emacspeak-table-sort-on-current-column
,		emacspeak-table-find-csv-file
.		emacspeak-table-speak-coordinates
<		emacspeak-table-goto-left
=		emacspeak-table-speak-dimensions
>		emacspeak-table-goto-right
A		emacspeak-table-goto-left
B		emacspeak-table-goto-bottom
C		emacspeak-table-search-column
E		emacspeak-table-goto-right
Q		emacspeak-kill-buffer-quietly
R		emacspeak-table-search-row
T		emacspeak-table-goto-top
a		emacspeak-table-select-automatic-speaking-method
b		emacspeak-table-speak-both-headers-and-element
c		emacspeak-table-speak-column-header-and-element
f		emacspeak-table-speak-row-filtered
g		emacspeak-table-speak-column-filtered
h		emacspeak-table-search-headers
j		emacspeak-table-goto
k		emacspeak-table-copy-to-clipboard
n		emacspeak-table-next-row
p		emacspeak-table-previous-row
q		quit-window
r		emacspeak-table-speak-row-header-and-element
s		emacspeak-table-search
v		emacspeak-table-view-csv-buffer
w		emacspeak-table-copy-current-element-to-kill-ring
x		emacspeak-table-copy-current-element-to-register
S-<tab>		emacspeak-table-previous-column
<down>		emacspeak-table-next-row
<left>		emacspeak-table-previous-column
<right>		emacspeak-table-next-column
<up>		emacspeak-table-previous-row

M-<		emacspeak-table-goto-top
M->		emacspeak-table-goto-bottom
M-l		emacspeak-table-ui-filter-load
M-s		emacspeak-table-ui-filter-save

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-table-mode-hook’, as the final
or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-table-next-column
@deffn {Command} emacspeak-table-next-column  (&optional count)
@table @kbd
@item C-e C-t TAB
@kindex C-e C-t TAB
@item C-e C-t C-f
@kindex C-e C-t C-f
@item C-e C-t <right>
@kindex C-e C-t <right>
@end table

@findex emacspeak-table-next-column

@format
Move to the next column if possible

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-table-next-row
@deffn {Command} emacspeak-table-next-row  (&optional count)
@table @kbd
@item C-e C-t n
@kindex C-e C-t n
@item C-e C-t C-n
@kindex C-e C-t C-n
@item C-e C-t <down>
@kindex C-e C-t <down>
@end table

@findex emacspeak-table-next-row

@format
Move to the next row if possible

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-table-paste-from-clipboard
@deffn {Command} emacspeak-table-paste-from-clipboard   
@findex emacspeak-table-paste-from-clipboard

@format
Paste the emacspeak table clipboard into the current buffer.
Use the major  mode of this buffer to  decide what kind of table
markup to use.
@end format
@end deffn

@subsubsection emacspeak-table-previous-column
@deffn {Command} emacspeak-table-previous-column  (&optional count)
@table @kbd
@item C-e C-t C-b
@kindex C-e C-t C-b
@item C-e C-t <left>
@kindex C-e C-t <left>
@item C-e C-t S-<tab>
@kindex C-e C-t S-<tab>
@end table

@findex emacspeak-table-previous-column

@format
Move to the previous column  if possible

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-table-previous-row
@deffn {Command} emacspeak-table-previous-row  (&optional count)
@table @kbd
@item C-e C-t p
@kindex C-e C-t p
@item C-e C-t C-p
@kindex C-e C-t C-p
@item C-e C-t <up>
@kindex C-e C-t <up>
@end table

@findex emacspeak-table-previous-row

@format
Move to the previous row if possible

(fn &optional COUNT)
@end format
@end deffn

@subsubsection emacspeak-table-search
@deffn {Command} emacspeak-table-search  (&optional what)
@table @kbd
@item C-e C-t s
@kindex C-e C-t s
@end table

@findex emacspeak-table-search

@format
Search the table for matching elements.  Interactively prompts for
row or column to search and pattern to look for.    If there is a match, makes
the matching cell current. When called from a program, ‘what’ can
  be either ‘row’ or ‘column’.

(fn &optional WHAT)
@end format
@end deffn

@subsubsection emacspeak-table-search-column
@deffn {Command} emacspeak-table-search-column   
@table @kbd
@item C-e C-t C
@kindex C-e C-t C
@end table

@findex emacspeak-table-search-column

@format
Search in current table column.
@end format
@end deffn

@subsubsection emacspeak-table-search-headers
@deffn {Command} emacspeak-table-search-headers   
@table @kbd
@item C-e C-t h
@kindex C-e C-t h
@end table

@findex emacspeak-table-search-headers

@format
Search the table row or column headers.  Interactively prompts for
row or column to search and pattern to look for.  If there is a
match, makes the matching row or column current.
@end format
@end deffn

@subsubsection emacspeak-table-search-row
@deffn {Command} emacspeak-table-search-row   
@table @kbd
@item C-e C-t R
@kindex C-e C-t R
@end table

@findex emacspeak-table-search-row

@format
Search in current table row.
@end format
@end deffn

@subsubsection emacspeak-table-select-automatic-speaking-method
@deffn {Command} emacspeak-table-select-automatic-speaking-method   
@table @kbd
@item C-e C-t a
@kindex C-e C-t a
@end table

@findex emacspeak-table-select-automatic-speaking-method

@format
Interactively select the kind of automatic speech to produce when
browsing table elements
@end format
@end deffn

@subsubsection emacspeak-table-sort-on-current-column
@deffn {Command} emacspeak-table-sort-on-current-column   
@table @kbd
@item C-e C-t #
@kindex C-e C-t #
@end table

@findex emacspeak-table-sort-on-current-column

@format
Sort table on current column. 
@end format
@end deffn

@subsubsection emacspeak-table-speak-both-headers-and-element
@deffn {Command} emacspeak-table-speak-both-headers-and-element   
@table @kbd
@item C-e C-t b
@kindex C-e C-t b
@end table

@findex emacspeak-table-speak-both-headers-and-element

@format
Speak  both row and column header and table element
@end format
@end deffn

@subsubsection emacspeak-table-speak-column-filtered
@deffn {Command} emacspeak-table-speak-column-filtered  (&optional prefix)
@table @kbd
@item C-e C-t g
@kindex C-e C-t g
@end table

@findex emacspeak-table-speak-column-filtered

@format
Speaks a table column after applying a specified column filter.
Optional prefix arg prompts for a new filter.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-table-speak-column-header-and-element
@deffn {Command} emacspeak-table-speak-column-header-and-element   
@table @kbd
@item C-e C-t c
@kindex C-e C-t c
@end table

@findex emacspeak-table-speak-column-header-and-element

@format
Speak  column header and table element
@end format
@end deffn

@subsubsection emacspeak-table-speak-coordinates
@deffn {Command} emacspeak-table-speak-coordinates   
@table @kbd
@item C-e C-t .
@kindex C-e C-t .
@end table

@findex emacspeak-table-speak-coordinates

@format
Speak current table coordinates.
@end format
@end deffn

@subsubsection emacspeak-table-speak-current-element
@deffn {Command} emacspeak-table-speak-current-element   
@table @kbd
@item C-e C-t SPC
@kindex C-e C-t SPC
@end table

@findex emacspeak-table-speak-current-element

@format
Speak current table element
@end format
@end deffn

@subsubsection emacspeak-table-speak-dimensions
@deffn {Command} emacspeak-table-speak-dimensions   
@table @kbd
@item C-e C-t =
@kindex C-e C-t =
@end table

@findex emacspeak-table-speak-dimensions

@format
Speak current table dimensions.
@end format
@end deffn

@subsubsection emacspeak-table-speak-row-filtered
@deffn {Command} emacspeak-table-speak-row-filtered  (&optional prefix)
@table @kbd
@item C-e C-t f
@kindex C-e C-t f
@end table

@findex emacspeak-table-speak-row-filtered

@format
Speaks a table row after applying a specified row filter.
Optional prefix arg prompts for a new filter.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-table-speak-row-header-and-element
@deffn {Command} emacspeak-table-speak-row-header-and-element   
@table @kbd
@item C-e C-t r
@kindex C-e C-t r
@end table

@findex emacspeak-table-speak-row-header-and-element

@format
Speak  row header and table element
@end format
@end deffn

@subsubsection emacspeak-table-ui-filter-load
@deffn {Command} emacspeak-table-ui-filter-load  (file)
@table @kbd
@item C-e C-t M-l
@kindex C-e C-t M-l
@end table

@findex emacspeak-table-ui-filter-load

@format
Load saved filter settings.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-table-ui-filter-save
@deffn {Command} emacspeak-table-ui-filter-save  (file)
@table @kbd
@item C-e C-t M-s
@kindex C-e C-t M-s
@end table

@findex emacspeak-table-ui-filter-save

@format
Save out filter settings.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-table-view-csv-buffer
@deffn {Command} emacspeak-table-view-csv-buffer  (&optional buffer-name)
@table @kbd
@item C-e C-t v
@kindex C-e C-t v
@end table

@findex emacspeak-table-view-csv-buffer

@format
Process a csv (comma separated values) data.
The processed  data is  presented using emacspeak table navigation. 

(fn &optional BUFFER-NAME)
@end format
@end deffn

@subsubsection emacspeak-table-view-csv-url
@deffn {Command} emacspeak-table-view-csv-url  (url &optional buffer-name)
@findex emacspeak-table-view-csv-url

@format
Process a csv (comma separated values) data at  ‘URL’.
The processed  data is  presented using emacspeak table navigation. 

(fn URL &optional BUFFER-NAME)
@end format
@end deffn

@node emacspeak-tabulate
@section emacspeak-tabulate

This module is a simple table recognizer.
Can recognize the columns in tabulated output, e.g. ps, ls output

@node emacspeak-tabulated-list
@section emacspeak-tabulated-list

TABULATED-LIST ==  tabulated list mode
Speech-enable tabulated lists and provide commands for intelligent
spoken output

@subsection Emacspeak-Tabulated-List Commands

@subsubsection emacspeak-tabulated-list-next-row
@deffn {Command} emacspeak-tabulated-list-next-row   
@findex emacspeak-tabulated-list-next-row

@format
Move to next row and speak that cell
@end format
@end deffn

@subsubsection emacspeak-tabulated-list-previous-row
@deffn {Command} emacspeak-tabulated-list-previous-row   
@findex emacspeak-tabulated-list-previous-row

@format
Move to previous row and speak that cell.
@end format
@end deffn

@subsubsection emacspeak-tabulated-list-speak-cell
@deffn {Command} emacspeak-tabulated-list-speak-cell   
@findex emacspeak-tabulated-list-speak-cell

@format
Speak current cell. 
@end format
@end deffn

@node emacspeak-tar
@section emacspeak-tar

Auditory interface to tar mode

@subsection Emacspeak-Tar Commands

@subsubsection emacspeak-tar-speak-file-date
@deffn {Command} emacspeak-tar-speak-file-date   
@findex emacspeak-tar-speak-file-date

@format
Speak date of file current entry 
@end format
@end deffn

@subsubsection emacspeak-tar-speak-file-permissions
@deffn {Command} emacspeak-tar-speak-file-permissions   
@findex emacspeak-tar-speak-file-permissions

@format
Speak permissions of file current entry 
@end format
@end deffn

@subsubsection emacspeak-tar-speak-file-size
@deffn {Command} emacspeak-tar-speak-file-size   
@findex emacspeak-tar-speak-file-size

@format
Speak size of file current entry 
@end format
@end deffn

@node emacspeak-tcl
@section emacspeak-tcl

Provide additional advice to tcl-mode

@node emacspeak-tempo
@section emacspeak-tempo

tempo.el provides the
infrastructure  for building up templates.
This is used by html-helper-mode to allow for easy writing of HTML
This module extends Emacspeak to provide fluent spoken feedback

@node emacspeak-tetris
@section emacspeak-tetris

Speech-enables tetris.

@subsection Emacspeak-Tetris Commands

@subsubsection emacspeak-tetris-goto-bottom-row
@deffn {Command} emacspeak-tetris-goto-bottom-row   
@findex emacspeak-tetris-goto-bottom-row

@format
Move to and speak bottom row
@end format
@end deffn

@subsubsection emacspeak-tetris-goto-top-row
@deffn {Command} emacspeak-tetris-goto-top-row   
@findex emacspeak-tetris-goto-top-row

@format
Move to and speak the top row
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-column
@deffn {Command} emacspeak-tetris-speak-column  (&optional x)
@findex emacspeak-tetris-speak-column

@format
Speak  column --default is to speak current column

(fn &optional X)
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-coordinates
@deffn {Command} emacspeak-tetris-speak-coordinates   
@findex emacspeak-tetris-speak-coordinates

@format
Speak current position
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-current-shape
@deffn {Command} emacspeak-tetris-speak-current-shape   
@findex emacspeak-tetris-speak-current-shape

@format
Speak current shape
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-current-shape-and-coordinates
@deffn {Command} emacspeak-tetris-speak-current-shape-and-coordinates   
@findex emacspeak-tetris-speak-current-shape-and-coordinates

@format
Speak shape orientation and coordinates
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-next-shape
@deffn {Command} emacspeak-tetris-speak-next-shape   
@findex emacspeak-tetris-speak-next-shape

@format
Speak next shape
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-row
@deffn {Command} emacspeak-tetris-speak-row   
@findex emacspeak-tetris-speak-row

@format
Speak current tetris row
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-row-number
@deffn {Command} emacspeak-tetris-speak-row-number   
@findex emacspeak-tetris-speak-row-number

@format
Speak where on the tetris board we are
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-score
@deffn {Command} emacspeak-tetris-speak-score   
@findex emacspeak-tetris-speak-score

@format
Speak the score
@end format
@end deffn

@subsubsection emacspeak-tetris-speak-x-coordinate
@deffn {Command} emacspeak-tetris-speak-x-coordinate   
@findex emacspeak-tetris-speak-x-coordinate

@format
Speak current position
@end format
@end deffn

@node emacspeak-texinfo
@section emacspeak-texinfo

This module speech enables net-texinfo mode

@node emacspeak-threes
@section emacspeak-threes

THREES == threes game. This module speech-enable the
game. @url{https://en.wikipedia.org/wiki/Threes} for history of the
game and details of game play. This module adds additional
convenience keybindings to the default arrow-key bindings
implemented in threes.el. In addition, this module implements
commands that speak the board as well as getting a column-specific
view of the board.

@table @kbd
@item  f
Move right
@item b
Move left
@item n
Move down
@item p
Move up
@item SPC
Speak the board
@item /
Speak board by column.
@item .
Speak current score.
@item ,
Speak  number of zeros on the board.
@item s
Save current state
@item u
Pop state from stack
@item ?
Speak next tile
@end table
The updated board is spoken after each turn.
The next upcoming tile is spoken after the  current state of the board.
You can use @kbd{SPC} and @kbd{/} to review the board.

@subsection Emacspeak-Threes Commands

@subsubsection emacspeak-threes-0
@deffn {Command} emacspeak-threes-0   
@findex emacspeak-threes-0

@format
Set next tile.
@end format
@end deffn

@subsubsection emacspeak-threes-1
@deffn {Command} emacspeak-threes-1   
@findex emacspeak-threes-1

@format
Set next tile.
@end format
@end deffn

@subsubsection emacspeak-threes-2
@deffn {Command} emacspeak-threes-2   
@findex emacspeak-threes-2

@format
Set next tile.
@end format
@end deffn

@subsubsection emacspeak-threes-3
@deffn {Command} emacspeak-threes-3   
@findex emacspeak-threes-3

@format
Set next tile.
@end format
@end deffn

@subsubsection emacspeak-threes-export
@deffn {Command} emacspeak-threes-export  (&optional prompt)
@findex emacspeak-threes-export

@format
Exports game stack to a file.
Optional interactive prefix arg prompts for a file.
Note that the file is overwritten silently.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-threes-import
@deffn {Command} emacspeak-threes-import  (&optional prompt)
@findex emacspeak-threes-import

@format
Import game.
Optional interactive prefix arg prompts for a filename.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-threes-pop-state
@deffn {Command} emacspeak-threes-pop-state   
@findex emacspeak-threes-pop-state

@format
Reset state from stack.
@end format
@end deffn

@subsubsection emacspeak-threes-prune-stack
@deffn {Command} emacspeak-threes-prune-stack  (drop)
@findex emacspeak-threes-prune-stack

@format
Prune game stack to specified length.

(fn DROP)
@end format
@end deffn

@subsubsection emacspeak-threes-push-state
@deffn {Command} emacspeak-threes-push-state   
@findex emacspeak-threes-push-state

@format
Push current game state on stack.
@end format
@end deffn

@subsubsection emacspeak-threes-score
@deffn {Command} emacspeak-threes-score   
@findex emacspeak-threes-score

@format
Speak the score.
@end format
@end deffn

@subsubsection emacspeak-threes-speak-board
@deffn {Command} emacspeak-threes-speak-board   
@findex emacspeak-threes-speak-board

@format
Speak the board.
@end format
@end deffn

@subsubsection emacspeak-threes-speak-empty-count
@deffn {Command} emacspeak-threes-speak-empty-count   
@findex emacspeak-threes-speak-empty-count

@format
Speak number of cells that are non-empty.
@end format
@end deffn

@subsubsection emacspeak-threes-speak-next
@deffn {Command} emacspeak-threes-speak-next   
@findex emacspeak-threes-speak-next

@format
Speak upcoming tile.
@end format
@end deffn

@subsubsection emacspeak-threes-speak-transposed-board
@deffn {Command} emacspeak-threes-speak-transposed-board   
@findex emacspeak-threes-speak-transposed-board

@format
Speak the board by columns.
@end format
@end deffn

@node emacspeak-tide
@section emacspeak-tide

TIDE ==  Typescript IDE for emacs.
This module speech-enables both tide and typescript-mode.

@node emacspeak-todo-mode
@section emacspeak-todo-mode

todo-mode (part of Emacs 21) provides todo-lists that can be
integrated with the Emacs calendar.
This module speech-enables todo-mode

@node emacspeak-transient
@section emacspeak-transient

TRANSIENT ==  Transient commands --- used by magit and friends.
This module speech-enables transient.

@subsection Introduction

Package Transient is similar to package Hydra in the sense that it
can be used to create a sequence of chained/hierarchical commands
that are invoked via a sequence of keys. It is used by Magit for
dispatching to the various Git commands.  Speech-enabling package
Transient results in the various interactive commands producing
auditory feedback. Transient shows an ephemeral window with the
currently available commands, Emacspeak speech-enables
transient--show to cache that content so it can be browsed if
desired.

Finally, this module defines a new minor mode called
transient-emacspeak  that  enables  interactive browsing of the
contents displayed temporarily. Note that without this
functionality, learning complex packages like Magit would be difficult
because  the list of available commands can be very long.
@subsection Recommended Customizations
I use the following customizations via .custom, adjust to taste,
but use these only after reading the transient info documentations.
@itemize
@item transient-force-single-column: t
@item  transient-show-popup:  1
@item transient-enable-popup-navigation:  t
@end itemize

this pops up the transient buffer after a short delay  and lets
you move through the buttons with the    up/down arrows.
@subsection Browsing Contents Of transient--show

When executing a command defined via Transient --- e.g. command
Magit-dispatch and friends, press @kbd {C-z} (transient-suspend) to
temporarily suspend   the currently active transient. Emacspeak now
displays a  *transient-emacspeak* buffer that displays the contents of the
most recently displayed transient choices. Pressing @kbd {r} resumes
the transient; Pressing @kbd{C-q} quits the transient.

@subsection Emacspeak-Transient Commands

@subsubsection emacspeak-transient-mode
@deffn {Command} emacspeak-transient-mode   
@findex emacspeak-transient-mode

@format
emacspeak integration with Transient.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-transient-mode-hook’, as the
final or penultimate step during initialization.

@end format
@end deffn

@subsubsection emacspeak-transient-next-section
@deffn {Command} emacspeak-transient-next-section   
@findex emacspeak-transient-next-section

@format
Next transient section.
@end format
@end deffn

@subsubsection emacspeak-transient-previous-section
@deffn {Command} emacspeak-transient-previous-section   
@findex emacspeak-transient-previous-section

@format
Previous transient section.
@end format
@end deffn

@node emacspeak-treesit
@section emacspeak-treesit

TREESIT ==  Syntax Trees
Speech-enable treesit navigation commands.

@subsection Emacspeak-Treesit Commands

@subsubsection emacspeak-treesit-inspect
@deffn {Command} emacspeak-treesit-inspect   
@findex emacspeak-treesit-inspect

@format
If inspect-mode is on, speak current node.
@end format
@end deffn

@node emacspeak-typo
@section emacspeak-typo

TYPO == Typographical Editing This module speech-enables typo-mode.
Typo-mode's magic insertion commands are speech-enabled to speak
the inserted char.

@node emacspeak-url-template
@section emacspeak-url-template

It is often useful to have ``parametrized hot list entries''
i.e., hotlist entries that are ``templates'' for the
actual URL.
The user provides values for the parametrized portions
of the URL e.g. the date.
See @xref{URL Templates}, for details on the URL templates
that are presently defined.

@subsection Emacspeak-Url-Template Commands

@subsubsection emacspeak-url-template-fetch
@deffn {Command} emacspeak-url-template-fetch  (&optional documentation)
@table @kbd
@item C-e u
@kindex C-e u
@end table

@findex emacspeak-url-template-fetch

@format
Fetch a pre-defined resource.
Use Emacs completion to obtain a list of available resources.
Resources typically prompt for the relevant information
before completing the request.
Optional interactive prefix arg displays documentation for specified resource.

(fn &optional DOCUMENTATION)
@end format
@end deffn

@subsubsection emacspeak-url-template-help
@deffn {Command} emacspeak-url-template-help   
@findex emacspeak-url-template-help

@format
Display documentation for a URL template.
Use Emacs completion to obtain a list of available
resources.
@end format
@end deffn

@subsubsection emacspeak-url-template-load
@deffn {Command} emacspeak-url-template-load  (file)
@findex emacspeak-url-template-load

@format
Load URL template resources from specified location.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-url-template-nls-add-to-wishlist
@deffn {Command} emacspeak-url-template-nls-add-to-wishlist  (book)
@findex emacspeak-url-template-nls-add-to-wishlist

@format
Add book under point to wishlist.

(fn BOOK)
@end format
@end deffn

@subsubsection emacspeak-url-template-save
@deffn {Command} emacspeak-url-template-save  (file)
@findex emacspeak-url-template-save

@format
Save url templates.

(fn FILE)
@end format
@end deffn

@subsection emacspeak-url-template Options

@defvar {User Option} emacspeak-stock-tickers
Set this to the stock tickers you want to check. Default is
the current fab-7!. Tickers is a list of stock symbols sorted in lexical order
with duplicates removed when saving as a list of string.

Default Value: 

@verbatim

("aapl" "amzn" "goog" "meta" "msft" "nflx" "nvda")

@end verbatim

@end defvar

@node emacspeak-vdiff
@section emacspeak-vdiff

VDIFF ==  vimdiff
Installable from melpa, vdiff enables synchronized movement
through diff buffers without resorting to an extra control-panel
as is the case with ediff.
 In addition to speech-enabling interactive commands and setting
 up face->voice mappings, this module provides commands that speak
 the current hunk. These are bound in @code{vdiff-mode-prefix-map}.
@itemize  @bullet
@item  @code{emacspeak-vdiff-speak-this-hunk} bound to @kbd{SPC}.
@item @code{emacspeak-vdiff-speak-other-hunk} bound to @kbd{C-SPC}.
@item @code{emacspeak-vdiff-speak-other-line} bound to @kbd{l}.
@end itemize

@subsection Emacspeak-Vdiff Commands

@subsubsection emacspeak-vdiff-speak-other-hunk
@deffn {Command} emacspeak-vdiff-speak-other-hunk   
@findex emacspeak-vdiff-speak-other-hunk

@format
Speak corresponding hunk from other buffer.
@end format
@end deffn

@subsubsection emacspeak-vdiff-speak-other-line
@deffn {Command} emacspeak-vdiff-speak-other-line   
@findex emacspeak-vdiff-speak-other-line

@format
Speak corresponding line from other buffer.
@end format
@end deffn

@subsubsection emacspeak-vdiff-speak-this-hunk
@deffn {Command} emacspeak-vdiff-speak-this-hunk   
@findex emacspeak-vdiff-speak-this-hunk

@format
Speak VDiff hunk under point.
@end format
@end deffn

@node emacspeak-vertico
@section emacspeak-vertico

Vertico is a modern completion UI that uses Emacs's native completion engine
This module speech-enables Vertico's UI

@node emacspeak-view
@section emacspeak-view

Provide additional advice to view-mode

@subsection Emacspeak-View Commands

@subsubsection emacspeak-view-line-to-top
@deffn {Command} emacspeak-view-line-to-top   
@findex emacspeak-view-line-to-top

@format
Moves current line to top of window
@end format
@end deffn

@node emacspeak-vm
@section emacspeak-vm

This module extends the mail reader vm.
Uses voice locking for message headers and cited messages

@subsection Emacspeak-Vm Commands

@subsubsection emacspeak-vm-browse-message
@deffn {Command} emacspeak-vm-browse-message   
@findex emacspeak-vm-browse-message

@format
Browse an email message --read it paragraph at a time. 
@end format
@end deffn

@subsubsection emacspeak-vm-catch-up-all-messages
@deffn {Command} emacspeak-vm-catch-up-all-messages   
@findex emacspeak-vm-catch-up-all-messages

@format
Mark all messages in folder to be deleted. Use with caution.
@end format
@end deffn

@subsubsection emacspeak-vm-locate-subject-line
@deffn {Command} emacspeak-vm-locate-subject-line   
@findex emacspeak-vm-locate-subject-line

@format
Locates the subject line in a message being read.
Useful when you’re reading a message
that has been forwarded multiple times.
@end format
@end deffn

@subsubsection emacspeak-vm-mode-line
@deffn {Command} emacspeak-vm-mode-line   
@findex emacspeak-vm-mode-line

@format
VM mode line information. 
@end format
@end deffn

@subsubsection emacspeak-vm-speak-labels
@deffn {Command} emacspeak-vm-speak-labels   
@findex emacspeak-vm-speak-labels

@format
Speak a message’s labels
@end format
@end deffn

@subsubsection emacspeak-vm-speak-message
@deffn {Command} emacspeak-vm-speak-message   
@findex emacspeak-vm-speak-message

@format
Move point to the message body.
@end format
@end deffn

@subsubsection emacspeak-vm-toggle-html-mime-demotion
@deffn {Command} emacspeak-vm-toggle-html-mime-demotion   
@findex emacspeak-vm-toggle-html-mime-demotion

@format
Toggle state of HTML Mime promotion/Demotion.
@end format
@end deffn

@subsubsection emacspeak-vm-yank-header
@deffn {Command} emacspeak-vm-yank-header   
@findex emacspeak-vm-yank-header

@format
Yank specified header into kill ring.
@end format
@end deffn

@subsection emacspeak-vm Options

@defvar {User Option} emacspeak-vm-cal2text
Executable that converts calendar invitations    on
  standard input to plain text.

Default Value: 

@verbatim

"/home/raman/emacs/lisp/emacspeak/etc/cal2text"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-vm-customize-mime-settings
Non-nil will cause Emacspeak to configure VM mime
settings to match what the author of Emacspeak uses.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-vm-pdf2text
Executable that converts PDF on standard input to plain
text using pdftotext.

Default Value: 

@verbatim

"/home/raman/emacs/lisp/emacspeak/etc/pdf2text"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-vm-use-raman-settings
Should VM  use the customizations used by the author of Emacspeak.

Default Value: 

@verbatim

t

@end verbatim

@end defvar

@defvar {User Option} emacspeak-vm-voice-loc
Set this to T if you want messages automatically voice locked.
Note that some badly formed mime messages  cause trouble.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-vterm
@section emacspeak-vterm

VTERM == vterm using native vterm library
@subsection Usage
@itemize
@item Turn on @code{emacspeak-comint-autospeak} for using  the
shell.
@item Turn off @code{emacspeak-comint-autospeak} when using
full-screen ncurses apps like @code{vi}.
@item Use @code{vterm-copy-mode} to review the contents of the
terminal @MDash{} @kbd{C-c C-t}.
@end itemize

@node emacspeak-vuiet
@section emacspeak-vuiet

VUIET ==  Emacs Music Explorer And Player with last.fm integration
This module speech-enables vuiet.

@subsection Emacspeak-Vuiet Commands

@subsubsection emacspeak-vuiet-track-info
@deffn {Command} emacspeak-vuiet-track-info   
@findex emacspeak-vuiet-track-info

@format
Speak current playing state.
@end format
@end deffn

@node emacspeak-wdired
@section emacspeak-wdired

Speech-enable wdired to permit in-place renaming of groups of files.
 required modules

@node emacspeak-we
@section emacspeak-we

we is for webedit
Invoke XSLT to edit/transform Web pages before they get
rendered.
we makes emacspeak's webedit layer independent of a given
Emacs web browser  EWW
This module will use the abstraction provided by browse-url
to handle Web pages.

@subsection Emacspeak-We Commands

@subsubsection emacspeak-we-class-follow-and-filter
@deffn {Command} emacspeak-we-class-follow-and-filter  (class url &optional prompt)
@table @kbd
@item C-e x e y
@kindex C-e x e y
@end table

@findex emacspeak-we-class-follow-and-filter

@format
Follow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

(fn CLASS URL &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-we-class-follow-and-filter-link
@deffn {Command} emacspeak-we-class-follow-and-filter-link  (&optional prompt)
@table @kbd
@item C-e x e v
@kindex C-e x e v
@end table

@findex emacspeak-we-class-follow-and-filter-link

@format
Follow url and point, and filter the result by specified class.
Class can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-we-count-matches
@deffn {Command} emacspeak-we-count-matches  (url locator)
@table @kbd
@item C-e x e C-f
@kindex C-e x e C-f
@end table

@findex emacspeak-we-count-matches

@format
Count matches for locator  in Web page.

(fn URL LOCATOR)
@end format
@end deffn

@subsubsection emacspeak-we-count-nested-tables
@deffn {Command} emacspeak-we-count-nested-tables  (url)
@table @kbd
@item C-e x e C-x
@kindex C-e x e C-x
@end table

@findex emacspeak-we-count-nested-tables

@format
Count nested tables in Web page.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-we-count-tables
@deffn {Command} emacspeak-we-count-tables  (url)
@table @kbd
@item C-e x e C-t
@kindex C-e x e C-t
@end table

@findex emacspeak-we-count-tables

@format
Count  tables in Web page.

(fn URL)
@end format
@end deffn

@subsubsection emacspeak-we-extract-by-class
@deffn {Command} emacspeak-we-extract-by-class  (class url &optional speak)
@table @kbd
@item C-e x e c
@kindex C-e x e c
@end table

@findex emacspeak-we-extract-by-class

@format
Extract elements having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of class values as completion.

(fn CLASS URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-by-class-list
@deffn {Command} emacspeak-we-extract-by-class-list  (classes url &optional speak)
@table @kbd
@item C-e x e C
@kindex C-e x e C
@end table

@findex emacspeak-we-extract-by-class-list

@format
Extract elements having class specified in list ‘classes’ from HTML.
Extracts specified elements from current WWW page and displays it
in a separate buffer.  Interactive use provides list of class
values as completion. 

(fn CLASSES URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-by-id
@deffn {Command} emacspeak-we-extract-by-id  (id url &optional speak)
@table @kbd
@item C-e x e i
@kindex C-e x e i
@end table

@findex emacspeak-we-extract-by-id

@format
Extract elements having specified id attribute from HTML. Extracts
specified elements from current WWW page and displays it in a
separate buffer.  Interactive use prompts for   id values using
completion.

(fn ID URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-by-id-list
@deffn {Command} emacspeak-we-extract-by-id-list  (ids url &optional speak)
@table @kbd
@item C-e x e I
@kindex C-e x e I
@end table

@findex emacspeak-we-extract-by-id-list

@format
Extract elements having id specified in list ‘ids’ from HTML.
Extracts specified elements from current WWW page and displays it in a
separate buffer. Interactive use provides list of id values as completion. 

(fn IDS URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-by-role
@deffn {Command} emacspeak-we-extract-by-role  (role url &optional speak)
@table @kbd
@item C-e x e r
@kindex C-e x e r
@end table

@findex emacspeak-we-extract-by-role

@format
Extract elements having specified role attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of role values as completion.

(fn ROLE URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-matching-urls
@deffn {Command} emacspeak-we-extract-matching-urls  (pattern url &optional speak)
@table @kbd
@item C-e x e u
@kindex C-e x e u
@end table

@findex emacspeak-we-extract-matching-urls

@format
Extracts links whose URL matches pattern.

(fn PATTERN URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-nested-table
@deffn {Command} emacspeak-we-extract-nested-table  (index url &optional speak)
@table @kbd
@item C-e x e x
@kindex C-e x e x
@end table

@findex emacspeak-we-extract-nested-table

@format
Extract nested table specified by ‘table-index’. Default is to
operate on current web page when in a browser buffer; otherwise
prompt for URL. Optional arg ‘speak’ specifies if the result should be
spoken automatically.

(fn INDEX URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-nested-table-list
@deffn {Command} emacspeak-we-extract-nested-table-list  (tables url &optional speak)
@table @kbd
@item C-e x e X
@kindex C-e x e X
@end table

@findex emacspeak-we-extract-nested-table-list

@format
Extract specified list of tables from a Web page.

(fn TABLES URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-speakable
@deffn {Command} emacspeak-we-extract-speakable  (url &optional speak)
@table @kbd
@item C-e x e z
@kindex C-e x e z
@end table

@findex emacspeak-we-extract-speakable

@format
Extract elements having class‘speakable’ from HTML. 

(fn URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-table-by-match
@deffn {Command} emacspeak-we-extract-table-by-match  (match url &optional speak)
@table @kbd
@item C-e x e m
@kindex C-e x e m
@end table

@findex emacspeak-we-extract-table-by-match

@format
Extract table containing  specified match.
 Optional arg url specifies the page to extract content from.

(fn MATCH URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-table-by-position
@deffn {Command} emacspeak-we-extract-table-by-position  (pos url &optional speak)
@table @kbd
@item C-e x e t
@kindex C-e x e t
@end table

@findex emacspeak-we-extract-table-by-position

@format
Extract table at specified pos.
Default is to extract from current page.

(fn POS URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-tables-by-match-list
@deffn {Command} emacspeak-we-extract-tables-by-match-list  (match-list url &optional speak)
@table @kbd
@item C-e x e M
@kindex C-e x e M
@end table

@findex emacspeak-we-extract-tables-by-match-list

@format
Extract specified  tables from a WWW page.
Tables are specified by containing  match pattern
 found in the match list.

(fn MATCH-LIST URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-extract-tables-by-position-list
@deffn {Command} emacspeak-we-extract-tables-by-position-list  (positions url &optional speak)
@table @kbd
@item C-e x e T
@kindex C-e x e T
@end table

@findex emacspeak-we-extract-tables-by-position-list

@format
Extract specified list of nested tables from a WWW page.
Tables are specified by their position in the list
 of nested tables found in the page.

(fn POSITIONS URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-follow-and-extract-main
@deffn {Command} emacspeak-we-follow-and-extract-main  (&optional speak)
@table @kbd
@item C-e x e P
@kindex C-e x e P
@end table

@findex emacspeak-we-follow-and-extract-main

@format
Follow URL, then extract role=main.

(fn &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-follow-and-filter-by-id
@deffn {Command} emacspeak-we-follow-and-filter-by-id  (id prompt)
@table @kbd
@item C-e x e b
@kindex C-e x e b
@end table

@findex emacspeak-we-follow-and-filter-by-id

@format
Follow url and point, and filter the result by specified id.
Id can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

(fn ID PROMPT)
@end format
@end deffn

@subsubsection emacspeak-we-junk-by-class
@deffn {Command} emacspeak-we-junk-by-class  (class url &optional speak)
@table @kbd
@item C-e x e d
@kindex C-e x e d
@end table

@findex emacspeak-we-junk-by-class

@format
Extract elements not having specified class attribute from HTML. Extracts
specified elements from current WWW page and displays it in a separate
buffer. Interactive use provides list of class values as completion.

(fn CLASS URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-junk-by-class-list
@deffn {Command} emacspeak-we-junk-by-class-list  (classes url &optional speak)
@table @kbd
@item C-e x e D
@kindex C-e x e D
@item C-e x e C-c
@kindex C-e x e C-c
@end table

@findex emacspeak-we-junk-by-class-list

@format
Extract elements not having class specified in list ‘classes’ from HTML.
Extracts specified elements from current WWW page and displays it
in a separate buffer.  Interactive use provides list of class
values as completion. 

(fn CLASSES URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-style-filter
@deffn {Command} emacspeak-we-style-filter  (style url &optional speak)
@table @kbd
@item C-e x e S
@kindex C-e x e S
@end table

@findex emacspeak-we-style-filter

@format
Extract elements matching specified style
from HTML.  Extracts specified elements from current WWW
page and displays it in a separate buffer.  Optional arg url
specifies the page to extract contents  from.

(fn STYLE URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-toggle-xsl-keep-result
@deffn {Command} emacspeak-we-toggle-xsl-keep-result   
@table @kbd
@item C-e x e k
@kindex C-e x e k
@end table

@findex emacspeak-we-toggle-xsl-keep-result

@format
Toggle xsl keep result flag.
@end format
@end deffn

@subsubsection emacspeak-we-url-expand-and-execute
@deffn {Command} emacspeak-we-url-expand-and-execute  (&optional prefix)
@table @kbd
@item C-e x e e
@kindex C-e x e e
@end table

@findex emacspeak-we-url-expand-and-execute

@format
Applies buffer-specific URL expander/executor function.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-we-url-rewrite-and-follow
@deffn {Command} emacspeak-we-url-rewrite-and-follow  (&optional prompt)
@table @kbd
@item C-e x e ]
@kindex C-e x e ]
@end table

@findex emacspeak-we-url-rewrite-and-follow

@format
Apply a url rewrite rule as specified in the current buffer
before following link under point.  If no rewrite rule is
defined, first prompt for one.  Rewrite rules are of the
form ‘(from to)’ where from and to are strings.  Typically, the
rewrite rule is automatically set up by Emacspeak tools like
websearch where a rewrite rule is known.  Rewrite rules are
useful in jumping directly to the printer friendly version of an
article for example.  Optional interactive prefix arg prompts for
a rewrite rule even if one is already defined.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-we-xpath-follow-and-filter
@deffn {Command} emacspeak-we-xpath-follow-and-filter  (&optional prompt)
@table @kbd
@item C-e x e p
@kindex C-e x e p
@end table

@findex emacspeak-we-xpath-follow-and-filter

@format
Follow url and point, and filter the result by specified xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-we-xpath-junk-and-follow
@deffn {Command} emacspeak-we-xpath-junk-and-follow  (&optional prompt)
@table @kbd
@item C-e x e C-p
@kindex C-e x e C-p
@end table

@findex emacspeak-we-xpath-junk-and-follow

@format
Follow url and point, and filter the result by junking
elements specified by xpath.
XPath can be set locally for a buffer, and overridden with an
interactive prefix arg. If there is a known rewrite url rule, that is
used as well.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection emacspeak-we-xsl-toggle
@deffn {Command} emacspeak-we-xsl-toggle   
@table @kbd
@item C-e x e o
@kindex C-e x e o
@end table

@findex emacspeak-we-xsl-toggle

@format
Toggle  application of XSL transformations.
@end format
@end deffn

@subsubsection emacspeak-we-xslt-apply
@deffn {Command} emacspeak-we-xslt-apply  (xsl)
@table @kbd
@item C-e x e a
@kindex C-e x e a
@end table

@findex emacspeak-we-xslt-apply

@format
Apply specified transformation to current Web page.

(fn XSL)
@end format
@end deffn

@subsubsection emacspeak-we-xslt-filter
@deffn {Command} emacspeak-we-xslt-filter  (path url &optional speak)
@table @kbd
@item C-e x e f
@kindex C-e x e f
@end table

@findex emacspeak-we-xslt-filter

@format
Extract elements matching specified XPath path locator
from Web page -- default is the current page being viewed.

(fn PATH URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-xslt-junk
@deffn {Command} emacspeak-we-xslt-junk  (path url &optional speak)
@table @kbd
@item C-e x e j
@kindex C-e x e j
@end table

@findex emacspeak-we-xslt-junk

@format
Junk elements matching specified locator.

(fn PATH URL &optional SPEAK)
@end format
@end deffn

@subsubsection emacspeak-we-xslt-select
@deffn {Command} emacspeak-we-xslt-select  (xsl)
@table @kbd
@item C-e x e s
@kindex C-e x e s
@end table

@findex emacspeak-we-xslt-select

@format
Select XSL transformation applied to Web pages before they are displayed .

(fn XSL)
@end format
@end deffn

@subsection emacspeak-we Options

@defvar {User Option} emacspeak-we-filters-rename-buffer
Set to T  if you want the buffer name to contain the applied filter.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-websearch
@section emacspeak-websearch

This module provides utility functions for searching the WWW

@subsection Emacspeak-Websearch Commands

@subsubsection emacspeak-websearch-accessible-google
@deffn {Command} emacspeak-websearch-accessible-google  (query &optional options)
@findex emacspeak-websearch-accessible-google

@format
Use Google Lite (Experimental).
Optional prefix arg prompts for toolbelt options.

(fn QUERY &optional OPTIONS)
@end format
@end deffn

@subsubsection emacspeak-websearch-amazon-search
@deffn {Command} emacspeak-websearch-amazon-search   
@findex emacspeak-websearch-amazon-search

@format
Amazon search.
@end format
@end deffn

@subsubsection emacspeak-websearch-ask-jeeves
@deffn {Command} emacspeak-websearch-ask-jeeves  (query)
@findex emacspeak-websearch-ask-jeeves

@format
Ask Jeeves for the answer.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-biblio-search
@deffn {Command} emacspeak-websearch-biblio-search  (query)
@findex emacspeak-websearch-biblio-search

@format
Search Computer Science Bibliographies.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-dispatch
@deffn {Command} emacspeak-websearch-dispatch   
@table @kbd
@item C-e ?
@kindex C-e ?
@item C-e /
@kindex C-e /
@end table

@findex emacspeak-websearch-dispatch

@format
 Press ‘?’ to list available search engines.
   This interface attempts to speak the most relevant information
   on the result page.
@end format
@end deffn

@subsubsection emacspeak-websearch-foldoc-search
@deffn {Command} emacspeak-websearch-foldoc-search  (query)
@findex emacspeak-websearch-foldoc-search

@format
Perform a FolDoc search. 

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-google
@deffn {Command} emacspeak-websearch-google  (query &optional flag)
@table @kbd
@item C-e RET
@kindex C-e RET
@end table

@findex emacspeak-websearch-google

@format
Perform a Google search.  First optional interactive prefix arg
‘flag’ prompts for additional search options. Second interactive
prefix arg is equivalent to hitting the I’m Feeling Lucky button on Google. 

(fn QUERY &optional FLAG)
@end format
@end deffn

@subsubsection emacspeak-websearch-google-feeling-lucky
@deffn {Command} emacspeak-websearch-google-feeling-lucky  (query)
@findex emacspeak-websearch-google-feeling-lucky

@format
Do a I’m Feeling Lucky Google search.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-google-news
@deffn {Command} emacspeak-websearch-google-news   
@findex emacspeak-websearch-google-news

@format
Invoke Google News url template.
@end format
@end deffn

@subsubsection emacspeak-websearch-google-search-in-date-range
@deffn {Command} emacspeak-websearch-google-search-in-date-range   
@findex emacspeak-websearch-google-search-in-date-range

@format
Use this from inside the calendar to do Google date-range searches.
@end format
@end deffn

@subsubsection emacspeak-websearch-google-with-toolbelt
@deffn {Command} emacspeak-websearch-google-with-toolbelt  (query)
@findex emacspeak-websearch-google-with-toolbelt

@format
Launch Google search with toolbelt.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-gutenberg
@deffn {Command} emacspeak-websearch-gutenberg  (type query)
@findex emacspeak-websearch-gutenberg

@format
Perform an Gutenberg search

(fn TYPE QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-help
@deffn {Command} emacspeak-websearch-help   
@findex emacspeak-websearch-help

@format
Displays key mapping used by Emacspeak Websearch.
@end format
@end deffn

@subsubsection emacspeak-websearch-merriam-webster-search
@deffn {Command} emacspeak-websearch-merriam-webster-search  (query)
@findex emacspeak-websearch-merriam-webster-search

@format
Search the Merriam Webster Dictionary.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-wikipedia-search
@deffn {Command} emacspeak-websearch-wikipedia-search  (query)
@findex emacspeak-websearch-wikipedia-search

@format
Search Wikipedia using Google.
Use URL Template ‘wikipedia at point’ to advantage in the results buffer.

(fn QUERY)
@end format
@end deffn

@subsubsection emacspeak-websearch-youtube-search
@deffn {Command} emacspeak-websearch-youtube-search  (query)
@findex emacspeak-websearch-youtube-search

@format
YouTube search.

(fn QUERY)
@end format
@end deffn

@node emacspeak-webspace
@section emacspeak-webspace

WEBSPACE == Smart Web Gadgets For The Emacspeak Desktop

@subsection Emacspeak-Webspace Commands

@subsubsection emacspeak-webspace-feed-reader
@deffn {Command} emacspeak-webspace-feed-reader  (&optional refresh)
@table @kbd
@item C-. R
@kindex C-. R
@item C-x @@ s R
@kindex C-x @@ s R
@end table

@findex emacspeak-webspace-feed-reader

@format
Display Feed Reader Feed list in a WebSpace buffer.
Optional interactive prefix arg forces a refresh.

(fn &optional REFRESH)
@end format
@end deffn

@subsubsection emacspeak-webspace-filter
@deffn {Command} emacspeak-webspace-filter   
@findex emacspeak-webspace-filter

@format
Open headline at point and filter for content.
@end format
@end deffn

@subsubsection emacspeak-webspace-headlines
@deffn {Command} emacspeak-webspace-headlines   
@findex emacspeak-webspace-headlines

@format
Startup Headlines ticker using RSS/Atom  feeds.
@end format
@end deffn

@subsubsection emacspeak-webspace-headlines-browse
@deffn {Command} emacspeak-webspace-headlines-browse   
@findex emacspeak-webspace-headlines-browse

@format
Display buffer of browsable headlines.
@end format
@end deffn

@subsubsection emacspeak-webspace-headlines-update
@deffn {Command} emacspeak-webspace-headlines-update   
@findex emacspeak-webspace-headlines-update

@format
Setup news updates.
Updated headlines found in emacspeak-webspace-headlines.
@end format
@end deffn

@subsubsection emacspeak-webspace-mode
@deffn {Command} emacspeak-webspace-mode   
@findex emacspeak-webspace-mode

@format
Major mode for Webspace interaction.

Key             Binding
-------------------------------------------------------------------------------
TAB		forward-button
'		emacspeak-speak-rest-of-buffer
.		emacspeak-webspace-filter
/		search-forward
<		beginning-of-buffer
>		end-of-buffer
?		search-backward
b		backward-button
f		forward-button
n		forward-button
p		backward-button
q		bury-buffer
y		emacspeak-webspace-yank-link
<backtab>	backward-button

C-M-i		backward-button

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-webspace-mode-hook’, as the
final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-webspace-open
@deffn {Command} emacspeak-webspace-open   
@findex emacspeak-webspace-open

@format
Open headline at point by following its link property.
@end format
@end deffn

@subsubsection emacspeak-webspace-yank-link
@deffn {Command} emacspeak-webspace-yank-link   
@findex emacspeak-webspace-yank-link

@format
Yank link under point into kill ring.
@end format
@end deffn

@subsection emacspeak-webspace Options

@defvar {User Option} emacspeak-webspace-feeds
Feeds to use in Headline Ticker.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node emacspeak-widget
@section emacspeak-widget

This module implements the necessary extensions to provide talking
widgets.

 required modules

@subsection Emacspeak-Widget Commands

@subsubsection emacspeak-widget-browse-widget-interactively
@deffn {Command} emacspeak-widget-browse-widget-interactively   
@findex emacspeak-widget-browse-widget-interactively

@format
Allows you to browse a widget
@end format
@end deffn

@subsubsection emacspeak-widget-help
@deffn {Command} emacspeak-widget-help   
@findex emacspeak-widget-help

@format
Speak help for widget under point.
@end format
@end deffn

@subsubsection emacspeak-widget-summarize-parent
@deffn {Command} emacspeak-widget-summarize-parent   
@findex emacspeak-widget-summarize-parent

@format
Summarize parent of widget at point.
@end format
@end deffn

@subsubsection emacspeak-widget-summarize-widget-under-point
@deffn {Command} emacspeak-widget-summarize-widget-under-point  (&optional level)
@findex emacspeak-widget-summarize-widget-under-point

@format
Summarize a widget if any under point.
Optional interactive prefix specifies how many levels to go up from current
widget before summarizing.

(fn &optional LEVEL)
@end format
@end deffn

@subsubsection emacspeak-widget-update-from-minibuffer
@deffn {Command} emacspeak-widget-update-from-minibuffer  (pos)
@findex emacspeak-widget-update-from-minibuffer

@format
Sets widget at ‘pos’ by invoking its prompter.

(fn POS)
@end format
@end deffn

@node emacspeak-windmove
@section emacspeak-windmove

Package  windmove (bundled with Emacs 21)
provides commands for navigating to windows based on
relative position.

 required modules

@node emacspeak-winring
@section emacspeak-winring

window configurations in emacs are very useful
you can display the same file in different windows,
and have different  portions of the file displayed.
winring allows you to manage window configurations,
and this module speech-enables it.

@node emacspeak-wizards
@section emacspeak-wizards

Contains various wizards for the Emacspeak desktop.

@subsection Emacspeak-Wizards Commands

@subsubsection emacspeak-brightness-alert-toggle
@deffn {Command} emacspeak-brightness-alert-toggle   
@findex emacspeak-brightness-alert-toggle

@format
Toggle brightness alert.
@end format
@end deffn

@subsubsection emacspeak-brightness-autoblack-toggle
@deffn {Command} emacspeak-brightness-autoblack-toggle   
@findex emacspeak-brightness-autoblack-toggle

@format
Toggle brightness autoblack.
@end format
@end deffn

@subsubsection emacspeak-copy-current-file
@deffn {Command} emacspeak-copy-current-file   
@table @kbd
@item C-e M-c
@kindex C-e M-c
@end table

@findex emacspeak-copy-current-file

@format
Copy file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when copying.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Asks for confirmation if the copy will result in an
  existing file being overwritten.
@end format
@end deffn

@subsubsection emacspeak-customize
@deffn {Command} emacspeak-customize   
@table @kbd
@item C-e C
@kindex C-e C
@end table

@findex emacspeak-customize

@format
Customize Emacspeak.
@end format
@end deffn

@subsubsection emacspeak-describe-emacspeak
@deffn {Command} emacspeak-describe-emacspeak   
@table @kbd
@item C-h C-e
@kindex C-h C-e
@item <f1> C-e
@kindex <f1> C-e
@item <help> C-e
@kindex <help> C-e
@end table

@findex emacspeak-describe-emacspeak

@format
Give a brief overview of emacspeak.
@end format
@end deffn

@subsubsection emacspeak-kill-buffer-quietly
@deffn {Command} emacspeak-kill-buffer-quietly   
@table @kbd
@item C-e C-t Q
@kindex C-e C-t Q
@end table

@findex emacspeak-kill-buffer-quietly

@format
Kill current buffer without  confirmation.
@end format
@end deffn

@subsubsection emacspeak-learn-emacs
@deffn {Command} emacspeak-learn-emacs   
@table @kbd
@item C-e <f1>
@kindex C-e <f1>
@item C-h C-l
@kindex C-h C-l
@item <f1> C-l
@kindex <f1> C-l
@item <help> C-l
@kindex <help> C-l
@end table

@findex emacspeak-learn-emacs

@format
Helps you learn the keys.  You can press keys and hear what they do.
To leave, press C-g.
@end format
@end deffn

@subsubsection emacspeak-link-current-file
@deffn {Command} emacspeak-link-current-file   
@findex emacspeak-link-current-file

@format
Link (hard link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists.
@end format
@end deffn

@subsubsection emacspeak-next-frame-or-buffer
@deffn {Command} emacspeak-next-frame-or-buffer  (&optional frame)
@findex emacspeak-next-frame-or-buffer

@format
Move to next buffer.
With optional interactive prefix arg ‘frame’, move to next frame instead.

(fn &optional FRAME)
@end format
@end deffn

@subsubsection emacspeak-previous-frame-or-buffer
@deffn {Command} emacspeak-previous-frame-or-buffer  (&optional frame)
@findex emacspeak-previous-frame-or-buffer

@format
Move to previous buffer.
With optional interactive prefix arg ‘frame’, move to previous frame instead.

(fn &optional FRAME)
@end format
@end deffn

@subsubsection emacspeak-select-this-buffer-next-display
@deffn {Command} emacspeak-select-this-buffer-next-display   
@table @kbd
@item C-e C-<right>
@kindex C-e C-<right>
@end table

@findex emacspeak-select-this-buffer-next-display

@format
Select this buffer as displayed in a ‘next’ frame.
See documentation for command
‘emacspeak-select-this-buffer-other-window-display’ for the
meaning of ‘next’.
@end format
@end deffn

@subsubsection emacspeak-select-this-buffer-other-window-display
@deffn {Command} emacspeak-select-this-buffer-other-window-display  (&optional arg)
@findex emacspeak-select-this-buffer-other-window-display

@format
Switch to this buffer as displayed in a different frame.
Emacs allows you to display the same buffer in multiple windows
or frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a book
open at multiple places at once.  

(fn &optional ARG)
@end format
@end deffn

@subsubsection emacspeak-select-this-buffer-previous-display
@deffn {Command} emacspeak-select-this-buffer-previous-display   
@table @kbd
@item C-e C-<left>
@kindex C-e C-<left>
@end table

@findex emacspeak-select-this-buffer-previous-display

@format
Select this buffer as displayed in a ‘previous’ window.
See documentation for command
‘emacspeak-select-this-buffer-other-window-display’ for the
meaning of ‘previous’.
@end format
@end deffn

@subsubsection emacspeak-show-property-at-point
@deffn {Command} emacspeak-show-property-at-point  (&optional property)
@table @kbd
@item C-e M-p
@kindex C-e M-p
@end table

@findex emacspeak-show-property-at-point

@format
Show value of PROPERTY at point.
If optional arg property is not supplied, read it interactively. 

(fn &optional PROPERTY)
@end format
@end deffn

@subsubsection emacspeak-show-style-at-point
@deffn {Command} emacspeak-show-style-at-point   
@table @kbd
@item C-e M-v
@kindex C-e M-v
@end table

@findex emacspeak-show-style-at-point

@format
Show value of property personality (and possibly face) at point.
@end format
@end deffn

@subsubsection emacspeak-skip-blank-lines-backward
@deffn {Command} emacspeak-skip-blank-lines-backward   
@table @kbd
@item S-<up>
@kindex S-<up>
@end table

@findex emacspeak-skip-blank-lines-backward

@format
Move backward  across blank lines, then speak line. 
@end format
@end deffn

@subsubsection emacspeak-skip-blank-lines-forward
@deffn {Command} emacspeak-skip-blank-lines-forward   
@table @kbd
@item S-<down>
@kindex S-<down>
@end table

@findex emacspeak-skip-blank-lines-forward

@format
Move forward across blank lines, then speak line.

@end format
@end deffn

@subsubsection emacspeak-skip-space-backward
@deffn {Command} emacspeak-skip-space-backward   
@table @kbd
@item S-<left>
@kindex S-<left>
@end table

@findex emacspeak-skip-space-backward

@format
Skip back across blanks.
@end format
@end deffn

@subsubsection emacspeak-skip-space-forwar
@deffn {Command} emacspeak-skip-space-forwar   
@table @kbd
@item S-<right>
@kindex S-<right>
@end table

@findex emacspeak-skip-space-forwar

@format
Skip forward across blanks.
@end format
@end deffn

@subsubsection emacspeak-speak-hostname
@deffn {Command} emacspeak-speak-hostname   
@table @kbd
@item C-e M-h
@kindex C-e M-h
@end table

@findex emacspeak-speak-hostname

@format
Speak host name.
@end format
@end deffn

@subsubsection emacspeak-speak-popup-messages
@deffn {Command} emacspeak-speak-popup-messages   
@table @kbd
@item C-h M
@kindex C-h M
@item <f1> M
@kindex <f1> M
@item <help> M
@kindex <help> M
@end table

@findex emacspeak-speak-popup-messages

@format
Pop up Messages  and switch to it.
@end format
@end deffn

@subsubsection emacspeak-speak-telephone-directory
@deffn {Command} emacspeak-speak-telephone-directory  (&optional edit)
@table @kbd
@item C-e x t
@kindex C-e x t
@end table

@findex emacspeak-speak-telephone-directory

@format
Lookup and display a phone number.
With prefix arg, opens the phone book for editing.

(fn &optional EDIT)
@end format
@end deffn

@subsubsection emacspeak-speak-this-buffer-next-display
@deffn {Command} emacspeak-speak-this-buffer-next-display   
@table @kbd
@item C-e <right>
@kindex C-e <right>
@end table

@findex emacspeak-speak-this-buffer-next-display

@format
Speak this buffer as displayed in a ‘previous’ window.
See documentation for command
‘emacspeak-speak-this-buffer-other-window-display’ for the
meaning of ‘next’.
@end format
@end deffn

@subsubsection emacspeak-speak-this-buffer-other-window-display
@deffn {Command} emacspeak-speak-this-buffer-other-window-display  (window)
@table @kbd
@item C-e C-/
@kindex C-e C-/
@end table

@findex emacspeak-speak-this-buffer-other-window-display

@format
Speak this buffer as displayed in a different frame or window.  Emacs
allows you to display the same buffer in multiple windows or
frames.  These different windows can display different
portions of the buffer.  This is equivalent to leaving a
book open at places at once.  This command allows you to
listen to the places where you have left the book open.  

(fn WINDOW)
@end format
@end deffn

@subsubsection emacspeak-speak-this-buffer-previous-display
@deffn {Command} emacspeak-speak-this-buffer-previous-display   
@table @kbd
@item C-e <left>
@kindex C-e <left>
@end table

@findex emacspeak-speak-this-buffer-previous-display

@format
Speak this buffer as displayed in a ‘previous’ window.
See documentation for command
‘emacspeak-speak-this-buffer-other-window-display’ for the
meaning of ‘previous’.
@end format
@end deffn

@subsubsection emacspeak-symlink-current-file
@deffn {Command} emacspeak-symlink-current-file   
@table @kbd
@item C-e M-s
@kindex C-e M-s
@end table

@findex emacspeak-symlink-current-file

@format
Link (symbolic link) file visited in current buffer to new location.
Prompts for the new location and preserves modification time
  when linking.  If location is a directory, the file is copied
  to that directory under its current name ; if location names
  a file in an existing directory, the specified name is
  used.  Signals an error if target already exists.
@end format
@end deffn

@subsubsection emacspeak-view-emacspeak-news
@deffn {Command} emacspeak-view-emacspeak-news   
@table @kbd
@item C-e N
@kindex C-e N
@end table

@findex emacspeak-view-emacspeak-news

@format
Display emacspeak News for a given version.
@end format
@end deffn

@subsubsection emacspeak-view-emacspeak-tips
@deffn {Command} emacspeak-view-emacspeak-tips   
@table @kbd
@item C-e T
@kindex C-e T
@end table

@findex emacspeak-view-emacspeak-tips

@format
Browse  Emacspeak productivity tips.
@end format
@end deffn

@subsubsection emacspeak-wizards-bbc-iplayer
@deffn {Command} emacspeak-wizards-bbc-iplayer   
@findex emacspeak-wizards-bbc-iplayer

@format
Browse BBC Schedule from get_iplayer radio cache.
Bug: First run fails to bind keys.   Works on subsequent runs.
@end format
@end deffn

@subsubsection emacspeak-wizards-bbc-sounds
@deffn {Command} emacspeak-wizards-bbc-sounds   
@table @kbd
@item C-; b
@kindex C-; b
@item C-x @@ h b
@kindex C-x @@ h b
@end table

@findex emacspeak-wizards-bbc-sounds

@format
Search BBC Sounds.
Result page is filtered down to two sections, Shows and Episodes.

Press [RET] on links in the Show section to open that show page.
The page for that show contains playable links for Episodes.

Press ‘y’ on Episode links to play them with MPV.
@end format
@end deffn

@subsubsection emacspeak-wizards-cleanup-shell-path
@deffn {Command} emacspeak-wizards-cleanup-shell-path   
@findex emacspeak-wizards-cleanup-shell-path

@format
Cleans up duplicates in shell path env variable.
@end format
@end deffn

@subsubsection emacspeak-wizards-color-at-point
@deffn {Command} emacspeak-wizards-color-at-point   
@table @kbd
@item C-h ,
@kindex C-h ,
@item <f1> ,
@kindex <f1> ,
@item <help> ,
@kindex <help> ,
@end table

@findex emacspeak-wizards-color-at-point

@format
Echo foreground/background color at point.
@end format
@end deffn

@subsubsection emacspeak-wizards-color-diff-at-point
@deffn {Command} emacspeak-wizards-color-diff-at-point  (&optional set)
@table @kbd
@item C-h \
@kindex C-h \
@item <f1> \
@kindex <f1> \
@item <help> \
@kindex <help> \
@end table

@findex emacspeak-wizards-color-diff-at-point

@format
Speak difference between background and foreground color at point.
With interactive prefix arg, set foreground and background color first.

(fn &optional SET)
@end format
@end deffn

@subsubsection emacspeak-wizards-color-wheel
@deffn {Command} emacspeak-wizards-color-wheel  (start)
@table @kbd
@item C-e x C-c
@kindex C-e x C-c
@end table

@findex emacspeak-wizards-color-wheel

@format
Manipulate a simple color wheel and display the name and shade
  of the resulting color.  Prompts for a color from which to
  start exploration.

Keyboard Commands During Interaction:
Up/Down: Increase/Decrement along current axis using specified step-size.
=: Set value on current axis to number read from minibuffer.
Left/Right: Switch color axis along which to move.
b/f: Quit  wheel after setting background/foreground color to current value.
n: Read color name from minibuffer.
c: Complement  current color.
s: Set stepsize to number read from minibuffer.
q: Quit color wheel, after copying current hex value to kill-ring.

(fn START)
@end format
@end deffn

@subsubsection emacspeak-wizards-colors
@deffn {Command} emacspeak-wizards-colors   
@table @kbd
@item C-e x M-c
@kindex C-e x M-c
@end table

@findex emacspeak-wizards-colors

@format
Display list of colors and setup a callback to activate color
under point as either the foreground or background color.
@end format
@end deffn

@subsubsection emacspeak-wizards-comma-at-end-of-word
@deffn {Command} emacspeak-wizards-comma-at-end-of-word   
@findex emacspeak-wizards-comma-at-end-of-word

@format
Move to the end of current word and add a comma.
@end format
@end deffn

@subsubsection emacspeak-wizards-count-slides-in-region
@deffn {Command} emacspeak-wizards-count-slides-in-region  (start end)
@findex emacspeak-wizards-count-slides-in-region

@format
Count slides starting from point.

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-wizards-customize-saved
@deffn {Command} emacspeak-wizards-customize-saved  (pattern)
@table @kbd
@item C-h C-s
@kindex C-h C-s
@item <f1> C-s
@kindex <f1> C-s
@item <help> C-s
@kindex <help> C-s
@end table

@findex emacspeak-wizards-customize-saved

@format
Customize saved options matching ‘pattern’.  This command enables
updating custom settings for a specific package or group of packages.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-wizards-describe-voice
@deffn {Command} emacspeak-wizards-describe-voice  (personality)
@table @kbd
@item C-h C-v
@kindex C-h C-v
@item <f1> C-v
@kindex <f1> C-v
@item <help> C-v
@kindex <help> C-v
@end table

@findex emacspeak-wizards-describe-voice

@format
Describe  voice --- analogous to C-h /.
When called interactively, ‘personality’ defaults to first
personality at point. 

(fn PERSONALITY)
@end format
@end deffn

@subsubsection emacspeak-wizards-end-of-word
@deffn {Command} emacspeak-wizards-end-of-word  (arg)
@findex emacspeak-wizards-end-of-word

@format
move to end of word

(fn ARG)
@end format
@end deffn

@subsubsection emacspeak-wizards-enumerate-matching-commands
@deffn {Command} emacspeak-wizards-enumerate-matching-commands  (pattern)
@findex emacspeak-wizards-enumerate-matching-commands

@format
Return list of commands whose names match pattern.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-wizards-enumerate-matching-faces
@deffn {Command} emacspeak-wizards-enumerate-matching-faces  (pattern)
@findex emacspeak-wizards-enumerate-matching-faces

@format
Enumerate  faces matching pattern.

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-wizards-enumerate-uncovered-commands
@deffn {Command} emacspeak-wizards-enumerate-uncovered-commands  (pattern &optional bound)
@findex emacspeak-wizards-enumerate-uncovered-commands

@format
Enumerate unadvised commands matching pattern.
Optional interactive prefix arg ‘bound’
filters out commands that dont have an active key-binding.

(fn PATTERN &optional BOUND)
@end format
@end deffn

@subsubsection emacspeak-wizards-enumerate-undefined-faces
@deffn {Command} emacspeak-wizards-enumerate-undefined-faces   
@findex emacspeak-wizards-enumerate-undefined-faces

@format
utility function to enumerate possibly old, obsolete maps that we have still
mapped to voices.
@end format
@end deffn

@subsubsection emacspeak-wizards-enumerate-unmapped-faces
@deffn {Command} emacspeak-wizards-enumerate-unmapped-faces  (&optional pattern)
@findex emacspeak-wizards-enumerate-unmapped-faces

@format
Enumerate unmapped faces matching pattern.

(fn &optional PATTERN)
@end format
@end deffn

@subsubsection emacspeak-wizards-espeak-line
@deffn {Command} emacspeak-wizards-espeak-line   
@findex emacspeak-wizards-espeak-line

@format
Speak line using espeak polyglot wizard.
@end format
@end deffn

@subsubsection emacspeak-wizards-espeak-region
@deffn {Command} emacspeak-wizards-espeak-region  (start end)
@findex emacspeak-wizards-espeak-region

@format
Speak region using ESpeak polyglot wizard.

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-wizards-espeak-string
@deffn {Command} emacspeak-wizards-espeak-string  (string)
@findex emacspeak-wizards-espeak-string

@format
Speak string in lang via ESpeak.
Lang is obtained from property ‘lang’ on string, or via an
interactive prompt.

(fn STRING)
@end format
@end deffn

@subsubsection emacspeak-wizards-eww-buffer-list
@deffn {Command} emacspeak-wizards-eww-buffer-list   
@table @kbd
@item C-z e
@kindex C-z e
@item C-e z e
@kindex C-e z e
@end table

@findex emacspeak-wizards-eww-buffer-list

@format
Display list of  EWW buffers.
@end format
@end deffn

@subsubsection emacspeak-wizards-exec-path-from-shell
@deffn {Command} emacspeak-wizards-exec-path-from-shell   
@findex emacspeak-wizards-exec-path-from-shell

@format
Update exec-path from shell path.
@end format
@end deffn

@subsubsection emacspeak-wizards-execute-asynchronously
@deffn {Command} emacspeak-wizards-execute-asynchronously  (key)
@findex emacspeak-wizards-execute-asynchronously

@format
Read key-sequence, then execute its command on a new thread.

(fn KEY)
@end format
@end deffn

@subsubsection emacspeak-wizards-find-file-as-root
@deffn {Command} emacspeak-wizards-find-file-as-root  (file)
@table @kbd
@item C-; r
@kindex C-; r
@item C-x @@ h r
@kindex C-x @@ h r
@end table

@findex emacspeak-wizards-find-file-as-root

@format
Automatically edit file with root-privileges (using
tramp/sudo), if the file is not writable by user.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-wizards-find-longest-line-in-region
@deffn {Command} emacspeak-wizards-find-longest-line-in-region  (start end)
@table @kbd
@item C-e x =
@kindex C-e x =
@end table

@findex emacspeak-wizards-find-longest-line-in-region

@format
Find longest line in region and move to it. 

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-wizards-find-longest-paragraph-in-region
@deffn {Command} emacspeak-wizards-find-longest-paragraph-in-region  (start end)
@findex emacspeak-wizards-find-longest-paragraph-in-region

@format
Find longest paragraph in region, and move to it. 

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-wizards-find-shortest-line-in-region
@deffn {Command} emacspeak-wizards-find-shortest-line-in-region  (start end)
@findex emacspeak-wizards-find-shortest-line-in-region

@format
Find shortest line in region.
Moves to the shortest line when called interactively.

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-wizards-frame-colors
@deffn {Command} emacspeak-wizards-frame-colors   
@findex emacspeak-wizards-frame-colors

@format
Display frame’s foreground/background color setting.
@end format
@end deffn

@subsubsection emacspeak-wizards-free-geo-ip
@deffn {Command} emacspeak-wizards-free-geo-ip  (&optional reverse-geocode)
@findex emacspeak-wizards-free-geo-ip

@format
Return list consisting of city and region_name.
Optional interactive prefix arg reverse-geocodes using Google Maps.

(fn &optional REVERSE-GEOCODE)
@end format
@end deffn

@subsubsection emacspeak-wizards-gen-fn-decl
@deffn {Command} emacspeak-wizards-gen-fn-decl  (f &optional ext)
@findex emacspeak-wizards-gen-fn-decl

@format
Generate declare-function call for function ‘f’.
Optional interactive prefix arg ext says this comes from an
external package.

(fn F &optional EXT)
@end format
@end deffn

@subsubsection emacspeak-wizards-google-headlines
@deffn {Command} emacspeak-wizards-google-headlines   
@table @kbd
@item C-. C-n
@kindex C-. C-n
@item C-x @@ s C-n
@kindex C-x @@ s C-n
@end table

@findex emacspeak-wizards-google-headlines

@format
Display just the headlines from Google News.
@end format
@end deffn

@subsubsection emacspeak-wizards-google-news
@deffn {Command} emacspeak-wizards-google-news   
@table @kbd
@item C-. n
@kindex C-. n
@item C-x @@ s n
@kindex C-x @@ s n
@end table

@findex emacspeak-wizards-google-news

@format
Clean up news.google.com.
@end format
@end deffn

@subsubsection emacspeak-wizards-how-many-matches
@deffn {Command} emacspeak-wizards-how-many-matches  (start end &optional prefix)
@table @kbd
@item C-e x h
@kindex C-e x h
@end table

@findex emacspeak-wizards-how-many-matches

@format
If you define a file local variable
called ‘emacspeak-occur-pattern’ that holds a regular expression
that matches  lines of interest, you can use this command to
run ‘how-many’ to count  matching header lines.
With interactive prefix arg, prompts for and remembers the file local pattern.

(fn START END &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-wizards-lacheck-buffer-file
@deffn {Command} emacspeak-wizards-lacheck-buffer-file   
@findex emacspeak-wizards-lacheck-buffer-file

@format
Run Lacheck on current buffer.
@end format
@end deffn

@subsubsection emacspeak-wizards-locate-content
@deffn {Command} emacspeak-wizards-locate-content  (pattern)
@table @kbd
@item C-. l
@kindex C-. l
@item C-x @@ s l
@kindex C-x @@ s l
@end table

@findex emacspeak-wizards-locate-content

@format
Locate content matching  pattern.  The results can be
 opened by M-x emacspeak-dired-open-this-file locally bound to C-RET .

(fn PATTERN)
@end format
@end deffn

@subsubsection emacspeak-wizards-mlb-standings
@deffn {Command} emacspeak-wizards-mlb-standings  (&optional raw)
@findex emacspeak-wizards-mlb-standings

@format
Display MLB standings as of today.
Optional interactive prefix arg shows  unprocessed results.

(fn &optional RAW)
@end format
@end deffn

@subsubsection emacspeak-wizards-module-enumerate-uncovered-commands
@deffn {Command} emacspeak-wizards-module-enumerate-uncovered-commands  (m)
@findex emacspeak-wizards-module-enumerate-uncovered-commands

@format
Enumerate uncovered commands from module m

(fn M)
@end format
@end deffn

@subsubsection emacspeak-wizards-move-and-speak
@deffn {Command} emacspeak-wizards-move-and-speak  (command count)
@findex emacspeak-wizards-move-and-speak

@format
Speaks a chunk of text bounded by point and a target position.
Target position is specified using a navigation command and a
count that specifies how many times to execute that command
first.  Point is left at the target position.  Interactively,
command is specified by pressing the key that invokes the
command.

(fn COMMAND COUNT)
@end format
@end deffn

@subsubsection emacspeak-wizards-nba-standings
@deffn {Command} emacspeak-wizards-nba-standings  (&optional raw)
@findex emacspeak-wizards-nba-standings

@format
Display NBA standings as of today.
Optional interactive prefix arg shows  unprocessed results.

(fn &optional RAW)
@end format
@end deffn

@subsubsection emacspeak-wizards-next-bullet
@deffn {Command} emacspeak-wizards-next-bullet   
@findex emacspeak-wizards-next-bullet

@format
Navigate to and speak next ‘bullet’.
@end format
@end deffn

@subsubsection emacspeak-wizards-next-interactive-defun
@deffn {Command} emacspeak-wizards-next-interactive-defun   
@findex emacspeak-wizards-next-interactive-defun

@format
Move point to the next interactive defun
@end format
@end deffn

@subsubsection emacspeak-wizards-noaa-weather
@deffn {Command} emacspeak-wizards-noaa-weather  (&optional ask)
@table @kbd
@item C-; w
@kindex C-; w
@item C-e x w
@kindex C-e x w
@item C-x @@ h w
@kindex C-x @@ h w
@end table

@findex emacspeak-wizards-noaa-weather

@format
Display weather  using NOAA Weather API.
Address is a string and can include house-number, street name,
city and zip.  Data is retrieved only once, subsequent calls
switch to previously displayed results. Kill that buffer or use
an interactive prefix arg (C-u) to get new data.  Optional second
interactive prefix arg (C-u C-u) asks for location address;
Default is to display weather for ‘gmaps-my-address’.

(fn &optional ASK)
@end format
@end deffn

@subsubsection emacspeak-wizards-occur-header-lines
@deffn {Command} emacspeak-wizards-occur-header-lines  (&optional prefix)
@table @kbd
@item C-e x o
@kindex C-e x o
@end table

@findex emacspeak-wizards-occur-header-lines

@format
If you define a file local variable called
‘emacspeak-occur-pattern’ that holds a regular expression that
matches header lines, you can use this command to
run ‘occur’ to find matching header lines. With prefix arg,
prompts for and sets value of the file local pattern.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-wizards-pdf-open
@deffn {Command} emacspeak-wizards-pdf-open  (filename &optional ask-pwd)
@table @kbd
@item C-, p
@kindex C-, p
@item C-x @@ a p
@kindex C-x @@ a p
@end table

@findex emacspeak-wizards-pdf-open

@format
Open pdf file as text.
Optional interactive prefix arg ask-pwd prompts for password.

(fn FILENAME &optional ASK-PWD)
@end format
@end deffn

@subsubsection emacspeak-wizards-previous-bullet
@deffn {Command} emacspeak-wizards-previous-bullet   
@findex emacspeak-wizards-previous-bullet

@format
Navigate to and speak previous ‘bullet’.
@end format
@end deffn

@subsubsection emacspeak-wizards-quotes
@deffn {Command} emacspeak-wizards-quotes   
@table @kbd
@item C-, q
@kindex C-, q
@item C-x @@ a q
@kindex C-x @@ a q
@end table

@findex emacspeak-wizards-quotes

@format
View stock quotes
@end format
@end deffn

@subsubsection emacspeak-wizards-remote-frame
@deffn {Command} emacspeak-wizards-remote-frame   
@table @kbd
@item C-e x f
@kindex C-e x f
@end table

@findex emacspeak-wizards-remote-frame

@format
Open a frame on a remote Emacs.
Remote workstation is  ‘emacspeak-wizards-remote-workstation’.
Works best when you already are ssh-impel-ed in and have a talking
  remote Emacs in   a local XTerm.
@end format
@end deffn

@subsubsection emacspeak-wizards-set-colors
@deffn {Command} emacspeak-wizards-set-colors   
@findex emacspeak-wizards-set-colors

@format
Prompt for foreground and background colors.
@end format
@end deffn

@subsubsection emacspeak-wizards-shell
@deffn {Command} emacspeak-wizards-shell  (&optional prefix)
@findex emacspeak-wizards-shell

@format
Run Emacs  ‘shell’ command when not in a shell buffer, or
when called with a prefix argument. When called from a shell buffer,
switches to ‘next’ shell buffer. When called from outside a shell
buffer, find the most ‘appropriate shell’ and switch to it. Once
switched, set default directory in that target shell to the directory
of the source buffer.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-wizards-shell-by-key
@deffn {Command} emacspeak-wizards-shell-by-key  (&optional prefix)
@table @kbd
@item C-e x 5
@kindex C-e x 5
@item C-e x 4
@kindex C-e x 4
@item C-e x 3
@kindex C-e x 3
@item C-e x 2
@kindex C-e x 2
@item C-e x 1
@kindex C-e x 1
@item C-e x 0
@kindex C-e x 0
@end table

@findex emacspeak-wizards-shell-by-key

@format
Switch to shell buffer by key. This provides a predictable
  means for switching to a specific shell buffer. When invoked
  from a non-shell-mode buffer that is a dired-buffer or is
  visiting a file, invokes ‘cd ’ in the shell to change to the.
  value of ‘default-directory’ When already in a shell buffer,
  interactive prefix arg ‘prefix’ causes this shell to be
  re-keyed if appropriate --- see
  M-x emacspeak-wizards-shell-re-key for an explanation of how
  re-keying works.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-wizards-shell-command-on-current-file
@deffn {Command} emacspeak-wizards-shell-command-on-current-file  (command)
@table @kbd
@item C-e &
@kindex C-e &
@item C-e x 7
@kindex C-e x 7
@end table

@findex emacspeak-wizards-shell-command-on-current-file

@format
Prompts for and runs shell command on current file.

(fn COMMAND)
@end format
@end deffn

@subsubsection emacspeak-wizards-shell-directory-reset
@deffn {Command} emacspeak-wizards-shell-directory-reset  (&optional prefix)
@table @kbd
@item C-. .
@kindex C-. .
@item C-e x .
@kindex C-e x .
@item C-x @@ s .
@kindex C-x @@ s .
@end table

@findex emacspeak-wizards-shell-directory-reset

@format
Set current directory to this shell’s initial directory if one was
defined.  If not in a shell buffer, switch to our Home shell buffer.
With interactive prefix-arg, change this shell’s  project directory to
the current directory.

(fn &optional PREFIX)
@end format
@end deffn

@subsubsection emacspeak-wizards-shell-directory-set
@deffn {Command} emacspeak-wizards-shell-directory-set   
@table @kbd
@item C-e x ,
@kindex C-e x ,
@end table

@findex emacspeak-wizards-shell-directory-set

@format
Define current directory as this shell’s project directory.
@end format
@end deffn

@subsubsection emacspeak-wizards-shell-toggle
@deffn {Command} emacspeak-wizards-shell-toggle   
@table @kbd
@item C-e <f11>
@kindex C-e <f11>
@end table

@findex emacspeak-wizards-shell-toggle

@format
Switch to  shell  and cd to
  directory of the previously current buffer.
@end format
@end deffn

@subsubsection emacspeak-wizards-show-eval-result
@deffn {Command} emacspeak-wizards-show-eval-result  (form)
@table @kbd
@item M-ESC :
@kindex M-ESC :
@end table

@findex emacspeak-wizards-show-eval-result

@format
Pretty-print and view Lisp evaluation results.

(fn FORM)
@end format
@end deffn

@subsubsection emacspeak-wizards-show-face
@deffn {Command} emacspeak-wizards-show-face  (face)
@findex emacspeak-wizards-show-face

@format
Show  properties of  face.

(fn FACE)
@end format
@end deffn

@subsubsection emacspeak-wizards-show-memory-used
@deffn {Command} emacspeak-wizards-show-memory-used   
@findex emacspeak-wizards-show-memory-used

@format
Convenience command to view state of memory used in this session so far.
@end format
@end deffn

@subsubsection emacspeak-wizards-show-theme
@deffn {Command} emacspeak-wizards-show-theme  (palette)
@findex emacspeak-wizards-show-theme

@format
Display colors in  palette.
Prompts for a color palette variable as used in the modus theme and
  its variants,
and pops to a buffer that describes the colors used in that palette.

(fn PALETTE)
@end format
@end deffn

@subsubsection emacspeak-wizards-snarf-sexp
@deffn {Command} emacspeak-wizards-snarf-sexp  (&optional delete)
@table @kbd
@item C-; DEL
@kindex C-; DEL
@item C-x @@ h DEL
@kindex C-x @@ h DEL
@end table

@findex emacspeak-wizards-snarf-sexp

@format
Snarf the contents between delimiters at point.
Optional interactive prefix arg deletes it.

(fn &optional DELETE)
@end format
@end deffn

@subsubsection emacspeak-wizards-speak-iso-datetime
@deffn {Command} emacspeak-wizards-speak-iso-datetime  (iso)
@findex emacspeak-wizards-speak-iso-datetime

@format
Speak ISO date-time.

(fn ISO)
@end format
@end deffn

@subsubsection emacspeak-wizards-squeeze-blanks
@deffn {Command} emacspeak-wizards-squeeze-blanks  (start end)
@table @kbd
@item C-e x |
@kindex C-e x |
@end table

@findex emacspeak-wizards-squeeze-blanks

@format
Squeeze multiple blank lines.

(fn START END)
@end format
@end deffn

@subsubsection emacspeak-wizards-swap-fg-and-bg
@deffn {Command} emacspeak-wizards-swap-fg-and-bg   
@table @kbd
@item C-h =
@kindex C-h =
@item <f1> =
@kindex <f1> =
@item <help> =
@kindex <help> =
@end table

@findex emacspeak-wizards-swap-fg-and-bg

@format
Swap foreground and background.
@end format
@end deffn

@subsubsection emacspeak-wizards-tex-tie-current-word
@deffn {Command} emacspeak-wizards-tex-tie-current-word  (n)
@findex emacspeak-wizards-tex-tie-current-word

@format
Tie the next n  words.

(fn N)
@end format
@end deffn

@subsubsection emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer
@deffn {Command} emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer   
@findex emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer

@format
Toggle pronunciation of mm-dd-yyyy dates.
@end format
@end deffn

@subsubsection emacspeak-wizards-toggle-yyyy-mm-dd-date-pronouncer
@deffn {Command} emacspeak-wizards-toggle-yyyy-mm-dd-date-pronouncer   
@findex emacspeak-wizards-toggle-yyyy-mm-dd-date-pronouncer

@format
Toggle pronunciation of yyyy-mm-dd dates.
@end format
@end deffn

@subsubsection emacspeak-wizards-toggle-yyyymmdd-date-pronouncer
@deffn {Command} emacspeak-wizards-toggle-yyyymmdd-date-pronouncer   
@findex emacspeak-wizards-toggle-yyyymmdd-date-pronouncer

@format
Toggle pronunciation of yyyymmdd  dates.
@end format
@end deffn

@subsubsection emacspeak-wizards-tune-in-radio-browse
@deffn {Command} emacspeak-wizards-tune-in-radio-browse  (&optional category)
@table @kbd
@item C-, t
@kindex C-, t
@item C-x @@ a t
@kindex C-x @@ a t
@end table

@findex emacspeak-wizards-tune-in-radio-browse

@format
Browse Tune-In Radio.
Optional interactive prefix arg ‘category’ prompts for a category.

(fn &optional CATEGORY)
@end format
@end deffn

@subsubsection emacspeak-wizards-tune-in-radio-search
@deffn {Command} emacspeak-wizards-tune-in-radio-search   
@table @kbd
@item C-, s
@kindex C-, s
@item C-x @@ a s
@kindex C-x @@ a s
@end table

@findex emacspeak-wizards-tune-in-radio-search

@format
Search Tune-In Radio.
@end format
@end deffn

@subsubsection emacspeak-wizards-units
@deffn {Command} emacspeak-wizards-units   
@table @kbd
@item C-e x u
@kindex C-e x u
@end table

@findex emacspeak-wizards-units

@format
Run units.
@end format
@end deffn

@subsubsection emacspeak-wizards-vc-n
@deffn {Command} emacspeak-wizards-vc-n   
@findex emacspeak-wizards-vc-n

@format
Accelerator for VC viewer.
@end format
@end deffn

@subsubsection emacspeak-wizards-vc-view-mode
@deffn {Command} emacspeak-wizards-vc-view-mode   
@findex emacspeak-wizards-vc-view-mode

@format
Major mode for interactively viewing virtual console contents.

Key             Binding
-------------------------------------------------------------------------------
C-l		emacspeak-wizards-vc-viewer-refresh

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘emacspeak-wizards-vc-view-mode-hook’, as
the final or penultimate step during initialization.
@end format
@end deffn

@subsubsection emacspeak-wizards-vc-viewer
@deffn {Command} emacspeak-wizards-vc-viewer  (console)
@table @kbd
@item C-e x v
@kindex C-e x v
@end table

@findex emacspeak-wizards-vc-viewer

@format
View contents of  virtual console.

(fn CONSOLE)
@end format
@end deffn

@subsubsection emacspeak-wizards-vc-viewer-refresh
@deffn {Command} emacspeak-wizards-vc-viewer-refresh   
@findex emacspeak-wizards-vc-viewer-refresh

@format
Refresh view of VC we’re viewing.
@end format
@end deffn

@subsubsection emacspeak-wizards-view-buffers-filtered-by-m-player-mode
@deffn {Command} emacspeak-wizards-view-buffers-filtered-by-m-player-mode   
@findex emacspeak-wizards-view-buffers-filtered-by-m-player-mode

@format
Buffer menu filtered by  m-player mode.
@end format
@end deffn

@subsubsection emacspeak-wizards-view-buffers-filtered-by-this-mode
@deffn {Command} emacspeak-wizards-view-buffers-filtered-by-this-mode   
@table @kbd
@item C-z b
@kindex C-z b
@item C-. m
@kindex C-. m
@item C-e z b
@kindex C-e z b
@item C-x @@ s m
@kindex C-x @@ s m
@end table

@findex emacspeak-wizards-view-buffers-filtered-by-this-mode

@format
Buffer menu filtered by  mode of current-buffer.
@end format
@end deffn

@subsection emacspeak-wizards Options

@defvar {User Option} emacspeak-brightness-autoblack
Set to T to automatically turn display black.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-speak-telephone-directory
File holding telephone directory.
This is just a text file, and we use grep to search it.

Default Value: 

@verbatim

"/home/raman/.emacspeak/tel-dir"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-wizards-pdf-to-text-options
options to Command for running pdftotext.

Default Value: 

@verbatim

"-layout"

@end verbatim

@end defvar

@defvar {User Option} emacspeak-wizards-project-shells
Project shells, a list of shell-name/initial-directory pairs.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} emacspeak-wizards-remote-workstation
Name of remote workstation.

Default Value: 

@verbatim

""

@end verbatim

@end defvar

@node emacspeak-woman
@section emacspeak-woman

WOMAN ==  Man pages implemented in Emacs Lisp

@node emacspeak-xkcd
@section emacspeak-xkcd

XKCD ==  XKCD In Emacs
View XKCD comics in Emacs.
Speech enables package xkcd
Augments it by displaying the alt text and the transcript.

  Required modules

@subsection Emacspeak-Xkcd Commands

@subsubsection emacspeak-xkcd-open-explanation-browser
@deffn {Command} emacspeak-xkcd-open-explanation-browser   
@findex emacspeak-xkcd-open-explanation-browser

@format
Open explanation of current xkcd in default browser
@end format
@end deffn

@node emacspeak-xref
@section emacspeak-xref

XREF ==  Cross-references in source code.
This is part of Emacs 25.
This module speech-enables xref

  Required modules

@node emacspeak-xslt
@section emacspeak-xslt

libxml and libxsl are XML libraries for GNOME.
xsltproc is a  xslt processor using libxsl
this module defines routines for applying xsl transformations
using xsltproc

@subsection Emacspeak-Xslt Commands

@subsubsection emacspeak-xslt-view
@deffn {Command} emacspeak-xslt-view  (style url)
@findex emacspeak-xslt-view

@format
Browse URL with specified XSL style.

(fn STYLE URL)
@end format
@end deffn

@subsubsection emacspeak-xslt-view-atom-file
@deffn {Command} emacspeak-xslt-view-atom-file  (file)
@table @kbd
@item C-e y a
@kindex C-e y a
@end table

@findex emacspeak-xslt-view-atom-file

@format
View Atom file.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-xslt-view-file
@deffn {Command} emacspeak-xslt-view-file  (style file)
@table @kbd
@item C-e y x
@kindex C-e y x
@end table

@findex emacspeak-xslt-view-file

@format
Transform ‘file’ using ‘style’ and preview via browse-url.

(fn STYLE FILE)
@end format
@end deffn

@subsubsection emacspeak-xslt-view-region
@deffn {Command} emacspeak-xslt-view-region  (style start end &optional unescape-charent)
@findex emacspeak-xslt-view-region

@format
Browse XML region with specified XSL style.

(fn STYLE START END &optional UNESCAPE-CHARENT)
@end format
@end deffn

@subsubsection emacspeak-xslt-view-rss-file
@deffn {Command} emacspeak-xslt-view-rss-file  (file)
@table @kbd
@item C-e y r
@kindex C-e y r
@end table

@findex emacspeak-xslt-view-rss-file

@format
View RSS file.

(fn FILE)
@end format
@end deffn

@subsubsection emacspeak-xslt-view-xml
@deffn {Command} emacspeak-xslt-view-xml  (style url &optional unescape-charent)
@findex emacspeak-xslt-view-xml

@format
Browse XML URL with specified XSL style.

(fn STYLE URL &optional UNESCAPE-CHARENT)
@end format
@end deffn

@node emacspeak-yaml
@section emacspeak-yaml

YAML == Yet Another Markup Language
This module speech-enables yaml-mode.

@node emacspeak-yasnippet
@section emacspeak-yasnippet

YASNIPPET ==  Template based editing using snippets.

@node espeak-voices
@section espeak-voices

This module defines the various voices used in voice-lock mode by
the ESpeak TTS engine.

@subsection Espeak-Voices Commands

@subsubsection espeak
@deffn {Command} espeak   
@table @kbd
@item C-e d C-e
@kindex C-e d C-e
@end table

@findex espeak

@format
Start ESpeak.
@end format
@end deffn

@subsection espeak-voices Options

@defvar {User Option} espeak-default-speech-rate
Default speech rate for eSpeak.

Default Value: 

@verbatim

175

@end verbatim

@end defvar

@node extra-muggles
@section extra-muggles

MUGGLES ==  Emacspeak spells for power-users.
These are extra hydras that I dont use very often,
And are being moved here from emacspeak-muggles to save time at
startup.

This module implements no new functionality --- contrast with
emacspeak-wizards.  Instead, it uses package hydra to provide
convenience key-bindings that access existing Emacspeak
functionality.
You need to install package Hydra first:
@samp{M-x package-install  hydra}.

Note that on newer versions of Emacs, loading this module will
attempt to automatically install package hydra if it is not found.
@subsection Using Hydras
See the high-level documentation for the Hydra package by executing
@kbd {C-h C-j } hydra @kbd{RET}.
The documentation in this section uses the same terminology as
shown in the hydra package documentation.

@subsection Extra Muggles

@itemize
@item  org-mode structure nav: @kbd{C-c C-SPC}  Navigation  for org-mode.
@item View-Mode: @kbd{C-. v} Temporarily behave like view-mode.
@item SmartParens: @kbd{C-c ,} Smart Parens
@item m-player: @kbd{s-m} Emacspeak-M-Player Commands
@item m-player: @kbd{s-;} Emacspeak-M-Player muggle
@item pianobar: @kbd{s-'} Emacspeak-M-pianobar Commands
@item origami: C-, / Origami   bindings.
@item outliner: <C-c .> Bindings from outline-minor-mode.
@item Info-Summary: <?> in Info Info Summary Muggle
@item Vuiet Explorer: @kbd{C-; v} Vuiet Music Explorer and Player
@end itemize

Emacspeak automatically speaks Hydra hints when displayed.
To silence all Hydra hints, set hydra-is-helpful to nil.  To
temporarily silence speaking of Hydra hints, Muggles can bind
command @code{emacspeak-hydra-toggle-talkative}.  As an
example, Muggle @samp{ViewMode} binds @code{s} to this command.

@subsection Extra-Muggles Commands

@subsubsection emacspeak-muggles-emacspeak-m-player-mode-map-cmd
@deffn {Command} emacspeak-muggles-emacspeak-m-player-mode-map-cmd   
@table @kbd
@item s-m
@kindex s-m
@end table

@findex emacspeak-muggles-emacspeak-m-player-mode-map-cmd

@format
Temporarily use keymap emacspeak-m-player-mode-map
@end format
@end deffn

@subsubsection emacspeak-muggles-info-summary/body
@deffn {Command} emacspeak-muggles-info-summary/body   
@findex emacspeak-muggles-info-summary/body

@format
Call the body in the "emacspeak-muggles-info-summary" hydra.

The heads for the associated hydra are:

"]":    ‘Info-forward-node’,
"[":    ‘Info-backward-node’,
"n":    ‘Info-next’,
"p":    ‘Info-prev’,
"s":    ‘Info-search’,
"S":    ‘Info-search-case-sensitively’,
"l":    ‘Info-history-back’,
"r":    ‘Info-history-forward’,
"H":    ‘Info-history’,
"t":    ‘Info-top-node’,
"<":    ‘Info-top-node’,
">":    ‘Info-final-node’,
"u":    ‘Info-up’,
"^":    ‘Info-up’,
"m":    ‘Info-menu’,
"g":    ‘Info-goto-node’,
"b":    ‘beginning-of-buffer’,
"e":    ‘end-of-buffer’,
"f":    ‘Info-follow-reference’,
"i":    ‘Info-index’,
",":    ‘Info-index-next’,
"I":    ‘Info-virtual-index’,
"T":    ‘Info-toc’,
"d":    ‘Info-directory’,
"c":    ‘Info-copy-current-node-name’,
"C":    ‘clone-buffer’,
"a":    ‘info-apropos’,
"1":    ‘Info-nth-menu-item’,
"2":    ‘Info-nth-menu-item’,
"3":    ‘Info-nth-menu-item’,
"4":    ‘Info-nth-menu-item’,
"5":    ‘Info-nth-menu-item’,
"6":    ‘Info-nth-menu-item’,
"7":    ‘Info-nth-menu-item’,
"8":    ‘Info-nth-menu-item’,
"9":    ‘Info-nth-menu-item’,
"?":    ‘Info-summary’,
"h":    ‘Info-help’,
"q":    ‘quit-window’,
"C-g":    nil

The body can be accessed via ‘emacspeak-muggles-info-summary/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-m-player/body
@deffn {Command} emacspeak-muggles-m-player/body   
@table @kbd
@item s-;
@kindex s-;
@end table

@findex emacspeak-muggles-m-player/body

@format
Call the body in the "emacspeak-muggles-m-player" hydra.

The heads for the associated hydra are:

";":    ‘emacspeak-m-player’,
"+":    ‘emacspeak-m-player-volume-up’,
",":    ‘emacspeak-m-player-backward-10s’,
"%":    ‘emacspeak-m-player-display-percent’,
"-":    ‘emacspeak-m-player-volume-down’,
".":    ‘emacspeak-m-player-forward-10s’,
"<":    ‘emacspeak-m-player-backward-1min’,
"<down>":    ‘emacspeak-m-player-forward-1min’,
"<left>":    ‘emacspeak-m-player-backward-10s’,
"<next>":    ‘emacspeak-m-player-forward-10min’,
"<prior>":    ‘emacspeak-m-player-backward-10min’,
"<right>":    ‘emacspeak-m-player-forward-10s’,
"<up>":    ‘emacspeak-m-player-backward-1min’,
"=":    ‘emacspeak-m-player-volume-up’,
">":    ‘emacspeak-m-player-forward-1min’,
"C":    ‘emacspeak-m-player-clear-filters’,
"DEL":    ‘emacspeak-m-player-reset-speed’,
"Q":    ‘emacspeak-m-player-quit’,
"R":    ‘emacspeak-m-player-edit-reverb’,
"S":    ‘emacspeak-amark-save’,
"SPC":    ‘emacspeak-m-player-pause’,
"[":    ‘emacspeak-m-player-slower’,
"]":    ‘emacspeak-m-player-faster’,
"a":    ‘emacspeak-m-player-amark-add’,
"b":    ‘emacspeak-m-player-balance’,
"c":    ‘emacspeak-m-player-slave-command’,
"d":    ‘emacspeak-m-player-delete-filter’,
"e":    ‘emacspeak-m-player-add-equalizer’,
"f":    ‘emacspeak-m-player-add-filter’,
"g":    ‘emacspeak-m-player-seek-absolute’,
"j":    ‘emacspeak-m-player-amark-jump’,
"l":    ‘emacspeak-m-player-get-length’,
"m":    ‘emacspeak-m-player-mode-line’,
"n":    ‘emacspeak-m-player-next-track’,
"p":    ‘emacspeak-m-player-previous-track’,
"q":    ‘bury-buffer’,
"r":    ‘emacspeak-m-player-seek-relative’,
"s":    ‘emacspeak-m-player-scale-speed’,
"u":    ‘emacspeak-m-player-url’,
"v":    ‘emacspeak-m-player-volume-change’,
"(":    ‘emacspeak-m-player-left-channel’,
")":    ‘emacspeak-m-player-right-channel’,
"@{":    ‘emacspeak-m-player-half-speed’,
"@}":    ‘emacspeak-m-player-double-speed’

The body can be accessed via ‘emacspeak-muggles-m-player/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-org-nav/body
@deffn {Command} emacspeak-muggles-org-nav/body   
@findex emacspeak-muggles-org-nav/body

@format
Call the body in the "emacspeak-muggles-org-nav" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-org-nav")’,
"SPC":    ‘emacspeak-outline-speak-this-heading’,
"n":    ‘emacspeak-outline-speak-next-heading’,
"p":    ‘emacspeak-outline-speak-previous-heading’,
"f":    ‘org-forward-heading-same-level’,
"b":    ‘org-backward-heading-same-level’,
"u":    ‘outline-up-heading’,
"g":    ‘org-goto’

The body can be accessed via ‘emacspeak-muggles-org-nav/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-outliner/body
@deffn {Command} emacspeak-muggles-outliner/body   
@table @kbd
@item C-. o
@kindex C-. o
@item C-x @@ s o
@kindex C-x @@ s o
@end table

@findex emacspeak-muggles-outliner/body

@format
Call the body in the "emacspeak-muggles-outliner" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-outliner")’,
"q":    ‘outline-hide-sublevels’,
"t":    ‘outline-hide-body’,
"o":    ‘outline-hide-other’,
"c":    ‘outline-hide-entry’,
"l":    ‘outline-hide-leaves’,
"d":    ‘outline-hide-subtree’,
"a":    ‘outline-show-all’,
"e":    ‘outline-show-entry’,
"i":    ‘outline-show-children’,
"k":    ‘outline-show-branches’,
"s":    ‘outline-show-subtree’,
"u":    ‘outline-up-heading’,
"n":    ‘outline-next-visible-heading’,
"p":    ‘outline-previous-visible-heading’,
"f":    ‘outline-forward-same-level’,
"b":    ‘outline-backward-same-level’,
"z":    nil

The body can be accessed via ‘emacspeak-muggles-outliner/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-pianobar-key-map-cmd
@deffn {Command} emacspeak-muggles-pianobar-key-map-cmd   
@table @kbd
@item s-'
@kindex s-'
@end table

@findex emacspeak-muggles-pianobar-key-map-cmd

@format
Temporarily use keymap pianobar-key-map
@end format
@end deffn

@subsubsection emacspeak-muggles-smartparens/body
@deffn {Command} emacspeak-muggles-smartparens/body   
@table @kbd
@item C-c ,
@kindex C-c ,
@end table

@findex emacspeak-muggles-smartparens/body

@format
Call the body in the "emacspeak-muggles-smartparens" hydra.

The heads for the associated hydra are:

"’":    ‘#’(lambda (_) (interactive "P") (sp-wrap-with-pair "’"))’,
"(":    ‘#’(lambda (_) (interactive "P") (sp-wrap-with-pair "("))’,
"<down>":    ‘sp-splice-sexp-killing-forward’,
"<left>":    ‘sp-forward-barf-sexp’,
"<right>":    ‘sp-forward-slurp-sexp’,
"<up>":    ‘sp-splice-sexp-killing-backward’,
"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-smartparens")’,
"C-<left>":    ‘sp-backward-barf-sexp’,
"C-<right>":    ‘sp-backward-slurp-sexp’,
"R":    ‘sp-splice-sexp’,
""":    ‘#’(lambda (_) (interactive "P") (sp-wrap-with-pair "\""))’,
"a":    ‘beginning-of-defun’,
"b":    ‘sp-backward-sexp’,
"c":    ‘sp-convolute-sexp’,
"d":    ‘sp-down-sexp’,
"e":    ‘end-of-defun’,
"f":    ‘sp-forward-sexp’,
"i":    ‘sp-indent-defun’,
"j":    ‘sp-join-sexp’,
"k":    ‘sp-kill-sexp’,
"n":    ‘sp-next-sexp’,
"p":    ‘sp-previous-sexp’,
"r":    ‘sp-splice-sexp-killing-around’,
"s":    ‘sp-split-sexp’,
"t":    ‘sp-transpose-sexp’,
"u":    ‘sp-backward-up-sexp’,
"w":    ‘sp-copy-sexp’,
"@{":    ‘#’(lambda (_) (interactive "P") (sp-wrap-with-pair "@{"))’

The body can be accessed via ‘emacspeak-muggles-smartparens/body’.
@end format
@end deffn

@subsubsection emacspeak-muggles-view/body
@deffn {Command} emacspeak-muggles-view/body   
@table @kbd
@item C-. v
@kindex C-. v
@item C-x @@ s v
@kindex C-x @@ s v
@end table

@findex emacspeak-muggles-view/body

@format
Call the body in the "emacspeak-muggles-view" hydra.

The heads for the associated hydra are:

"?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-view")’,
"$":    ‘set-selective-display’,
"%":    ‘View-goto-percent’,
"’":    ‘register-to-point’,
"(":    ‘backward-sexp’,
")":    ‘forward-sexp’,
".":    ‘set-mark-command’,
"/":    ‘View-search-regexp-forward’,
"<":    ‘beginning-of-buffer’,
"<return>":    nil,
"=":    ‘what-line’,
">":    ‘end-of-buffer’,
"@@":    ‘View-back-to-mark’,
"A":    ‘beginning-of-defun’,
"DEL":    ‘View-scroll-page-backward’,
"E":    ‘end-of-defun’,
"J":    ‘(emacspeak-hide-or-expose-block ’all)’,
"SPC":    ‘View-scroll-page-forward’,
"[":    ‘backward-page’,
"\":    ‘View-search-regexp-backward’,
"]":    ‘forward-page’,
"a":    ‘move-beginning-of-line’,
"b":    ‘backward-word’,
"c":    ‘emacspeak-speak-char’,
"d":    ‘View-scroll-half-page-forward’,
"e":    ‘move-end-of-line’,
"f":    ‘forward-word’,
"g":    ‘goto-line’,
"h":    ‘backward-char’,
"i":    ‘emacspeak-speak-mode-line’,
"j":    ‘next-line’,
"k":    ‘previous-line’,
"l":    ‘forward-char’,
"m":    ‘point-to-register’,
"n":    ‘View-search-last-regexp-forward’,
"p":    ‘View-search-last-regexp-backward’,
"q":    nil,
"r":    ‘copy-to-register’,
"s":    ‘emacspeak-hydra-toggle-talkative’,
"t":    ‘(recenter 0)’,
"u":    ‘View-scroll-half-page-backward’,
"w":    ‘emacspeak-speak-word’,
"x":    ‘exchange-point-and-mark’,
"y":    ‘kill-ring-save’,
"@{":    ‘backward-paragraph’,
"@}":    ‘forward-paragraph’

The body can be accessed via ‘emacspeak-muggles-view/body’.
@end format
@end deffn

@subsubsection emacspeak-origami/body
@deffn {Command} emacspeak-origami/body   
@table @kbd
@item C-, /
@kindex C-, /
@item C-x @@ a /
@kindex C-x @@ a /
@end table

@findex emacspeak-origami/body

@format
Call the body in the "emacspeak-origami" hydra.

The heads for the associated hydra are:

"o":    ‘origami-open-node’,
"c":    ‘origami-close-node’,
"n":    ‘origami-next-fold’,
"p":    ‘origami-previous-fold’,
"f":    ‘origami-forward-toggle-node’,
"a":    ‘origami-toggle-all-nodes’

The body can be accessed via ‘emacspeak-origami/body’.
@end format
@end deffn

@node g-utils
@section g-utils

Common Code  e.g. helper functions.
Used by modules like gphoto, gblogger etc.

@subsection g-utils Options

@defvar {User Option} g-atom-view-xsl
XSLT transform to convert Atom feed to HTML.

Default Value: 

@verbatim

"/home/raman/emacs/lisp/emacspeak/xsl/atom-view.xsl"

@end verbatim

@end defvar

@defvar {User Option} g-cookie-jar
Cookie jar used for Google services.
Customize this to live on your local disk.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} g-curl-debug
Set to T to see Curl stderr output.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} g-curl-options
Common options to pass to all Curl invocations.

Default Value: 

@verbatim

"--http1.0 --compressed --silent --location --location-trusted --max-time 4 --connect-timeout 1"

@end verbatim

@end defvar

@defvar {User Option} g-xslt-program
XSLT Processor.

Default Value: 

@verbatim

"xsltproc"

@end verbatim

@end defvar

@node gm-nnir
@section gm-nnir

Makes search GMail more convenient.
IMap search operators, GMail search extensions.

@subsection Gm-Nnir Commands

@subsubsection gm-nnir-group-make-gmail-group
@deffn {Command} gm-nnir-group-make-gmail-group  (query)
@findex gm-nnir-group-make-gmail-group

@format
Use GMail search syntax exclusively.
See https://support.google.com/mail/answer/7190?hl=en for syntax.
 note: nnimap-address etc are available as local vars if needed
 in these functions.

(fn QUERY)
@end format
@end deffn

@node gmaps
@section gmaps

Implements the Google Maps API

@subsection Gmaps Commands

@subsubsection gmaps
@deffn {Command} gmaps   
@findex gmaps

@format
Google Maps Interaction.

This function has :around advice: ‘ad-Advice-gmaps’.

(fn)
@end format
@end deffn

@subsubsection gmaps-bicycling-directions
@deffn {Command} gmaps-bicycling-directions  (origin destination)
@findex gmaps-bicycling-directions

@format
Biking directions from Google Maps.

This function has :around advice: ‘ad-Advice-gmaps-bicycling-directions’.

(fn ORIGIN DESTINATION)
@end format
@end deffn

@subsubsection gmaps-directions
@deffn {Command} gmaps-directions  (origin destination mode)
@findex gmaps-directions

@format
Display  directions obtained from Google Maps.

(fn ORIGIN DESTINATION MODE)
@end format
@end deffn

@subsubsection gmaps-driving-directions
@deffn {Command} gmaps-driving-directions  (origin destination)
@findex gmaps-driving-directions

@format
Driving directions from Google Maps.

This function has :around advice: ‘ad-Advice-gmaps-driving-directions’.

(fn ORIGIN DESTINATION)
@end format
@end deffn

@subsubsection gmaps-locations-load
@deffn {Command} gmaps-locations-load   
@findex gmaps-locations-load

@format
Load saved GMaps locations.
@end format
@end deffn

@subsubsection gmaps-locations-save
@deffn {Command} gmaps-locations-save   
@findex gmaps-locations-save

@format
Save GMaps Locations.
@end format
@end deffn

@subsubsection gmaps-mode
@deffn {Command} gmaps-mode   
@findex gmaps-mode

@format
A Google Maps front-end for the Emacspeak desktop.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘gmaps-mode-hook’, as the final or
penultimate step during initialization.

Key             Binding
-------------------------------------------------------------------------------
TAB		forward-button
SPC		gmaps-place-details
[		backward-page
]		forward-page
b		gmaps-bicycling-directions
c		gmaps-set-current-location
d		gmaps-driving-directions
f		gmaps-set-current-filter
n		gmaps-places-nearby
r		gmaps-set-current-radius
s		gmaps-places-search
t		gmaps-transit-directions
w		gmaps-walking-directions

M-i		backward-button

@end format
@end deffn

@subsubsection gmaps-place-details
@deffn {Command} gmaps-place-details   
@findex gmaps-place-details

@format
Display details for place at point.
Insert reviews if already displaying details.

This function has :around advice: ‘ad-Advice-gmaps-place-details’.

(fn)
@end format
@end deffn

@subsubsection gmaps-place-reviews
@deffn {Command} gmaps-place-reviews   
@findex gmaps-place-reviews

@format
Display reviews for place at point.
Place details need to have been expanded first.
@end format
@end deffn

@subsubsection gmaps-places-nearby
@deffn {Command} gmaps-places-nearby  (&optional clear-filter)
@findex gmaps-places-nearby

@format
Find places near current location.
Uses default radius. optional interactive prefix arg clears any active filters.

This function has :around advice: ‘ad-Advice-gmaps-places-nearby’.

(fn &optional CLEAR-FILTER)
@end format
@end deffn

@subsubsection gmaps-places-search
@deffn {Command} gmaps-places-search  (query &optional clear-filter)
@findex gmaps-places-search

@format
Perform a places search.
Use this only if you dont know the locality  of the place you’re looking for.
Optional  prefix arg clears any active filters.

This function has :around advice: ‘ad-Advice-gmaps-places-search’.

(fn QUERY &optional CLEAR-FILTER)
@end format
@end deffn

@subsubsection gmaps-set-current-filter
@deffn {Command} gmaps-set-current-filter  (&optional all)
@findex gmaps-set-current-filter

@format
Set up filter in current buffer.
Optional interactive prefix arg prompts for all filter fields.

(fn &optional ALL)
@end format
@end deffn

@subsubsection gmaps-set-current-location
@deffn {Command} gmaps-set-current-location  (address)
@findex gmaps-set-current-location

@format
 Set current location.

This function has :around advice: ‘ad-Advice-gmaps-set-current-location’.

(fn ADDRESS)
@end format
@end deffn

@subsubsection gmaps-set-current-radius
@deffn {Command} gmaps-set-current-radius  (radius)
@findex gmaps-set-current-radius

@format
Set current radius

This function has :around advice: ‘ad-Advice-gmaps-set-current-radius’.

(fn RADIUS)
@end format
@end deffn

@subsubsection gmaps-transit-directions
@deffn {Command} gmaps-transit-directions  (origin destination)
@findex gmaps-transit-directions

@format
Transit directions from Google Maps.

This function has :around advice: ‘ad-Advice-gmaps-transit-directions’.

(fn ORIGIN DESTINATION)
@end format
@end deffn

@subsubsection gmaps-walking-directions
@deffn {Command} gmaps-walking-directions  (origin destination)
@findex gmaps-walking-directions

@format
Walking directions from Google Maps.

This function has :around advice: ‘ad-Advice-gmaps-walking-directions’.

(fn ORIGIN DESTINATION)
@end format
@end deffn

@subsection gmaps Options

@defvar {User Option} gmaps-api-key
Maps  API  key --- goto  https://code.google.com/apis/console to get one.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@defvar {User Option} gmaps-my-address
Location address. Setting this updates gmaps-my-location
coordinates via geocoding.

Default Value: 

@verbatim

nil

@end verbatim

@end defvar

@node ladspa
@section ladspa

This module  uses tools from the Ladspa SDK  to expose
Ladspa plugins in a consistent way to elisp.
The goal is to make it easy to inspect Ladspa Plugins,
And invoke them easily from  Ladspa host applications such as MPlayer.
Some Ladspa Packages that provide plugins:
sudo apt-get install zam-plugins wah-plugins vco-plugins tap-plugins
swh-plugins rev-plugins mcp-plugins liquidsoap-plugin-ladspa
ladspa-foo-plugins invada-studio-plugins-ladspa fil-plugins

@subsection Ladspa Commands

@subsubsection ladspa
@deffn {Command} ladspa  (&optional refresh)
@findex ladspa

@format
Ladspa workbench.

(fn &optional REFRESH)
@end format
@end deffn

@subsubsection ladspa-analyse-plugin-at-point
@deffn {Command} ladspa-analyse-plugin-at-point   
@findex ladspa-analyse-plugin-at-point

@format
Analyse plugin at point.
@end format
@end deffn

@subsubsection ladspa-edit-control
@deffn {Command} ladspa-edit-control   
@findex ladspa-edit-control

@format
Edit Ladspa control  at point by prompting for control values.
@end format
@end deffn

@subsubsection ladspa-instantiate
@deffn {Command} ladspa-instantiate   
@findex ladspa-instantiate

@format
Instantiate plugin at point by prompting for control values.
@end format
@end deffn

@subsubsection ladspa-mode
@deffn {Command} ladspa-mode   
@findex ladspa-mode

@format
A Ladspa workbench for the Emacspeak desktop.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘ladspa-mode-hook’, as the final or
penultimate step during initialization.

Key             Binding
-------------------------------------------------------------------------------
RET		ladspa-instantiate
SPC		ladspa-analyse-plugin-at-point
a		emacspeak-m-player-add-ladspa
d		emacspeak-m-player-delete-ladspa
e		ladspa-edit-control
n		next-line
p		previous-line

@end format
@end deffn

@node light
@section light

Provide an emacs front-end to light.
This is a tool that controls the brightness on laptops.
To install light,
sudo apt-get install light
Install light setuid (sudo chmod u+s /usr/bin/light)
This module  is most   easily used in conjunction with  hydra:
M-x package-install hydra

@subsection Light Commands

@subsubsection light-black
@deffn {Command} light-black   
@findex light-black

@format
Black screen.
@end format
@end deffn

@subsubsection light-decrement
@deffn {Command} light-decrement   
@findex light-decrement

@format
Decrease brightness.
@end format
@end deffn

@subsubsection light-get
@deffn {Command} light-get   
@findex light-get

@format
Get  brightness level.
@end format
@end deffn

@subsubsection light-increment
@deffn {Command} light-increment   
@findex light-increment

@format
Increase brightness.
@end format
@end deffn

@subsubsection light-set
@deffn {Command} light-set  (brightness)
@findex light-set

@format
Set brightness.

(fn BRIGHTNESS)
@end format
@end deffn

@subsubsection light-white
@deffn {Command} light-white   
@findex light-white

@format
White screen.
@end format
@end deffn

@node mac-voices
@section mac-voices

This module defines the various voices used in voice-lock mode by Mac TTS.

@subsection mac-voices Options

@defvar {User Option} mac-default-speech-rate
Default speech rate for mac.

Default Value: 

@verbatim

225

@end verbatim

@end defvar

@node omaps
@section omaps

Implements geocoding via the Open Street Maps API
https://nominatim.org/

@node outloud-voices
@section outloud-voices

 Interface to outloud server.
This module is IBM ViaVoice Outloud specific.

@subsection Outloud-Voices Commands

@subsubsection outloud
@deffn {Command} outloud   
@table @kbd
@item C-e d C-o
@kindex C-e d C-o
@end table

@findex outloud

@format
Start Outloud.
@end format
@end deffn

@subsection outloud-voices Options

@defvar {User Option} outloud-default-speech-rate
Default speech rate.

Default Value: 

@verbatim

50

@end verbatim

@end defvar

@node plain-voices
@section plain-voices

This module defines the various voices used in voice-lock mode.
 Module Plain is  suitable for a device for which you haven't yet
 implemented appropriate voice-locking controls

 required modules

@node soundscape
@section soundscape

Soundscapes @url{https://en.wikipedia.org/wiki/Soundscape}
define an acoustic environment.
Boodler  at @url{http://boodler.org} is a
Python-based SoundScape generator.
To use this module, first install boodler.
Then install the soundscape packages (*.boop) files available
at @url{http://boodler.org/lib}.
Make sure boodler works and produces audio in your environment.
finally install the Boodler packages  from
emacspeak/scapes from the Emacspeak GitHub repository by running
@code{cd emacspeak/scapes; make }

When  boodler is set up and all packages installed, copy
file emacspeak/scapes/soundscapes  to ~/.boodler/Collection.
The above file lists all installed SoundScapes.
Directory emacspeak/scapes also contains
additional Boodler Agents and SoundScapes  that
I have created for use with Emacspeak.

 Module soundscape.el  defines Emacs conveniences for running
Soundscapes. Main Entry Points:

@itemize
@item M-x soundscape-toggle -- Enables or
disables automatic SoundScapes.
@item M-x soundscape --
runs a named SoundScape
@item M-x soundscape-stop -- Stops a specified running Soundscape.
@item M-x soundscape-kill -- Kills all running Soundscapes.
@end itemize

When automatic Soundscapes are enabled, SoundScapes are
 started and stopped based on the current major
mode. Active Soundscape  are displayed as part of the minor-mode-alist.
Command emacspeak-speak-minor-mode-line can be used to have this spoken.

Thus, SoundScapes can be thought of as reflecting the
@emph{mood} of the current @emph{mode}.
This package defines a single @var{soundscape-default-theme}
that is loaded using @code{(soundscape-load soundscape-default-theme)}.
Emacs modes that provide similar functionality e.g.,
communication == email, IM, ... map to  the same @emph{mood}.

@subsection Soundscape Commands

@subsubsection soundscape
@deffn {Command} soundscape  (scape)
@table @kbd
@item C-. s
@kindex C-. s
@item C-x @@ s s
@kindex C-x @@ s s
@end table

@findex soundscape

@format
Play soundscape.

(fn SCAPE)
@end format
@end deffn

@subsubsection soundscape-kill
@deffn {Command} soundscape-kill   
@findex soundscape-kill

@format
Stop all running soundscapes.
@end format
@end deffn

@subsubsection soundscape-listener
@deffn {Command} soundscape-listener  (&optional restart)
@findex soundscape-listener

@format
Start  a Soundscape listener.
Listener is loaded with all Soundscapes defined in ‘soundscape-default-theme’ .
Optional interactive prefix arg restarts the listener.

(fn &optional RESTART)
@end format
@end deffn

@subsubsection soundscape-listener-shutdown
@deffn {Command} soundscape-listener-shutdown   
@findex soundscape-listener-shutdown

@format
Shutdown listener.
@end format
@end deffn

@subsubsection soundscape-remote
@deffn {Command} soundscape-remote  (names)
@findex soundscape-remote

@format
Activate scapes named ‘names’ --- a list of strings.

(fn NAMES)
@end format
@end deffn

@subsubsection soundscape-restart
@deffn {Command} soundscape-restart  (&optional prompt)
@table @kbd
@item C-. r
@kindex C-. r
@item C-x @@ s r
@kindex C-x @@ s r
@end table

@findex soundscape-restart

@format
Restart Soundscape  environment.
With prefix arg ‘prompt’, prompt for a alsa/ladspa device and volume.
The  is then saved to soundscape-device for future use.

(fn &optional PROMPT)
@end format
@end deffn

@subsubsection soundscape-stop
@deffn {Command} soundscape-stop  (scape)
@findex soundscape-stop

@format
Stop running Soundscape.

(fn SCAPE)
@end format
@end deffn

@subsubsection soundscape-theme
@deffn {Command} soundscape-theme   
@findex soundscape-theme

@format
Shows default theme in a special buffer.
@end format
@end deffn

@subsubsection soundscape-toggle
@deffn {Command} soundscape-toggle   
@table @kbd
@item C-. t
@kindex C-. t
@item C-x @@ s t
@kindex C-x @@ s t
@end table

@findex soundscape-toggle

@format
Toggle automatic SoundScapes.
Run command M-x soundscape-theme to see the default mode->mood mapping.
@end format
@end deffn

@subsubsection soundscape-update-mood
@deffn {Command} soundscape-update-mood  (&optional prompt-mode)
@table @kbd
@item C-. u
@kindex C-. u
@item C-x @@ s u
@kindex C-x @@ s u
@end table

@findex soundscape-update-mood

@format
Update mood/scape mapping for current  mode.
The  updated mapping is not persisted.
Optional interactive prefix arg ‘prompt-mode’ prompts for the mode.

(fn &optional PROMPT-MODE)
@end format
@end deffn

@subsection soundscape Options

@defvar {User Option} soundscape-data
Soundscape data directory.

Default Value: 

@verbatim

"/home/raman/.boodler/Collection"

@end verbatim

@end defvar

@defvar {User Option} soundscape-device
Alsa sound device to use for soundscapes.

Default Value: 

@verbatim

"default"

@end verbatim

@end defvar

@defvar {User Option} soundscape-manager-options
User customizable options list passed to boodler.
Defaults specify alsa as the output and set master volume

Default Value: 

@verbatim

("-m" "0.3")

@end verbatim

@end defvar

@node sox
@section sox

This module defines a convenient speech-enabled
interface for editing mp3 and wav files using SoX.

Launching M-x sox  creates a special interaction buffer
that provides single keystroke commands for editing and
applying effects to a selected sound file. For adding mp3
support to sox, do

sudo apt-get libsox-fmt-mp3 install

This module provides support for ladspa effects using module ladspa.el.
To use ladspa effects with SoX, you need a relatively new build of Sox;
The stock SoX that is package for Debian/Ubuntu  does not always work.
This module can be used independent of Emacspeak.

@subsection Sox Commands

@subsubsection sox-add-effect
@deffn {Command} sox-add-effect  (name)
@findex sox-add-effect

@format
Adds  effect at the end of the effect list

(fn NAME)
@end format
@end deffn

@subsubsection sox-delete-effect-at-point
@deffn {Command} sox-delete-effect-at-point   
@findex sox-delete-effect-at-point

@format
Delete effect at point.

This function has :around advice: ‘ad-Advice-sox-delete-effect-at-point’.

(fn)
@end format
@end deffn

@subsubsection sox-edit-effect-at-point
@deffn {Command} sox-edit-effect-at-point   
@findex sox-edit-effect-at-point

@format
Edit effect at point.
@end format
@end deffn

@subsubsection sox-mode
@deffn {Command} sox-mode   
@findex sox-mode

@format
An audio workbench for the Emacspeak desktop.

In addition to any hooks its parent mode ‘special-mode’ might have
run, this mode runs the hook ‘sox-mode-hook’, as the final or
penultimate step during initialization.

@end format
@end deffn

@subsubsection sox-open-file
@deffn {Command} sox-open-file  (snd-file)
@findex sox-open-file

@format
Open specified snd-file on the Audio Workbench.

This function has :around advice: ‘ad-Advice-sox-open-file’.

(fn SND-FILE)
@end format
@end deffn

@subsubsection sox-play
@deffn {Command} sox-play   
@findex sox-play

@format
Play sound .
@end format
@end deffn

@subsubsection sox-refresh
@deffn {Command} sox-refresh   
@findex sox-refresh

@format
Redraw Audio Workbench.

This function has :around advice: ‘ad-Advice-sox-refresh’.

(fn)
@end format
@end deffn

@subsubsection sox-save
@deffn {Command} sox-save  (save-file)
@findex sox-save

@format
Save context to  file after prompting.

(fn SAVE-FILE)
@end format
@end deffn

@subsubsection sox-set-effect
@deffn {Command} sox-set-effect  (name)
@findex sox-set-effect

@format
Set effect.

(fn NAME)
@end format
@end deffn

@subsubsection sox-show-timestamp
@deffn {Command} sox-show-timestamp   
@findex sox-show-timestamp

@format
Show timestamp   in stream.
@end format
@end deffn

@subsubsection sox-stop
@deffn {Command} sox-stop   
@findex sox-stop

@format
Stop currently playing  sound from current context.
@end format
@end deffn

@node sox-gen
@section sox-gen

Provides binaural audio along with pre-defined themes.
This module can be used independent of Emacspeak.

@subsection Binaural Beats  Using SoX

A binaural beat is an auditory illusion perceived when two different
pure-tone sine waves, both with frequencies lower than 1500 Hz, with
less than a 40 Hz difference between them, are presented to a listener
dichotically (one through each ear). For example, if a 530 Hz pure tone
is presented to a subject's right ear, while a 520 Hz pure tone is
presented to the subject's left ear, the listener will perceive the
auditory illusion of a third tone, in addition to the two pure-tones
presented to each ear. The third sound is called a binaural beat, and in
this example would have a perceived pitch correlating to a frequency of
10 Hz, that being the difference between the 530 Hz and 520 Hz pure
tones presented to each ear. For more details, see
@url{https://en.wikipedia.org/wiki/Binaural_beats}.

This module implements a set of user-facing commands for generating
binaural beats. The commands are organized from high-level commands that
play predefined binaural beats to lower-level commands that can be
used to create new effect sequences.

All binaural beat sequences are played with a relatively low gain
--- they are designed to be heard in the background and when
effective blend fully into the background. You can increase the
overall volume of all binaural beat sequences by customizing
@defvar {User Option} sox-binaural-gain-offset to a positive value
@end defvar
--- default is 0.

@subsubsection High-Level Commands For Pre-Defined Binaural Beats

These commands can be called directly to play one of the predefined
binaural beats.

@itemize
@item @command{sox-rev-up}: A set of binaural beats designed for  use
at the start of the day. Transitions from @emph{Dream} -> @emph{Think}
->@emph{Act} -> @emph{Focus}.
@item @command{sox-wind-down}: A  set of binaural beats for winding down
at the end of the day. This can be thought of as the reverse of
@command{sox-rev-up} and the sequence transitions from @emph{Act} ->
@emph{Think} -> @emph{Dream} ->@emph{Sleep}.
@item @command{sox-turn-down}: Designed for falling asleep.
This sequence starts with a short period of @emph{Dream} before moving
to @emph{Sleep}.
@item @command{sox-relax}:  A variant of the previous sequence,
@code{sox-relax} spends equal time in @emph{Dream} and @emph{Sleep}.
@item @command{sox-binaural}: Provide a completion-based front-end to
playing any one of the predefined binaural effects (@emph{Delta},
@emph{Theta}, @emph{Alpha}, @emph{Beta}, or @emph{Gamma}. The previously
defined sequences are built up using these effects.
@item @command{sox-beats-binaural}: Plays a collection of binaural
beats, prompting for carrier and beat frequencies for each tone. The
predefined sequences listed earlier were created after first generating
experimental beat-sequences using this command.
@item @command{sox-slide-binaural}: Prompts for two binaural effects
(see above) and generates a binaural beat that @emph{slides} from the
first effect to the second over a specified duration.
@item @command{sox-chakras}: Pick  amongst one of a predefined set of
sequences designed for @emph{Chakra} meditation.
@item @command{sox-tone-binaural}: Generate a simple binaural beat
with a single carrier frequency.
@item @command{sox-tone-slide-binaural}: Generate a  tone that slides
from one binaural beat to another.
@end itemize

@subsection Sox-Gen Commands

@subsubsection sox-beats-binaural
@deffn {Command} sox-beats-binaural  (length beat-spec-list gain)
@findex sox-beats-binaural

@format
Play binaural audio with beat-spec specifying the various tones.
Param ‘beat-spec-list’ is a list of ‘(carrier beat) tuples.

(fn LENGTH BEAT-SPEC-LIST GAIN)
@end format
@end deffn

@subsubsection sox-binaural
@deffn {Command} sox-binaural  (name duration)
@table @kbd
@item C-, b
@kindex C-, b
@item C-x @@ a b
@kindex C-x @@ a b
@end table

@findex sox-binaural

@format
Play specified binaural effect.

(fn NAME DURATION)
@end format
@end deffn

@subsubsection sox-chakras
@deffn {Command} sox-chakras  (theme duration)
@findex sox-chakras

@format
Play each chakra for specified duration.
Parameter ‘theme’ specifies variant.

(fn THEME DURATION)
@end format
@end deffn

@subsubsection sox-relax
@deffn {Command} sox-relax  (length)
@findex sox-relax

@format
Play relax set of  binaural beats for ‘length’ seconds.

(fn LENGTH)
@end format
@end deffn

@subsubsection sox-rev-up
@deffn {Command} sox-rev-up  (length)
@findex sox-rev-up

@format
Play rev-up set of  binaural beats for ‘length’ seconds. 

(fn LENGTH)
@end format
@end deffn

@subsubsection sox-slide-binaural
@deffn {Command} sox-slide-binaural  (name-1 name-2 duration)
@findex sox-slide-binaural

@format
Play specified binaural slide from ‘name-1’ to ‘name-2’.

(fn NAME-1 NAME-2 DURATION)
@end format
@end deffn

@subsubsection sox-tone-binaural
@deffn {Command} sox-tone-binaural  (length freq beat gain)
@findex sox-tone-binaural

@format
Play binaural audio with carrier frequency ‘freq’, beat ‘beat’, and
gain ‘gain’.

(fn LENGTH FREQ BEAT GAIN)
@end format
@end deffn

@subsubsection sox-tone-slide-binaural
@deffn {Command} sox-tone-slide-binaural  (length freq beat-start beat-end gain)
@findex sox-tone-slide-binaural

@format
Play binaural audio with carrier frequency ‘freq’, beat
‘beat-start’ -> ‘beat-end’, and gain ‘gain’.

(fn LENGTH FREQ BEAT-START BEAT-END GAIN)
@end format
@end deffn

@subsubsection sox-turn-down
@deffn {Command} sox-turn-down  (length)
@findex sox-turn-down

@format
Play turn-down set of  binaural beats for ‘length’ seconds. 

(fn LENGTH)
@end format
@end deffn

@subsubsection sox-wind-down
@deffn {Command} sox-wind-down  (length)
@findex sox-wind-down

@format
Play wind-down set of  binaural beats for ‘length’ seconds.

(fn LENGTH)
@end format
@end deffn

@subsection sox-gen Options

@defvar {User Option} sox-binaural-gain-offset
User specified offset that is added to default gain when generating
tones using SoX, e.g., for binaural beats.

Default Value: 

@verbatim

0

@end verbatim

@end defvar

@defvar {User Option} sox-binaural-slider-scale
Scale factor used to compute slide duration when moving from one
binaural beat to another.

Default Value: 

@verbatim

5.0

@end verbatim

@end defvar

@node tetris
@section tetris

@node voice-defs
@section voice-defs

Contains just the voice definitions. Voices are defined using the
macro @code{defvoice} from  module voice-setup.
@subsection An Overview Of Voice Design

Aural CSS defines 4 primary device-independent dimensions.
Average-Pitch, Pitch-Range, Stress, and Richness. There are ten
possible values along each dimension (0..9), giving a total of
10,000 possible settings.

Engine-specific modules such as dectalk-voices and outloud-voices
map these dimensions to device-specific parameters and are
responsible for generating the final device-specific codes.
@subsection Creating  Distinct Voices  Via Aural CSS
Along each dimension, a setting of 5 is mapped to the default
setting for the voice as implemented by a given engine. Values on
either side of  5 produce opposing effects.
This module  defines the following effects, which can be
conceptualized as pairs.
@enumerate  A
@item bolden , lighten
@item animate, monotone
@item brighten, smoothen
@end enumerate
In addition, we define @code{bolden-and-animate} as an auditory
analog of @code{bold-italic}.
The two additional voices @code{indent} and @code{annotate}
predate the above and are retained  as two @emph{softer} voices.
Finally, there are 4 @emph{overlay} voices, corresponding  to the
4 dimensions; these each set one of the dimensions to @code{8}.
Thus, we have a total of 25 unique voices defined in this module.
@subsection Things to note
@itemize
@item These voices are designed to be distinctive when used in  a given
utterance.
@item Non-goal ---  to be able to identify each distinct voice in
isolation.
@item Audio-formatting is designed to set apart different types of
content so that when used in context, one can easily pick-out
distinct parts of the utterance.
@end itemize

@subsection voice-defs Options

@defvar {User Option} voice-animate-extra-settings
Settings for voice-animate-extra

Default Value: 

@verbatim

(nil nil 8 8 8)

@end verbatim

@end defvar

@defvar {User Option} voice-animate-medium-settings
Settings for voice-animate-medium

Default Value: 

@verbatim

(nil nil 7 7 7)

@end verbatim

@end defvar

@defvar {User Option} voice-animate-settings
Settings for voice-animate

Default Value: 

@verbatim

(nil nil 6 6 6)

@end verbatim

@end defvar

@defvar {User Option} voice-annotate-settings
Settings for voice-annotate

Default Value: 

@verbatim

(nil nil 4 0 4)

@end verbatim

@end defvar

@defvar {User Option} voice-bolden-and-animate-settings
Settings for voice-bolden-and-animate

Default Value: 

@verbatim

(nil 3 8 8 8)

@end verbatim

@end defvar

@defvar {User Option} voice-bolden-extra-settings
Settings for voice-bolden-extra

Default Value: 

@verbatim

(nil 1 nil 8)

@end verbatim

@end defvar

@defvar {User Option} voice-bolden-medium-settings
Settings for voice-bolden-medium

Default Value: 

@verbatim

(nil 2 nil 3)

@end verbatim

@end defvar

@defvar {User Option} voice-bolden-settings
Settings for voice-bolden

Default Value: 

@verbatim

(nil 3 nil 6)

@end verbatim

@end defvar

@defvar {User Option} voice-brighten-extra-settings
Settings for voice-brighten-extra

Default Value: 

@verbatim

(nil nil nil 3 8)

@end verbatim

@end defvar

@defvar {User Option} voice-brighten-medium-settings
Settings for voice-brighten-medium

Default Value: 

@verbatim

(nil nil nil 4 7)

@end verbatim

@end defvar

@defvar {User Option} voice-brighten-settings
Settings for voice-brighten

Default Value: 

@verbatim

(nil nil nil 5 6)

@end verbatim

@end defvar

@defvar {User Option} voice-indent-settings
Settings for voice-indent

Default Value: 

@verbatim

(nil nil 3 1 3)

@end verbatim

@end defvar

@defvar {User Option} voice-lighten-extra-settings
Settings for voice-lighten-extra

Default Value: 

@verbatim

(nil 9 nil 4)

@end verbatim

@end defvar

@defvar {User Option} voice-lighten-medium-settings
Settings for voice-lighten-medium

Default Value: 

@verbatim

(nil 7 nil 3)

@end verbatim

@end defvar

@defvar {User Option} voice-lighten-settings
Settings for voice-lighten

Default Value: 

@verbatim

(nil 6 nil 2)

@end verbatim

@end defvar

@defvar {User Option} voice-monotone-extra-settings
Settings for voice-monotone-extra

Default Value: 

@verbatim

(nil nil 0 0)

@end verbatim

@end defvar

@defvar {User Option} voice-monotone-medium-settings
Settings for voice-monotone-medium

Default Value: 

@verbatim

(nil nil 1 2)

@end verbatim

@end defvar

@defvar {User Option} voice-monotone-settings
Settings for voice-monotone

Default Value: 

@verbatim

(nil nil 2 4)

@end verbatim

@end defvar

@defvar {User Option} voice-overlay-0-settings
Settings for voice-overlay-0

Default Value: 

@verbatim

(nil 8 nil nil nil nil)

@end verbatim

@end defvar

@defvar {User Option} voice-overlay-1-settings
Settings for voice-overlay-1

Default Value: 

@verbatim

(nil nil 8 nil nil nil)

@end verbatim

@end defvar

@defvar {User Option} voice-overlay-2-settings
Settings for voice-overlay-2

Default Value: 

@verbatim

(nil nil nil 8 nil nil)

@end verbatim

@end defvar

@defvar {User Option} voice-overlay-3-settings
Settings for voice-overlay-3

Default Value: 

@verbatim

(nil nil nil nil 8 nil)

@end verbatim

@end defvar

@defvar {User Option} voice-smoothen-extra-settings
Settings for voice-smoothen-extra

Default Value: 

@verbatim

(nil nil nil 0 2)

@end verbatim

@end defvar

@defvar {User Option} voice-smoothen-medium-settings
Settings for voice-smoothen-medium

Default Value: 

@verbatim

(nil nil nil 2 4)

@end verbatim

@end defvar

@defvar {User Option} voice-smoothen-settings
Settings for voice-smoothen

Default Value: 

@verbatim

(nil nil nil 4 6)

@end verbatim

@end defvar

@node voice-setup
@section voice-setup

A voice is to audio as a font is to a visual display.
A personality is to audio as a face is to a visual display.

Voice-lock-mode is a minor mode that causes your comments to be
spoken in one personality, strings in another, reserved words in another,
documentation strings in another, and so on.

Comments will be spoken in `voice-comment-personality'.
Strings will be spoken in `voice-string-personality'.
Function  (in their defining forms) will be
 spoken in `voice-function-name-personality'.
Reserved words will be spoken in `voice-keyword-personality'.

To audio-format  text , use M-x voice-lock-mode.
When this minor mode is on, the voices of the current line are
updated with every insertion or deletion.

@subsection Voice-Lock And Aural CSS
The CSS Speech Style Sheet specification defines a number of
abstract device independent voice properties.
A setting conforming to the CSS speech specification can be
represented in elisp as a structure.

We will refer to this structure as a "speech style".  This
structure needs to be mapped to device dependent codes to produce
the desired effect.  This module forms a bridge between emacs
packages    that wish to implement audio formatting
and Emacspeak's TTS module.  Emacspeak produces voice
change effects by examining the value of text-property
'personality', as well as the face/font at point.

Think of a buffer of formatted text along with the text-property
'personality appropriately set as a "aural display list".  Module
voice-setup.el help applications like EWW produce audio-formatted
output by calling function voice-acss-from-speech-style with
a "speech-style" --a structure as defined in this module and get
back a symbol that they assign to the value of property
'personality.  Emacspeak's rendering engine then does the needful
at the time speech is produced.  Function
voice-acss-from-speech-style does the following: Takes as
input a "speech style" (1) Computes a symbol that will be used to
refer to this specific speech style.  (2) Examines emacspeak's
internal voice table to see if this speech style has a voice
already defined.  If so it returns immediately.  Otherwise, it
does the additional work of defining a -voice for future use.  See
its use in this module to see how voices are defined independent
of a given TTS engine.  How faces map to voices: TTS engine
specific modules e.g., dectalk-voices.el and outloud-voices.el map
ACSS dimensions to engine-specific codes.  Emacspeak modules use
voice-setup-add-map when defining face->personality mappings.  For
use from other modules.

@subsection Voice-Setup Commands

@subsubsection voice-lock-mode
@deffn {Command} voice-lock-mode  (&optional arg)
@table @kbd
@item C-e d v
@kindex C-e d v
@end table

@findex voice-lock-mode

@format
Toggle voice lock mode.

This is a minor mode.  If called interactively, toggle the
‘Voice-Lock mode’ mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is ‘toggle’.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate ‘voice-lock-mode’.

The mode’s hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)
@end format
@end deffn

@subsubsection voice-lock-mode--turn-on
@deffn {Command} voice-lock-mode--turn-on   
@findex voice-lock-mode--turn-on

@format
Turn on Voice Lock mode .
@end format
@end deffn

@subsubsection voice-setup-toggle-silence-personality
@deffn {Command} voice-setup-toggle-silence-personality   
@findex voice-setup-toggle-silence-personality

@format
Toggle audibility of personality under point  . 
@end format
@end deffn

@subsection voice-setup Options

@defvar {User Option} voice-lock-mode-hook
Hook run after entering or leaving ‘voice-lock-mode’.
No problems result if this variable is not bound.
‘add-hook’ automatically binds it.  (This is true for all hook variables.)

Default Value: 

@verbatim

(voice-lock-mode-set-explicitly)

@end verbatim

@end defvar

@node xbacklight
@section xbacklight

Provide an emacs front-end to xbacklight.
This is a tool that controls the brightness on laptops.
To install xbacklight,
sudo apt-get install xbacklight

This module  is most   easily used in conjunction with  hydra:
M-x package-install hydra

@subsection Xbacklight Commands

@subsubsection xbacklight-black
@deffn {Command} xbacklight-black   
@findex xbacklight-black

@format
Black screen.
@end format
@end deffn

@subsubsection xbacklight-decrement
@deffn {Command} xbacklight-decrement   
@findex xbacklight-decrement

@format
Decrease brightness.
@end format
@end deffn

@subsubsection xbacklight-get
@deffn {Command} xbacklight-get   
@findex xbacklight-get

@format
Get  brightness level.
@end format
@end deffn

@subsubsection xbacklight-increment
@deffn {Command} xbacklight-increment   
@findex xbacklight-increment

@format
Increase brightness.
@end format
@end deffn

@subsubsection xbacklight-set
@deffn {Command} xbacklight-set  (brightness)
@findex xbacklight-set

@format
Set brightness.

(fn BRIGHTNESS)
@end format
@end deffn

@subsubsection xbacklight-white
@deffn {Command} xbacklight-white   
@findex xbacklight-white

@format
White screen.
@end format
@end deffn

@node URL Templates 
@section URL Templates

This section documents a total of 62 URL Templates.

All of these URL templates can be invoked via command
 @kbd{M-x emacspeak-url-template-fetch} normally bound to
 @kbd{C-e u}.
This command prompts for the name of the template, and completion
 is available via Emacs' minibuffer completion.
Each URL template carries out the following steps:
@itemize @bullet
@item Prompt for the relevant information.
@item Fetch the resulting URL using an appropriate fetcher.
@item Set up the resulting resource with appropriate
 customizations.
@end itemize
@enumerate 

@item @b{air traffic control}

Find live streams for Air Traffic Control.@item @b{airport conditions}

Display airport conditions from the FAA.@item @b{amazon product details by asin}

Retrieve product details from Amazon by either ISBN or ASIN.@item @b{aqi from wunderground}

Air quality from Wunderground@item @b{archwiki search}

Search Linux ArchWiki@item @b{bbc 5-live  schedule }

BBC Radio 5 Live  Schedule@item @b{bbc podcast directory}

BBC PodCast Directory@item @b{bbc r4 extra schedule }

BBC Radio 4 Extra Schedule@item @b{bbc r4 schedule }

BBC R4 Schedule@item @b{bbc sounds}

Search BBC Sounds@item @b{bing news}

Bing News results as RSS feed.@item @b{business headlines from cnn}

Money Headlines From CNN@item @b{cbs radio streams from streamtheworld}

Play radio stream.
Example: kcbsFM.
Format is stationid+AM/FM.@item @b{cnbc quotes}

Stock portfolio via CNBC@item @b{cnbc ticker}

Stock Quote via CNBC@item @b{cnn headlines}

News Headlines From CNN@item @b{cnn money}

CNN Money@item @b{cricinfo print}

Printer friendly   link on Cricinfo@item @b{dictionary lookup}

Dictionary Lookup@item @b{emacspeak search via google}

Search Emacspeak Site@item @b{espn cricinfo search}

Cricinfo Search Using Google@item @b{finance  google}

Lookup ticker on Google Finance.@item @b{finance summary from google}

Display top stocks  from Google Finance.@item @b{freesound}

Search FreeSound.@item @b{google news search}

Search Google news.@item @b{google scholar}

Google Scholar Search@item @b{google trends}

Google Trends@item @b{google weather}

Light-weight Google weather.@item @b{guardian rss feeds directory}

Guardian Feeds  Directory@item @b{hacker  news frontpage}

Display Hacker News Front Page@item @b{hacker  news search}

Display Hacker News Front Page@item @b{hoogle haskell api search}

Haskell API Search against a local server.@item @b{html google news search}

Search Google news.@item @b{microsoft search}

Bing results as RSS feed.@item @b{nba  standings}

Display NBA standings.@item @b{nls bard bookshelf}

NLS Bard Catalog: Most Popular. Login once before using this
template.@item @b{nls bard popular}

NLS Bard Catalog: Most Popular. Login once before using this
template.@item @b{nls bard recent}

NLS Bard Catalog: Recently Added. Login once before using this
template.@item @b{nls bard search}

Search NLS Bard Catalog. Login once before using this template.@item @b{npr}

Open NPR home , then display the alternative links to access RSS feeds.@item @b{online radiotime browser}

RadioTime Entry point.@item @b{online radiotime search}

RadioTime Search@item @b{openlibrary}

Open Library Search@item @b{player fm bbc rss feeds}

Player FM BBC RSS Feeds@item @b{radiotime categories}

RadioTime Categories @item @b{reddit at point}

Open RSS Feed for Reddit URL under point.@item @b{reddit by topic}

Open RSS Feed for Reddit Topic.@item @b{reddit front page}

Open  Feed for Reddit  Front Page.@item @b{reddit search}

Reddit Search Results Feed.@item @b{sourceforge browse mirrors}

Retrieve download page at Sourceforge for specified project.@item @b{sourceforge download}

Download specified file.@item @b{sourceforge project}

Open specified project page at SourceForge.@item @b{tech news from cnet}

Display tech news from CNET@item @b{tinyurl}

@item @b{tunein radio}

Translate StreamId to playable stream.@item @b{w3c irc logs}

Use this to pull up the
archived logs from the W3C IRC. You need to know the exact
name of the channel.@item @b{w3c lists}

Use this to pull up the
archived mail from the W3C list. You need to know the exact
name of the list.@item @b{washington post}

Washington Post Contents@item @b{wiki data search}

Search WikiData.@item @b{wikipedia at point}

Extract body content from Wikipedia link at point@item @b{wordnet search}

Look up term in WordNet.@item @b{yahoo rssnews}

News  From Yahoo As RSS.

@end enumerate

